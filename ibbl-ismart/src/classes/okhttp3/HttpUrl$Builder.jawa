record `okhttp3.HttpUrl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedFragment` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedPassword` @AccessFlag ;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedPathSegments` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedUsername` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.host` @AccessFlag ;
  `int` `okhttp3.HttpUrl$Builder.port` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.scheme` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L22db68.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22db6e.  v0:= "" @kind object;
  #L22db72.  v2.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L22db76.  v0:= "" @kind object;
  #L22db7a.  v2.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L22db7e.  v0:= -1I;
  #L22db80.  v2.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v0;
  #L22db84.  v0:= new `java.util.ArrayList`;
  #L22db88.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22db8e.  v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` := v0 @kind object;
  #L22db92.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22db96.  v1:= "" @kind object;
  #L22db9a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22dba0.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v8 @kind this, `java.lang.String` v9 @kind object, `boolean` v10 ) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L22d038.  v0:= 0I;
  #L22d03a.  v3:= 0I;
  #L22d03c.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22d042.  v1:= temp;
  #L22d044.  v2:= "/\\" @kind object;
  #L22d048.  call temp:= `delimiterOffset`(v9, v3, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L22d04e.  v7:= temp;
  #L22d050.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22d056.  v1:= temp;
  #L22d058.  if v7 >= v1 then goto L22d062;
  #L22d05c.  v1:= 1I;
  #L22d05e.  v5:= 1I;
  #L22d060.  goto L22d064;
  #L22d062.  v5:= 0I;
  #L22d064.  v1:= v8 @kind object;
  #L22d066.  v2:= v9 @kind object;
  #L22d068.  v4:= v7;
  #L22d06a.  v6:= v10;
  #L22d06c.  call `push`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L22d072.  v3:= v7 + 1;
  #L22d076.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22d07c.  v1:= temp;
  #L22d07e.  if v3 <= v1 then goto L22d03c;
  #L22d082.  return v8 @kind object;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L22cd30.  v0:= 0I;
  #L22cd32.  call temp:= `percentDecode`(v1, v2, v3, v0) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L22cd38.  v1:= temp @kind object;
  #L22cd3a.  call temp:= `canonicalizeHost`(v1) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22cd40.  v1:= temp @kind object;
  #L22cd42.  return v1 @kind object;
}
procedure `boolean` `isDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L22cae0.  v0:= "." @kind object;
  #L22cae4.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22caea.  v0:= temp;
  #L22caec.  if v0 != 0 then goto L22cb06;
  #L22caf0.  v0:= "%2e" @kind object;
  #L22caf4.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22cafa.  v2:= temp;
  #L22cafc.  if v2 == 0 then goto L22cb02;
  #L22cb00.  goto L22cb06;
  #L22cb02.  v2:= 0I;
  #L22cb04.  goto L22cb08;
  #L22cb06.  v2:= 1I;
  #L22cb08.  return v2;
}
procedure `boolean` `isDotDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L22cb1c.  v0:= ".." @kind object;
  #L22cb20.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22cb26.  v0:= temp;
  #L22cb28.  if v0 != 0 then goto L22cb62;
  #L22cb2c.  v0:= "%2e." @kind object;
  #L22cb30.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22cb36.  v0:= temp;
  #L22cb38.  if v0 != 0 then goto L22cb62;
  #L22cb3c.  v0:= ".%2e" @kind object;
  #L22cb40.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22cb46.  v0:= temp;
  #L22cb48.  if v0 != 0 then goto L22cb62;
  #L22cb4c.  v0:= "%2e%2e" @kind object;
  #L22cb50.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22cb56.  v2:= temp;
  #L22cb58.  if v2 == 0 then goto L22cb5e;
  #L22cb5c.  goto L22cb62;
  #L22cb5e.  v2:= 0I;
  #L22cb60.  goto L22cb64;
  #L22cb62.  v2:= 1I;
  #L22cb64.  return v2;
}
procedure `int` `parsePort`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L22cba4.  v0:= -1I;
  #L22cba6.  v4:= "" @kind object;
  #L22cbaa.  v5:= 0I;
  #L22cbac.  v6:= 0I;
  #L22cbae.  v7:= 0I;
  #L22cbb0.  v8:= 1I;
  #L22cbb2.  v9:= 0I;
  #L22cbb4.  v1:= v10 @kind object;
  #L22cbb6.  v2:= v11;
  #L22cbb8.  v3:= v12;
  #L22cbba.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22cbc0.  v10:= temp @kind object;
  #L22cbc2.  call temp:= `parseInt`(v10) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L22cbc8.  v10:= temp;
  #L22cbca.  if v10 <= 0 then goto L22cbda;
  #L22cbce.  v11:= 65535I;
  #L22cbd4.  if v10 > v11 then goto L22cbda;
  #L22cbd8.  return v10;
  #L22cbda.  return v0;
  #L22cbdc.  return v0;
  catch `java.lang.NumberFormatException` @[L22cba6..L22cbca] goto L22cbdc;
}
procedure `void` `pop`(`okhttp3.HttpUrl$Builder` v3 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L22dbb4.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dbb8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22dbbe.  v1:= temp;
  #L22dbc0.  v1:= v1 + -1;
  #L22dbc4.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L22dbca.  v0:= temp @kind object;
  #L22dbcc.  v0:= (`java.lang.String`) v0 @kind object;
  #L22dbd0.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22dbd6.  v0:= temp;
  #L22dbd8.  if v0 == 0 then goto L22dc08;
  #L22dbdc.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dbe0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L22dbe6.  v0:= temp;
  #L22dbe8.  if v0 != 0 then goto L22dc08;
  #L22dbec.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dbf0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22dbf6.  v1:= temp;
  #L22dbf8.  v1:= v1 + -1;
  #L22dbfc.  v2:= "" @kind object;
  #L22dc00.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22dc06.  goto L22dc16;
  #L22dc08.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dc0c.  v1:= "" @kind object;
  #L22dc10.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22dc16.  return @kind void;
}
procedure `int` `portColonOffset`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L22cc00.  if v3 >= v4 then goto L22cc3e;
  #L22cc04.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22cc0a.  v0:= temp;
  #L22cc0c.  v1:= 58I;
  #L22cc10.  if v0 == v1 then goto L22cc3c;
  #L22cc14.  v1:= 91I;
  #L22cc18.  if v0 == v1 then goto L22cc1e;
  #L22cc1c.  goto L22cc36;
  #L22cc1e.  v3:= v3 + 1;
  #L22cc22.  if v3 >= v4 then goto L22cc36;
  #L22cc26.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22cc2c.  v0:= temp;
  #L22cc2e.  v1:= 93I;
  #L22cc32.  if v0 != v1 then goto L22cc1e;
  #L22cc36.  v3:= v3 + 1;
  #L22cc3a.  goto L22cc00;
  #L22cc3c.  return v3;
  #L22cc3e.  return v4;
}
procedure `void` `push`(`okhttp3.HttpUrl$Builder` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L22dc28.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L22dc2c.  v5:= 0I;
  #L22dc2e.  v6:= 0I;
  #L22dc30.  v7:= 1I;
  #L22dc32.  v8:= 0I;
  #L22dc34.  v0:= v10 @kind object;
  #L22dc36.  v1:= v11;
  #L22dc38.  v2:= v12;
  #L22dc3a.  v4:= v14;
  #L22dc3c.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22dc42.  v10:= temp @kind object;
  #L22dc44.  call temp:= `isDot`(v9, v10) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L22dc4a.  v11:= temp;
  #L22dc4c.  if v11 == 0 then goto L22dc52;
  #L22dc50.  return @kind void;
  #L22dc52.  call temp:= `isDotDot`(v9, v10) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L22dc58.  v11:= temp;
  #L22dc5a.  if v11 == 0 then goto L22dc66;
  #L22dc5e.  call `pop`(v9) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @kind direct;
  #L22dc64.  return @kind void;
  #L22dc66.  v11:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dc6a.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22dc70.  v12:= temp;
  #L22dc72.  v12:= v12 + -1;
  #L22dc76.  call temp:= `get`(v11, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22dc7c.  v11:= temp @kind object;
  #L22dc7e.  v11:= (`java.lang.String`) v11 @kind object;
  #L22dc82.  call temp:= `isEmpty`(v11) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22dc88.  v11:= temp;
  #L22dc8a.  if v11 == 0 then goto L22dca6;
  #L22dc8e.  v11:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dc92.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22dc98.  v12:= temp;
  #L22dc9a.  v12:= v12 + -1;
  #L22dc9e.  call temp:= `set`(v11, v12, v10) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22dca4.  goto L22dcb0;
  #L22dca6.  v11:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dcaa.  call temp:= `add`(v11, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22dcb0.  if v13 == 0 then goto L22dcc2;
  #L22dcb4.  v10:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dcb8.  v11:= "" @kind object;
  #L22dcbc.  call temp:= `add`(v10, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22dcc2.  return @kind void;
}
procedure `void` `removeAllCanonicalQueryParameters`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L22dcd4.  v0:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22dcd8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22dcde.  v0:= temp;
  #L22dce0.  v0:= v0 + -2;
  #L22dce4.  if v0 < 0 then goto L22dd36;
  #L22dce8.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22dcec.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22dcf2.  v1:= temp @kind object;
  #L22dcf4.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22dcfa.  v1:= temp;
  #L22dcfc.  if v1 == 0 then goto L22dd30;
  #L22dd00.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22dd04.  v2:= v0 + 1;
  #L22dd08.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L22dd0e.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22dd12.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L22dd18.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22dd1c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L22dd22.  v1:= temp;
  #L22dd24.  if v1 == 0 then goto L22dd30;
  #L22dd28.  v4:= 0I;
  #L22dd2a.  v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v4 @kind object;
  #L22dd2e.  return @kind void;
  #L22dd30.  v0:= v0 + -2;
  #L22dd34.  goto L22dce4;
  #L22dd36.  return @kind void;
}
procedure `void` `resolvePath`(`okhttp3.HttpUrl$Builder` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L22dd48.  if v11 != v12 then goto L22dd4e;
  #L22dd4c.  return @kind void;
  #L22dd4e.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22dd54.  v0:= temp;
  #L22dd56.  v1:= 47I;
  #L22dd5a.  v2:= 1I;
  #L22dd5c.  if v0 == v1 then goto L22dd84;
  #L22dd60.  v1:= 92I;
  #L22dd64.  if v0 != v1 then goto L22dd6a;
  #L22dd68.  goto L22dd84;
  #L22dd6a.  v0:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dd6e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22dd74.  v1:= temp;
  #L22dd76.  v1:= v1 - v2 @kind int;
  #L22dd78.  v3:= "" @kind object;
  #L22dd7c.  call temp:= `set`(v0, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22dd82.  goto L22dda0;
  #L22dd84.  v0:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dd88.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L22dd8e.  v0:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22dd92.  v1:= "" @kind object;
  #L22dd96.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22dd9c.  v11:= v11 + 1;
  #L22dda0.  v5:= v11;
  #L22dda2.  if v5 >= v12 then goto L22ddd8;
  #L22dda6.  v11:= "/\\" @kind object;
  #L22ddaa.  call temp:= `delimiterOffset`(v10, v5, v12, v11) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L22ddb0.  v11:= temp;
  #L22ddb2.  if v11 >= v12 then goto L22ddba;
  #L22ddb6.  v0:= 1I;
  #L22ddb8.  goto L22ddbc;
  #L22ddba.  v0:= 0I;
  #L22ddbc.  v8:= 1I;
  #L22ddbe.  v3:= v9 @kind object;
  #L22ddc0.  v4:= v10 @kind object;
  #L22ddc2.  v6:= v11;
  #L22ddc4.  v7:= v0;
  #L22ddc6.  call `push`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L22ddcc.  if v0 == 0 then goto L22ddd4;
  #L22ddd0.  v11:= v11 + 1;
  #L22ddd4.  v5:= v11;
  #L22ddd6.  goto L22dda2;
  #L22ddd8.  return @kind void;
}
procedure `int` `schemeDelimiterOffset`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L22cc50.  v0:= v9 - v8 @kind int;
  #L22cc54.  v1:= -1I;
  #L22cc56.  v2:= 2I;
  #L22cc58.  if v0 >= v2 then goto L22cc5e;
  #L22cc5c.  return v1;
  #L22cc5e.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22cc64.  v0:= temp;
  #L22cc66.  v2:= 90I;
  #L22cc6a.  v3:= 122I;
  #L22cc6e.  v4:= 65I;
  #L22cc72.  v5:= 97I;
  #L22cc76.  if v0 < v5 then goto L22cc7e;
  #L22cc7a.  if v0 <= v3 then goto L22cc88;
  #L22cc7e.  if v0 < v4 then goto L22cce0;
  #L22cc82.  if v0 <= v2 then goto L22cc88;
  #L22cc86.  goto L22cce0;
  #L22cc88.  v8:= v8 + 1;
  #L22cc8c.  if v8 >= v9 then goto L22ccde;
  #L22cc90.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22cc96.  v0:= temp;
  #L22cc98.  if v0 < v5 then goto L22cca0;
  #L22cc9c.  if v0 <= v3 then goto L22cc88;
  #L22cca0.  if v0 < v4 then goto L22cca8;
  #L22cca4.  if v0 <= v2 then goto L22cc88;
  #L22cca8.  v6:= 48I;
  #L22ccac.  if v0 < v6 then goto L22ccb8;
  #L22ccb0.  v6:= 57I;
  #L22ccb4.  if v0 <= v6 then goto L22cc88;
  #L22ccb8.  v6:= 43I;
  #L22ccbc.  if v0 == v6 then goto L22cc88;
  #L22ccc0.  v6:= 45I;
  #L22ccc4.  if v0 == v6 then goto L22cc88;
  #L22ccc8.  v6:= 46I;
  #L22cccc.  if v0 != v6 then goto L22ccd2;
  #L22ccd0.  goto L22cc88;
  #L22ccd2.  v7:= 58I;
  #L22ccd6.  if v0 != v7 then goto L22ccdc;
  #L22ccda.  return v8;
  #L22ccdc.  return v1;
  #L22ccde.  return v1;
  #L22cce0.  return v1;
}
procedure `int` `slashCount`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22ccf4.  v0:= 0I;
  #L22ccf6.  if v4 >= v5 then goto L22cd1c;
  #L22ccfa.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22cd00.  v1:= temp;
  #L22cd02.  v2:= 92I;
  #L22cd06.  if v1 == v2 then goto L22cd12;
  #L22cd0a.  v2:= 47I;
  #L22cd0e.  if v1 != v2 then goto L22cd1c;
  #L22cd12.  v0:= v0 + 1;
  #L22cd16.  v4:= v4 + 1;
  #L22cd1a.  goto L22ccf6;
  #L22cd1c.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22ced4.  if v7 == 0 then goto L22cef2;
  #L22ced8.  v2:= 0I;
  #L22ceda.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22cee0.  v3:= temp;
  #L22cee2.  v4:= 0I;
  #L22cee4.  v5:= 1I;
  #L22cee6.  v0:= v6 @kind object;
  #L22cee8.  v1:= v7 @kind object;
  #L22ceea.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L22cef0.  return v6 @kind object;
  #L22cef2.  v7:= new `java.lang.NullPointerException`;
  #L22cef6.  v0:= "encodedPathSegment == null" @kind object;
  #L22cefa.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22cf00.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegments`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22cf14.  if v2 == 0 then goto L22cf24;
  #L22cf18.  v0:= 1I;
  #L22cf1a.  call temp:= `addPathSegments`(v1, v2, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L22cf20.  v2:= temp @kind object;
  #L22cf22.  return v2 @kind object;
  #L22cf24.  v2:= new `java.lang.NullPointerException`;
  #L22cf28.  v0:= "encodedPathSegments == null" @kind object;
  #L22cf2c.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22cf32.  throw v2;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L22cf44.  if v8 == 0 then goto L22cfa8;
  #L22cf48.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22cf4c.  if v0 != 0 then goto L22cf5e;
  #L22cf50.  v0:= new `java.util.ArrayList`;
  #L22cf54.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22cf5a.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L22cf5e.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22cf62.  v2:= " \"'<>#&=" @kind object;
  #L22cf66.  v3:= 1I;
  #L22cf68.  v4:= 0I;
  #L22cf6a.  v5:= 1I;
  #L22cf6c.  v6:= 1I;
  #L22cf6e.  v1:= v8 @kind object;
  #L22cf70.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22cf76.  v8:= temp @kind object;
  #L22cf78.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22cf7e.  v8:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22cf82.  if v9 == 0 then goto L22cf9e;
  #L22cf86.  v1:= " \"'<>#&=" @kind object;
  #L22cf8a.  v2:= 1I;
  #L22cf8c.  v3:= 0I;
  #L22cf8e.  v4:= 1I;
  #L22cf90.  v5:= 1I;
  #L22cf92.  v0:= v9 @kind object;
  #L22cf94.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22cf9a.  v9:= temp @kind object;
  #L22cf9c.  goto L22cfa0;
  #L22cf9e.  v9:= 0I;
  #L22cfa0.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22cfa6.  return v7 @kind object;
  #L22cfa8.  v8:= new `java.lang.NullPointerException`;
  #L22cfac.  v9:= "encodedName == null" @kind object;
  #L22cfb0.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22cfb6.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22cfc8.  if v7 == 0 then goto L22cfe6;
  #L22cfcc.  v2:= 0I;
  #L22cfce.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22cfd4.  v3:= temp;
  #L22cfd6.  v4:= 0I;
  #L22cfd8.  v5:= 0I;
  #L22cfda.  v0:= v6 @kind object;
  #L22cfdc.  v1:= v7 @kind object;
  #L22cfde.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L22cfe4.  return v6 @kind object;
  #L22cfe6.  v7:= new `java.lang.NullPointerException`;
  #L22cfea.  v0:= "pathSegment == null" @kind object;
  #L22cfee.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22cff4.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22d008.  if v2 == 0 then goto L22d018;
  #L22d00c.  v0:= 0I;
  #L22d00e.  call temp:= `addPathSegments`(v1, v2, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L22d014.  v2:= temp @kind object;
  #L22d016.  return v2 @kind object;
  #L22d018.  v2:= new `java.lang.NullPointerException`;
  #L22d01c.  v0:= "pathSegments == null" @kind object;
  #L22d020.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d026.  throw v2;
}
procedure `okhttp3.HttpUrl$Builder` `addQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L22d094.  if v8 == 0 then goto L22d0f8;
  #L22d098.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22d09c.  if v0 != 0 then goto L22d0ae;
  #L22d0a0.  v0:= new `java.util.ArrayList`;
  #L22d0a4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22d0aa.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L22d0ae.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22d0b2.  v2:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L22d0b6.  v3:= 0I;
  #L22d0b8.  v4:= 0I;
  #L22d0ba.  v5:= 1I;
  #L22d0bc.  v6:= 1I;
  #L22d0be.  v1:= v8 @kind object;
  #L22d0c0.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d0c6.  v8:= temp @kind object;
  #L22d0c8.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22d0ce.  v8:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22d0d2.  if v9 == 0 then goto L22d0ee;
  #L22d0d6.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L22d0da.  v2:= 0I;
  #L22d0dc.  v3:= 0I;
  #L22d0de.  v4:= 1I;
  #L22d0e0.  v5:= 1I;
  #L22d0e2.  v0:= v9 @kind object;
  #L22d0e4.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d0ea.  v9:= temp @kind object;
  #L22d0ec.  goto L22d0f0;
  #L22d0ee.  v9:= 0I;
  #L22d0f0.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22d0f6.  return v7 @kind object;
  #L22d0f8.  v8:= new `java.lang.NullPointerException`;
  #L22d0fc.  v9:= "name == null" @kind object;
  #L22d100.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d106.  throw v8;
}
procedure `okhttp3.HttpUrl` `build`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22ce88.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L22ce8c.  if v0 == 0 then goto L22ceb4;
  #L22ce90.  v0:= v2.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L22ce94.  if v0 == 0 then goto L22cea4;
  #L22ce98.  v0:= new `okhttp3.HttpUrl`;
  #L22ce9c.  call `<init>`(v0, v2) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @kind direct;
  #L22cea2.  return v0 @kind object;
  #L22cea4.  v0:= new `java.lang.IllegalStateException`;
  #L22cea8.  v1:= "host == null" @kind object;
  #L22ceac.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22ceb2.  throw v0;
  #L22ceb4.  v0:= new `java.lang.IllegalStateException`;
  #L22ceb8.  v1:= "scheme == null" @kind object;
  #L22cebc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22cec2.  throw v0;
}
procedure `int` `effectivePort`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L22cb78.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L22cb7c.  v1:= -1I;
  #L22cb7e.  if v0 == v1 then goto L22cb84;
  #L22cb82.  goto L22cb90;
  #L22cb84.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L22cb88.  call temp:= `defaultPort`(v0) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L22cb8e.  v0:= temp;
  #L22cb90.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `encodedFragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedFragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22d118.  if v7 == 0 then goto L22d134;
  #L22d11c.  v1:= "" @kind object;
  #L22d120.  v2:= 1I;
  #L22d122.  v3:= 0I;
  #L22d124.  v4:= 0I;
  #L22d126.  v5:= 0I;
  #L22d128.  v0:= v7 @kind object;
  #L22d12a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d130.  v7:= temp @kind object;
  #L22d132.  goto L22d136;
  #L22d134.  v7:= 0I;
  #L22d136.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v7 @kind object;
  #L22d13a.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPassword`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedPassword:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22d14c.  if v7 == 0 then goto L22d16c;
  #L22d150.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L22d154.  v2:= 1I;
  #L22d156.  v3:= 0I;
  #L22d158.  v4:= 0I;
  #L22d15a.  v5:= 1I;
  #L22d15c.  v0:= v7 @kind object;
  #L22d15e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d164.  v7:= temp @kind object;
  #L22d166.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v7 @kind object;
  #L22d16a.  return v6 @kind object;
  #L22d16c.  v7:= new `java.lang.NullPointerException`;
  #L22d170.  v0:= "encodedPassword == null" @kind object;
  #L22d174.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d17a.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPath`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedPath:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22d18c.  if v4 == 0 then goto L22d1e0;
  #L22d190.  v0:= "/" @kind object;
  #L22d194.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22d19a.  v0:= temp;
  #L22d19c.  if v0 == 0 then goto L22d1b2;
  #L22d1a0.  v0:= 0I;
  #L22d1a2.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22d1a8.  v1:= temp;
  #L22d1aa.  call `resolvePath`(v3, v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L22d1b0.  return v3 @kind object;
  #L22d1b2.  v0:= new `java.lang.IllegalArgumentException`;
  #L22d1b6.  v1:= new `java.lang.StringBuilder`;
  #L22d1ba.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22d1c0.  v2:= "unexpected encodedPath: " @kind object;
  #L22d1c4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d1ca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d1d0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22d1d6.  v4:= temp @kind object;
  #L22d1d8.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d1de.  throw v0;
  #L22d1e0.  v4:= new `java.lang.NullPointerException`;
  #L22d1e4.  v0:= "encodedPath == null" @kind object;
  #L22d1e8.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d1ee.  throw v4;
}
procedure `okhttp3.HttpUrl$Builder` `encodedQuery`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22d200.  if v7 == 0 then goto L22d224;
  #L22d204.  v1:= " \"'<>#" @kind object;
  #L22d208.  v2:= 1I;
  #L22d20a.  v3:= 0I;
  #L22d20c.  v4:= 1I;
  #L22d20e.  v5:= 1I;
  #L22d210.  v0:= v7 @kind object;
  #L22d212.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d218.  v7:= temp @kind object;
  #L22d21a.  call temp:= `queryStringToNamesAndValues`(v7) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L22d220.  v7:= temp @kind object;
  #L22d222.  goto L22d226;
  #L22d224.  v7:= 0I;
  #L22d226.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v7 @kind object;
  #L22d22a.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedUsername`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedUsername:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22d23c.  if v7 == 0 then goto L22d25c;
  #L22d240.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L22d244.  v2:= 1I;
  #L22d246.  v3:= 0I;
  #L22d248.  v4:= 0I;
  #L22d24a.  v5:= 1I;
  #L22d24c.  v0:= v7 @kind object;
  #L22d24e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d254.  v7:= temp @kind object;
  #L22d256.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v7 @kind object;
  #L22d25a.  return v6 @kind object;
  #L22d25c.  v7:= new `java.lang.NullPointerException`;
  #L22d260.  v0:= "encodedUsername == null" @kind object;
  #L22d264.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d26a.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `fragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.fragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22d27c.  if v7 == 0 then goto L22d298;
  #L22d280.  v1:= "" @kind object;
  #L22d284.  v2:= 0I;
  #L22d286.  v3:= 0I;
  #L22d288.  v4:= 0I;
  #L22d28a.  v5:= 0I;
  #L22d28c.  v0:= v7 @kind object;
  #L22d28e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d294.  v7:= temp @kind object;
  #L22d296.  goto L22d29a;
  #L22d298.  v7:= 0I;
  #L22d29a.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v7 @kind object;
  #L22d29e.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `host`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22d2b0.  if v4 == 0 then goto L22d2fe;
  #L22d2b4.  v0:= 0I;
  #L22d2b6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22d2bc.  v1:= temp;
  #L22d2be.  call temp:= `canonicalizeHost`(v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L22d2c4.  v0:= temp @kind object;
  #L22d2c6.  if v0 == 0 then goto L22d2d0;
  #L22d2ca.  v3.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v0 @kind object;
  #L22d2ce.  return v3 @kind object;
  #L22d2d0.  v0:= new `java.lang.IllegalArgumentException`;
  #L22d2d4.  v1:= new `java.lang.StringBuilder`;
  #L22d2d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22d2de.  v2:= "unexpected host: " @kind object;
  #L22d2e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d2e8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d2ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22d2f4.  v4:= temp @kind object;
  #L22d2f6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d2fc.  throw v0;
  #L22d2fe.  v4:= new `java.lang.NullPointerException`;
  #L22d302.  v0:= "host == null" @kind object;
  #L22d306.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d30c.  throw v4;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult` `parse`(`okhttp3.HttpUrl$Builder` v19 @kind this, `okhttp3.HttpUrl` v20 @kind object, `java.lang.String` v21 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L22d7c8.  v0:= v19 @kind object;
  #L22d7cc.  v1:= v20 @kind object;
  #L22d7d0.  v10:= v21 @kind object;
  #L22d7d4.  call temp:= `length`(v21) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22d7da.  v2:= temp;
  #L22d7dc.  v8:= 0I;
  #L22d7de.  call temp:= `skipLeadingAsciiWhitespace`(v10, v8, v2) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L22d7e4.  v9:= temp;
  #L22d7e6.  call temp:= `length`(v21) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22d7ec.  v2:= temp;
  #L22d7ee.  call temp:= `skipTrailingAsciiWhitespace`(v10, v9, v2) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L22d7f4.  v11:= temp;
  #L22d7f6.  call temp:= `schemeDelimiterOffset`(v10, v9, v11) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @kind static;
  #L22d7fc.  v2:= temp;
  #L22d7fe.  v12:= -1I;
  #L22d800.  if v2 == v12 then goto L22d85e;
  #L22d804.  v3:= 1I;
  #L22d806.  v5:= "https:" @kind object;
  #L22d80a.  v6:= 0I;
  #L22d80c.  v7:= 6I;
  #L22d80e.  v2:= v21 @kind object;
  #L22d812.  v4:= v9;
  #L22d814.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L22d81a.  v2:= temp;
  #L22d81c.  if v2 == 0 then goto L22d82e;
  #L22d820.  v2:= "https" @kind object;
  #L22d824.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v2 @kind object;
  #L22d828.  v9:= v9 + 6;
  #L22d82c.  goto L22d86a;
  #L22d82e.  v3:= 1I;
  #L22d830.  v5:= "http:" @kind object;
  #L22d834.  v6:= 0I;
  #L22d836.  v7:= 5I;
  #L22d838.  v2:= v21 @kind object;
  #L22d83c.  v4:= v9;
  #L22d83e.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L22d844.  v2:= temp;
  #L22d846.  if v2 == 0 then goto L22d858;
  #L22d84a.  v2:= "http" @kind object;
  #L22d84e.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v2 @kind object;
  #L22d852.  v9:= v9 + 5;
  #L22d856.  goto L22d86a;
  #L22d858.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22d85c.  return v1 @kind object;
  #L22d85e.  if v1 == 0 then goto L22db40;
  #L22d862.  v2:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22d866.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v2 @kind object;
  #L22d86a.  call temp:= `slashCount`(v10, v9, v11) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @kind static;
  #L22d870.  v2:= temp;
  #L22d872.  v3:= 2I;
  #L22d874.  v13:= 35I;
  #L22d878.  if v2 >= v3 then goto L22d8fe;
  #L22d87c.  if v1 == 0 then goto L22d8fe;
  #L22d880.  v3:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22d884.  v4:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L22d888.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22d88e.  v3:= temp;
  #L22d890.  if v3 != 0 then goto L22d896;
  #L22d894.  goto L22d8fe;
  #L22d896.  call temp:= `encodedUsername`(v20) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L22d89c.  v2:= temp @kind object;
  #L22d89e.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v2 @kind object;
  #L22d8a2.  call temp:= `encodedPassword`(v20) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L22d8a8.  v2:= temp @kind object;
  #L22d8aa.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v2 @kind object;
  #L22d8ae.  v2:= v1.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L22d8b2.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v2 @kind object;
  #L22d8b6.  v2:= v1.`okhttp3.HttpUrl.port` @type ^`int`;
  #L22d8ba.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v2;
  #L22d8be.  v2:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d8c2.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L22d8c8.  v2:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d8cc.  call temp:= `encodedPathSegments`(v20) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L22d8d2.  v3:= temp @kind object;
  #L22d8d4.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L22d8da.  if v9 == v11 then goto L22d8ea;
  #L22d8de.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22d8e4.  v2:= temp;
  #L22d8e6.  if v2 != v13 then goto L22d8f8;
  #L22d8ea.  call temp:= `encodedQuery`(v20) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L22d8f0.  v1:= temp @kind object;
  #L22d8f2.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22d8f8.  v13:= v9;
  #L22d8fa.  goto L22daa2;
  #L22d8fe.  v9:= v9 + v2 @kind int;
  #L22d900.  v2:= v9;
  #L22d902.  v15:= 0I;
  #L22d904.  v16:= 0I;
  #L22d908.  v1:= "@/\\?#" @kind object;
  #L22d90c.  call temp:= `delimiterOffset`(v10, v2, v11, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L22d912.  v9:= temp;
  #L22d914.  if v9 == v11 then goto L22d922;
  #L22d918.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22d91e.  v1:= temp;
  #L22d920.  goto L22d924;
  #L22d922.  v1:= -1I;
  #L22d924.  if v1 == v12 then goto L22da40;
  #L22d928.  if v1 == v13 then goto L22da40;
  #L22d92c.  v3:= 47I;
  #L22d930.  if v1 == v3 then goto L22da40;
  #L22d934.  v3:= 92I;
  #L22d938.  if v1 == v3 then goto L22da40;
  #L22d93c.  goto L22db48;
  #L22d942.  goto L22da38;
  #L22d946.  if v15 != 0 then goto L22d9e6;
  #L22d94a.  v1:= 58I;
  #L22d94e.  call temp:= `delimiterOffset`(v10, v2, v9, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L22d954.  v8:= temp;
  #L22d956.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L22d95a.  v5:= 1I;
  #L22d95c.  v6:= 0I;
  #L22d95e.  v7:= 0I;
  #L22d960.  v17:= 1I;
  #L22d964.  v18:= 0I;
  #L22d968.  v1:= v21 @kind object;
  #L22d96c.  v3:= v8;
  #L22d96e.  v14:= v8;
  #L22d970.  v8:= v17;
  #L22d974.  v13:= v9;
  #L22d976.  v9:= v18 @kind object;
  #L22d97a.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22d980.  v1:= temp @kind object;
  #L22d982.  if v16 == 0 then goto L22d9b2;
  #L22d986.  v2:= new `java.lang.StringBuilder`;
  #L22d98a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22d990.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L22d994.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d99a.  v3:= "%40" @kind object;
  #L22d99e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d9a4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d9aa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22d9b0.  v1:= temp @kind object;
  #L22d9b2.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v1 @kind object;
  #L22d9b6.  if v14 == v13 then goto L22d9e0;
  #L22d9ba.  v2:= v14 + 1;
  #L22d9be.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L22d9c2.  v5:= 1I;
  #L22d9c4.  v6:= 0I;
  #L22d9c6.  v7:= 0I;
  #L22d9c8.  v8:= 1I;
  #L22d9ca.  v9:= 0I;
  #L22d9cc.  v1:= v21 @kind object;
  #L22d9d0.  v3:= v13;
  #L22d9d2.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22d9d8.  v1:= temp @kind object;
  #L22d9da.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L22d9de.  v15:= 1I;
  #L22d9e0.  v16:= 1I;
  #L22d9e4.  goto L22da34;
  #L22d9e6.  v13:= v9;
  #L22d9e8.  v14:= new `java.lang.StringBuilder`;
  #L22d9ec.  call `<init>`(v14) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22d9f2.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L22d9f6.  call temp:= `append`(v14, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d9fc.  v1:= "%40" @kind object;
  #L22da00.  call temp:= `append`(v14, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22da06.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L22da0a.  v5:= 1I;
  #L22da0c.  v6:= 0I;
  #L22da0e.  v7:= 0I;
  #L22da10.  v8:= 1I;
  #L22da12.  v9:= 0I;
  #L22da14.  v1:= v21 @kind object;
  #L22da18.  v3:= v13;
  #L22da1a.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22da20.  v1:= temp @kind object;
  #L22da22.  call temp:= `append`(v14, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22da28.  call temp:= `toString`(v14) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22da2e.  v1:= temp @kind object;
  #L22da30.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L22da34.  v2:= v13 + 1;
  #L22da38.  v13:= 35I;
  #L22da3c.  goto L22d908;
  #L22da40.  v13:= v9;
  #L22da42.  call temp:= `portColonOffset`(v10, v2, v13) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @kind static;
  #L22da48.  v1:= temp;
  #L22da4a.  v3:= v1 + 1;
  #L22da4e.  if v3 >= v13 then goto L22da78;
  #L22da52.  call temp:= `canonicalizeHost`(v10, v2, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L22da58.  v1:= temp @kind object;
  #L22da5a.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L22da5e.  call temp:= `parsePort`(v10, v3, v13) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @kind static;
  #L22da64.  v1:= temp;
  #L22da66.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L22da6a.  v1:= v0.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L22da6e.  if v1 != v12 then goto L22da94;
  #L22da72.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22da76.  return v1 @kind object;
  #L22da78.  call temp:= `canonicalizeHost`(v10, v2, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L22da7e.  v1:= temp @kind object;
  #L22da80.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L22da84.  v1:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L22da88.  call temp:= `defaultPort`(v1) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L22da8e.  v1:= temp;
  #L22da90.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L22da94.  v1:= v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L22da98.  if v1 != 0 then goto L22daa2;
  #L22da9c.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22daa0.  return v1 @kind object;
  #L22daa2.  v1:= "?#" @kind object;
  #L22daa6.  call temp:= `delimiterOffset`(v10, v13, v11, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L22daac.  v1:= temp;
  #L22daae.  call `resolvePath`(v0, v10, v13, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L22dab4.  if v1 >= v11 then goto L22db02;
  #L22dab8.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22dabe.  v2:= temp;
  #L22dac0.  v3:= 63I;
  #L22dac4.  if v2 != v3 then goto L22db02;
  #L22dac8.  v2:= 35I;
  #L22dacc.  call temp:= `delimiterOffset`(v10, v1, v11, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L22dad2.  v12:= temp;
  #L22dad4.  v2:= v1 + 1;
  #L22dad8.  v4:= " \"'<>#" @kind object;
  #L22dadc.  v5:= 1I;
  #L22dade.  v6:= 0I;
  #L22dae0.  v7:= 1I;
  #L22dae2.  v8:= 1I;
  #L22dae4.  v9:= 0I;
  #L22dae6.  v1:= v21 @kind object;
  #L22daea.  v3:= v12;
  #L22daec.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22daf2.  v1:= temp @kind object;
  #L22daf4.  call temp:= `queryStringToNamesAndValues`(v1) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L22dafa.  v1:= temp @kind object;
  #L22dafc.  v0.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v1 @kind object;
  #L22db00.  v1:= v12;
  #L22db02.  if v1 >= v11 then goto L22db3a;
  #L22db06.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22db0c.  v2:= temp;
  #L22db0e.  v3:= 35I;
  #L22db12.  if v2 != v3 then goto L22db3a;
  #L22db16.  v2:= 1I;
  #L22db18.  v2:= v2 + v1 @kind int;
  #L22db1a.  v4:= "" @kind object;
  #L22db1e.  v5:= 1I;
  #L22db20.  v6:= 0I;
  #L22db22.  v7:= 0I;
  #L22db24.  v8:= 0I;
  #L22db26.  v9:= 0I;
  #L22db28.  v1:= v21 @kind object;
  #L22db2c.  v3:= v11;
  #L22db2e.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22db34.  v1:= temp @kind object;
  #L22db36.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L22db3a.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22db3e.  return v1 @kind object;
  #L22db40.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22db44.  return v1 @kind object;
  #L22db46.  
  #L22db48.  switch v1
                  | 63 => goto L22da40
                  | 64 => goto L22d946
                  | else => goto L22d942;
}
procedure `okhttp3.HttpUrl$Builder` `password`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22d320.  if v7 == 0 then goto L22d340;
  #L22d324.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L22d328.  v2:= 0I;
  #L22d32a.  v3:= 0I;
  #L22d32c.  v4:= 0I;
  #L22d32e.  v5:= 1I;
  #L22d330.  v0:= v7 @kind object;
  #L22d332.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d338.  v7:= temp @kind object;
  #L22d33a.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v7 @kind object;
  #L22d33e.  return v6 @kind object;
  #L22d340.  v7:= new `java.lang.NullPointerException`;
  #L22d344.  v0:= "password == null" @kind object;
  #L22d348.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d34e.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `port`(`okhttp3.HttpUrl$Builder` v3 @kind this, `int` v4 ) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22d360.  if v4 <= 0 then goto L22d374;
  #L22d364.  v0:= 65535I;
  #L22d36a.  if v4 > v0 then goto L22d374;
  #L22d36e.  v3.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v4;
  #L22d372.  return v3 @kind object;
  #L22d374.  v0:= new `java.lang.IllegalArgumentException`;
  #L22d378.  v1:= new `java.lang.StringBuilder`;
  #L22d37c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22d382.  v2:= "unexpected port: " @kind object;
  #L22d386.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d38c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d392.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22d398.  v4:= temp @kind object;
  #L22d39a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d3a0.  throw v0;
}
procedure `okhttp3.HttpUrl$Builder` `query`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.query:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22d3b4.  if v7 == 0 then goto L22d3d8;
  #L22d3b8.  v1:= " \"'<>#" @kind object;
  #L22d3bc.  v2:= 0I;
  #L22d3be.  v3:= 0I;
  #L22d3c0.  v4:= 1I;
  #L22d3c2.  v5:= 1I;
  #L22d3c4.  v0:= v7 @kind object;
  #L22d3c6.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d3cc.  v7:= temp @kind object;
  #L22d3ce.  call temp:= `queryStringToNamesAndValues`(v7) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L22d3d4.  v7:= temp @kind object;
  #L22d3d6.  goto L22d3da;
  #L22d3d8.  v7:= 0I;
  #L22d3da.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v7 @kind object;
  #L22d3de.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `reencodeForUri`(`okhttp3.HttpUrl$Builder` v10 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L22d3f0.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d3f4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22d3fa.  v0:= temp;
  #L22d3fc.  v1:= 0I;
  #L22d3fe.  v2:= 0I;
  #L22d400.  if v2 >= v0 then goto L22d43a;
  #L22d404.  v3:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d408.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22d40e.  v3:= temp @kind object;
  #L22d410.  v4:= v3 @kind object;
  #L22d412.  v4:= (`java.lang.String`) v4 @kind object;
  #L22d416.  v3:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d41a.  v5:= "[]" @kind object;
  #L22d41e.  v6:= 1I;
  #L22d420.  v7:= 1I;
  #L22d422.  v8:= 0I;
  #L22d424.  v9:= 1I;
  #L22d426.  call temp:= `canonicalize`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d42c.  v4:= temp @kind object;
  #L22d42e.  call temp:= `set`(v3, v2, v4) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22d434.  v2:= v2 + 1;
  #L22d438.  goto L22d400;
  #L22d43a.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22d43e.  if v0 == 0 then goto L22d488;
  #L22d442.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22d448.  v0:= temp;
  #L22d44a.  if v1 >= v0 then goto L22d488;
  #L22d44e.  v2:= v10.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22d452.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22d458.  v2:= temp @kind object;
  #L22d45a.  v3:= v2 @kind object;
  #L22d45c.  v3:= (`java.lang.String`) v3 @kind object;
  #L22d460.  if v3 == 0 then goto L22d482;
  #L22d464.  v2:= v10.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22d468.  v4:= "\\^`{|}" @kind object;
  #L22d46c.  v5:= 1I;
  #L22d46e.  v6:= 1I;
  #L22d470.  v7:= 1I;
  #L22d472.  v8:= 1I;
  #L22d474.  call temp:= `canonicalize`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d47a.  v3:= temp @kind object;
  #L22d47c.  call temp:= `set`(v2, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22d482.  v1:= v1 + 1;
  #L22d486.  goto L22d44a;
  #L22d488.  v2:= v10.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L22d48c.  if v2 == 0 then goto L22d4a8;
  #L22d490.  v3:= " \"#<>\\^`{|}" @kind object;
  #L22d494.  v4:= 1I;
  #L22d496.  v5:= 1I;
  #L22d498.  v6:= 0I;
  #L22d49a.  v7:= 0I;
  #L22d49c.  call temp:= `canonicalize`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d4a2.  v0:= temp @kind object;
  #L22d4a4.  v10.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L22d4a8.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllEncodedQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L22d4bc.  if v8 == 0 then goto L22d4e8;
  #L22d4c0.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22d4c4.  if v0 != 0 then goto L22d4ca;
  #L22d4c8.  return v7 @kind object;
  #L22d4ca.  v2:= " \"'<>#&=" @kind object;
  #L22d4ce.  v3:= 1I;
  #L22d4d0.  v4:= 0I;
  #L22d4d2.  v5:= 1I;
  #L22d4d4.  v6:= 1I;
  #L22d4d6.  v1:= v8 @kind object;
  #L22d4d8.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d4de.  v8:= temp @kind object;
  #L22d4e0.  call `removeAllCanonicalQueryParameters`(v7, v8) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L22d4e6.  return v7 @kind object;
  #L22d4e8.  v8:= new `java.lang.NullPointerException`;
  #L22d4ec.  v0:= "encodedName == null" @kind object;
  #L22d4f0.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d4f6.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L22d508.  if v8 == 0 then goto L22d534;
  #L22d50c.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22d510.  if v0 != 0 then goto L22d516;
  #L22d514.  return v7 @kind object;
  #L22d516.  v2:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L22d51a.  v3:= 0I;
  #L22d51c.  v4:= 0I;
  #L22d51e.  v5:= 1I;
  #L22d520.  v6:= 1I;
  #L22d522.  v1:= v8 @kind object;
  #L22d524.  call temp:= `canonicalize`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d52a.  v8:= temp @kind object;
  #L22d52c.  call `removeAllCanonicalQueryParameters`(v7, v8) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L22d532.  return v7 @kind object;
  #L22d534.  v8:= new `java.lang.NullPointerException`;
  #L22d538.  v0:= "name == null" @kind object;
  #L22d53c.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d542.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `removePathSegment`(`okhttp3.HttpUrl$Builder` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl$Builder;.removePathSegment:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22d554.  v0:= v1.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d558.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L22d55e.  v2:= v1.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d562.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L22d568.  v2:= temp;
  #L22d56a.  if v2 == 0 then goto L22d57c;
  #L22d56e.  v2:= v1.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d572.  v0:= "" @kind object;
  #L22d576.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22d57c.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `scheme`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22d590.  if v4 == 0 then goto L22d5f6;
  #L22d594.  v0:= "http" @kind object;
  #L22d598.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22d59e.  v0:= temp;
  #L22d5a0.  if v0 == 0 then goto L22d5ae;
  #L22d5a4.  v4:= "http" @kind object;
  #L22d5a8.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v4 @kind object;
  #L22d5ac.  goto L22d5c6;
  #L22d5ae.  v0:= "https" @kind object;
  #L22d5b2.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22d5b8.  v0:= temp;
  #L22d5ba.  if v0 == 0 then goto L22d5c8;
  #L22d5be.  v4:= "https" @kind object;
  #L22d5c2.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v4 @kind object;
  #L22d5c6.  return v3 @kind object;
  #L22d5c8.  v0:= new `java.lang.IllegalArgumentException`;
  #L22d5cc.  v1:= new `java.lang.StringBuilder`;
  #L22d5d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22d5d6.  v2:= "unexpected scheme: " @kind object;
  #L22d5da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d5e0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d5e6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22d5ec.  v4:= temp @kind object;
  #L22d5ee.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d5f4.  throw v0;
  #L22d5f6.  v4:= new `java.lang.NullPointerException`;
  #L22d5fa.  v0:= "scheme == null" @kind object;
  #L22d5fe.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d604.  throw v4;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v9 @kind this, `int` v10 , `java.lang.String` v11 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L22d618.  if v11 == 0 then goto L22d690;
  #L22d61c.  v1:= 0I;
  #L22d61e.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22d624.  v2:= temp;
  #L22d626.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L22d62a.  v4:= 1I;
  #L22d62c.  v5:= 0I;
  #L22d62e.  v6:= 0I;
  #L22d630.  v7:= 1I;
  #L22d632.  v8:= 0I;
  #L22d634.  v0:= v11 @kind object;
  #L22d636.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22d63c.  v0:= temp @kind object;
  #L22d63e.  v1:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d642.  call temp:= `set`(v1, v10, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22d648.  call temp:= `isDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L22d64e.  v10:= temp;
  #L22d650.  if v10 != 0 then goto L22d662;
  #L22d654.  call temp:= `isDotDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L22d65a.  v10:= temp;
  #L22d65c.  if v10 != 0 then goto L22d662;
  #L22d660.  return v9 @kind object;
  #L22d662.  v10:= new `java.lang.IllegalArgumentException`;
  #L22d666.  v0:= new `java.lang.StringBuilder`;
  #L22d66a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22d670.  v1:= "unexpected path segment: " @kind object;
  #L22d674.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d67a.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d680.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22d686.  v11:= temp @kind object;
  #L22d688.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d68e.  throw v10;
  #L22d690.  v10:= new `java.lang.NullPointerException`;
  #L22d694.  v11:= "encodedPathSegment == null" @kind object;
  #L22d698.  call `<init>`(v10, v11) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d69e.  throw v10;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L22d6b0.  call temp:= `removeAllEncodedQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22d6b6.  call temp:= `addEncodedQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22d6bc.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setPathSegment`(`okhttp3.HttpUrl$Builder` v9 @kind this, `int` v10 , `java.lang.String` v11 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L22d6d0.  if v11 == 0 then goto L22d748;
  #L22d6d4.  v1:= 0I;
  #L22d6d6.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22d6dc.  v2:= temp;
  #L22d6de.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L22d6e2.  v4:= 0I;
  #L22d6e4.  v5:= 0I;
  #L22d6e6.  v6:= 0I;
  #L22d6e8.  v7:= 1I;
  #L22d6ea.  v8:= 0I;
  #L22d6ec.  v0:= v11 @kind object;
  #L22d6ee.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22d6f4.  v0:= temp @kind object;
  #L22d6f6.  call temp:= `isDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L22d6fc.  v1:= temp;
  #L22d6fe.  if v1 != 0 then goto L22d71a;
  #L22d702.  call temp:= `isDotDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L22d708.  v1:= temp;
  #L22d70a.  if v1 != 0 then goto L22d71a;
  #L22d70e.  v11:= v9.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22d712.  call temp:= `set`(v11, v10, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22d718.  return v9 @kind object;
  #L22d71a.  v10:= new `java.lang.IllegalArgumentException`;
  #L22d71e.  v0:= new `java.lang.StringBuilder`;
  #L22d722.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22d728.  v1:= "unexpected path segment: " @kind object;
  #L22d72c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d732.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22d738.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22d73e.  v11:= temp @kind object;
  #L22d740.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d746.  throw v10;
  #L22d748.  v10:= new `java.lang.NullPointerException`;
  #L22d74c.  v11:= "pathSegment == null" @kind object;
  #L22d750.  call `<init>`(v10, v11) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d756.  throw v10;
}
procedure `okhttp3.HttpUrl$Builder` `setQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L22d768.  call temp:= `removeAllQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22d76e.  call temp:= `addQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22d774.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl$Builder` v4 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22cd54.  v0:= new `java.lang.StringBuilder`;
  #L22cd58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22cd5e.  v1:= v4.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L22cd62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22cd68.  v1:= "://" @kind object;
  #L22cd6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22cd72.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L22cd76.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22cd7c.  v1:= temp;
  #L22cd7e.  v2:= 58I;
  #L22cd82.  if v1 == 0 then goto L22cd96;
  #L22cd86.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L22cd8a.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22cd90.  v1:= temp;
  #L22cd92.  if v1 != 0 then goto L22cdca;
  #L22cd96.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L22cd9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22cda0.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L22cda4.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22cdaa.  v1:= temp;
  #L22cdac.  if v1 != 0 then goto L22cdc0;
  #L22cdb0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22cdb6.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L22cdba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22cdc0.  v1:= 64I;
  #L22cdc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22cdca.  v1:= v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L22cdce.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L22cdd4.  v1:= temp;
  #L22cdd6.  v3:= -1I;
  #L22cdd8.  if v1 == v3 then goto L22cdfc;
  #L22cddc.  v1:= 91I;
  #L22cde0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22cde6.  v1:= v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L22cdea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22cdf0.  v1:= 93I;
  #L22cdf4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22cdfa.  goto L22ce06;
  #L22cdfc.  v1:= v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L22ce00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ce06.  call temp:= `effectivePort`(v4) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L22ce0c.  v1:= temp;
  #L22ce0e.  v3:= v4.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L22ce12.  call temp:= `defaultPort`(v3) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L22ce18.  v3:= temp;
  #L22ce1a.  if v1 == v3 then goto L22ce2a;
  #L22ce1e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ce24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ce2a.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22ce2e.  call `pathSegmentsToString`(v0, v1) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L22ce34.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22ce38.  if v1 == 0 then goto L22ce50;
  #L22ce3c.  v1:= 63I;
  #L22ce40.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ce46.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22ce4a.  call `namesAndValuesToQueryString`(v0, v1) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L22ce50.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L22ce54.  if v1 == 0 then goto L22ce6c;
  #L22ce58.  v1:= 35I;
  #L22ce5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ce62.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L22ce66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ce6c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22ce72.  v0:= temp @kind object;
  #L22ce74.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `username`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22d788.  if v7 == 0 then goto L22d7a8;
  #L22d78c.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L22d790.  v2:= 0I;
  #L22d792.  v3:= 0I;
  #L22d794.  v4:= 0I;
  #L22d796.  v5:= 1I;
  #L22d798.  v0:= v7 @kind object;
  #L22d79a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L22d7a0.  v7:= temp @kind object;
  #L22d7a2.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v7 @kind object;
  #L22d7a6.  return v6 @kind object;
  #L22d7a8.  v7:= new `java.lang.NullPointerException`;
  #L22d7ac.  v0:= "username == null" @kind object;
  #L22d7b0.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22d7b6.  throw v7;
}
