record `okhttp3.TlsVersion` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.TlsVersion.javaName` @AccessFlag FINAL;
}
global `okhttp3.TlsVersion`[] `@@okhttp3.TlsVersion.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.SSL_3_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/TlsVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L233078.  v0:= new `okhttp3.TlsVersion`;
  #L23307c.  v1:= "TLS_1_3" @kind object;
  #L233080.  v2:= "TLSv1.3" @kind object;
  #L233084.  v3:= 0I;
  #L233086.  call `<init>`(v0, v1, v3, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L23308c.  `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L233090.  v0:= new `okhttp3.TlsVersion`;
  #L233094.  v1:= "TLS_1_2" @kind object;
  #L233098.  v2:= "TLSv1.2" @kind object;
  #L23309c.  v4:= 1I;
  #L23309e.  call `<init>`(v0, v1, v4, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2330a4.  `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L2330a8.  v0:= new `okhttp3.TlsVersion`;
  #L2330ac.  v1:= "TLS_1_1" @kind object;
  #L2330b0.  v2:= "TLSv1.1" @kind object;
  #L2330b4.  v5:= 2I;
  #L2330b6.  call `<init>`(v0, v1, v5, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2330bc.  `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L2330c0.  v0:= new `okhttp3.TlsVersion`;
  #L2330c4.  v1:= "TLS_1_0" @kind object;
  #L2330c8.  v2:= "TLSv1" @kind object;
  #L2330cc.  v6:= 3I;
  #L2330ce.  call `<init>`(v0, v1, v6, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2330d4.  `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L2330d8.  v0:= new `okhttp3.TlsVersion`;
  #L2330dc.  v1:= "SSL_3_0" @kind object;
  #L2330e0.  v2:= "SSLv3" @kind object;
  #L2330e4.  v7:= 4I;
  #L2330e6.  call `<init>`(v0, v1, v7, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2330ec.  `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L2330f0.  v0:= 5I;
  #L2330f2.  v0:= new `okhttp3.TlsVersion`[v0];
  #L2330f6.  v1:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L2330fa.  v0[v3]:= v1 @kind object;
  #L2330fe.  v1:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L233102.  v0[v4]:= v1 @kind object;
  #L233106.  v1:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L23310a.  v0[v5]:= v1 @kind object;
  #L23310e.  v1:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L233112.  v0[v6]:= v1 @kind object;
  #L233116.  v1:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L23311a.  v0[v7]:= v1 @kind object;
  #L23311e.  `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] := v0 @kind object;
  #L233122.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L233134.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23313a.  v0.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` := v3 @kind object;
  #L23313e.  return @kind void;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L232f14.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L232f1a.  v0:= temp;
  #L232f1c.  v1:= 79201641I;
  #L232f22.  if v0 == v1 then goto L232f88;
  #L232f26.  v1:= 79923350I;
  #L232f2c.  if v0 == v1 then goto L232f74;
  #L232f30.  goto L232ff0;
  #L232f36.  goto L232f9c;
  #L232f38.  v0:= "TLSv1.3" @kind object;
  #L232f3c.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L232f42.  v0:= temp;
  #L232f44.  if v0 == 0 then goto L232f9c;
  #L232f48.  v0:= 0I;
  #L232f4a.  goto L232f9e;
  #L232f4c.  v0:= "TLSv1.2" @kind object;
  #L232f50.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L232f56.  v0:= temp;
  #L232f58.  if v0 == 0 then goto L232f9c;
  #L232f5c.  v0:= 1I;
  #L232f5e.  goto L232f9e;
  #L232f60.  v0:= "TLSv1.1" @kind object;
  #L232f64.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L232f6a.  v0:= temp;
  #L232f6c.  if v0 == 0 then goto L232f9c;
  #L232f70.  v0:= 2I;
  #L232f72.  goto L232f9e;
  #L232f74.  v0:= "TLSv1" @kind object;
  #L232f78.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L232f7e.  v0:= temp;
  #L232f80.  if v0 == 0 then goto L232f9c;
  #L232f84.  v0:= 3I;
  #L232f86.  goto L232f9e;
  #L232f88.  v0:= "SSLv3" @kind object;
  #L232f8c.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L232f92.  v0:= temp;
  #L232f94.  if v0 == 0 then goto L232f9c;
  #L232f98.  v0:= 4I;
  #L232f9a.  goto L232f9e;
  #L232f9c.  v0:= -1I;
  #L232f9e.  goto L233004;
  #L232fa4.  v0:= new `java.lang.IllegalArgumentException`;
  #L232fa8.  v1:= new `java.lang.StringBuilder`;
  #L232fac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L232fb2.  v2:= "Unexpected TLS version: " @kind object;
  #L232fb6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L232fbc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L232fc2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L232fc8.  v3:= temp @kind object;
  #L232fca.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L232fd0.  throw v0;
  #L232fd2.  v3:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L232fd6.  return v3 @kind object;
  #L232fd8.  v3:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L232fdc.  return v3 @kind object;
  #L232fde.  v3:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L232fe2.  return v3 @kind object;
  #L232fe4.  v3:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L232fe8.  return v3 @kind object;
  #L232fea.  v3:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L232fee.  return v3 @kind object;
  #L232ff0.  switch v0
                  | -503070503 => goto L232f60
                  | -503070502 => goto L232f4c
                  | -503070501 => goto L232f38
                  | else => goto L232f36;
  #L233004.  switch v0
                  | 0 => goto L232fea
                  | 1 => goto L232fe4
                  | 2 => goto L232fde
                  | 3 => goto L232fd8
                  | 4 => goto L232fd2
                  | else => goto L232fa4;
}
procedure `java.util.List` `forJavaNames`(`java.lang.String`[] v4 @kind object) @signature `Lokhttp3/TlsVersion;.forJavaNames:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L232ecc.  v0:= new `java.util.ArrayList`;
  #L232ed0.  v1:= length @variable v4;
  #L232ed2.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L232ed8.  v1:= length @variable v4;
  #L232eda.  v2:= 0I;
  #L232edc.  if v2 >= v1 then goto L232ef8;
  #L232ee0.  v3:= v4[v2] @kind object;
  #L232ee4.  call temp:= `forJavaName`(v3) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L232eea.  v3:= temp @kind object;
  #L232eec.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L232ef2.  v2:= v2 + 1;
  #L232ef6.  goto L232edc;
  #L232ef8.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L232efe.  v4:= temp @kind object;
  #L232f00.  return v4 @kind object;
}
procedure `okhttp3.TlsVersion` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/TlsVersion;.valueOf:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L233030.  v0:= constclass @type ^`okhttp3.TlsVersion` @kind object;
  #L233034.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L23303a.  v1:= temp @kind object;
  #L23303c.  v1:= (`okhttp3.TlsVersion`) v1 @kind object;
  #L233040.  return v1 @kind object;
}
procedure `okhttp3.TlsVersion`[] `values`() @signature `Lokhttp3/TlsVersion;.values:()[Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L233054.  v0:= `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] @kind object;
  #L233058.  call temp:= `clone`(v0) @signature `[Lokhttp3/TlsVersion;.clone:()Ljava/lang/Object;` @kind virtual;
  #L23305e.  v0:= temp @kind object;
  #L233060.  v0:= (`okhttp3.TlsVersion`[]) v0 @kind object;
  #L233064.  return v0 @kind object;
}
procedure `java.lang.String` `javaName`(`okhttp3.TlsVersion` v1 @kind this) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L232eb4.  v0:= v1.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` @kind object;
  #L232eb8.  return v0 @kind object;
}
