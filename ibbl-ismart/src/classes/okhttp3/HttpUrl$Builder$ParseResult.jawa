record `okhttp3.HttpUrl$Builder$ParseResult` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `okhttp3.HttpUrl$Builder$ParseResult`[] `@@okhttp3.HttpUrl$Builder$ParseResult.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L22ca20.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L22ca24.  v1:= "SUCCESS" @kind object;
  #L22ca28.  v2:= 0I;
  #L22ca2a.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22ca30.  `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L22ca34.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L22ca38.  v1:= "MISSING_SCHEME" @kind object;
  #L22ca3c.  v3:= 1I;
  #L22ca3e.  call `<init>`(v0, v1, v3) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22ca44.  `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L22ca48.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L22ca4c.  v1:= "UNSUPPORTED_SCHEME" @kind object;
  #L22ca50.  v4:= 2I;
  #L22ca52.  call `<init>`(v0, v1, v4) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22ca58.  `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L22ca5c.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L22ca60.  v1:= "INVALID_PORT" @kind object;
  #L22ca64.  v5:= 3I;
  #L22ca66.  call `<init>`(v0, v1, v5) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22ca6c.  `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L22ca70.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L22ca74.  v1:= "INVALID_HOST" @kind object;
  #L22ca78.  v6:= 4I;
  #L22ca7a.  call `<init>`(v0, v1, v6) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22ca80.  `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L22ca84.  v0:= 5I;
  #L22ca86.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`[v0];
  #L22ca8a.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22ca8e.  v0[v2]:= v1 @kind object;
  #L22ca92.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22ca96.  v0[v3]:= v1 @kind object;
  #L22ca9a.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22ca9e.  v0[v4]:= v1 @kind object;
  #L22caa2.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22caa6.  v0[v5]:= v1 @kind object;
  #L22caaa.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22caae.  v0[v6]:= v1 @kind object;
  #L22cab2.  `@@okhttp3.HttpUrl$Builder$ParseResult.$VALUES` @type ^`okhttp3.HttpUrl$Builder$ParseResult`[] := v0 @kind object;
  #L22cab6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder$ParseResult` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L22cac8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22cace.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.valueOf:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22c9d8.  v0:= constclass @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22c9dc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L22c9e2.  v1:= temp @kind object;
  #L22c9e4.  v1:= (`okhttp3.HttpUrl$Builder$ParseResult`) v1 @kind object;
  #L22c9e8.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult`[] `values`() @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.values:()[Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22c9fc.  v0:= `@@okhttp3.HttpUrl$Builder$ParseResult.$VALUES` @type ^`okhttp3.HttpUrl$Builder$ParseResult`[] @kind object;
  #L22ca00.  call temp:= `clone`(v0) @signature `[Lokhttp3/HttpUrl$Builder$ParseResult;.clone:()Ljava/lang/Object;` @kind virtual;
  #L22ca06.  v0:= temp @kind object;
  #L22ca08.  v0:= (`okhttp3.HttpUrl$Builder$ParseResult`[]) v0 @kind object;
  #L22ca0c.  return v0 @kind object;
}
