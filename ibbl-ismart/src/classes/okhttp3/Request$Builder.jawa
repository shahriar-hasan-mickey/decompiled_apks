record `okhttp3.Request$Builder` @kind class @AccessFlag PUBLIC {
  `okhttp3.RequestBody` `okhttp3.Request$Builder.body` @AccessFlag ;
  `okhttp3.Headers$Builder` `okhttp3.Request$Builder.headers` @AccessFlag ;
  `java.lang.String` `okhttp3.Request$Builder.method` @AccessFlag ;
  `java.lang.Object` `okhttp3.Request$Builder.tag` @AccessFlag ;
  `okhttp3.HttpUrl` `okhttp3.Request$Builder.url` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L231b70.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L231b76.  v0:= "GET" @kind object;
  #L231b7a.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L231b7e.  v0:= new `okhttp3.Headers$Builder`;
  #L231b82.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L231b88.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L231b8c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L231ba0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L231ba6.  v0:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L231baa.  v1.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L231bae.  v0:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L231bb2.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L231bb6.  v0:= v2.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L231bba.  v1.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L231bbe.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L231bc2.  v1.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L231bc6.  v2:= v2.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L231bca.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L231bd0.  v2:= temp @kind object;
  #L231bd2.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L231bd6.  return @kind void;
}
procedure `okhttp3.Request$Builder` `addHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231758.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L23175c.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L231762.  return v1 @kind object;
}
procedure `okhttp3.Request` `build`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L231724.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L231728.  if v0 == 0 then goto L231738;
  #L23172c.  v0:= new `okhttp3.Request`;
  #L231730.  call `<init>`(v0, v2) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @kind direct;
  #L231736.  return v0 @kind object;
  #L231738.  v0:= new `java.lang.IllegalStateException`;
  #L23173c.  v1:= "url == null" @kind object;
  #L231740.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L231746.  throw v0;
}
procedure `okhttp3.Request$Builder` `cacheControl`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.CacheControl` v2 @kind object) @signature `Lokhttp3/Request$Builder;.cacheControl:(Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231774.  call temp:= `toString`(v2) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @kind virtual;
  #L23177a.  v2:= temp @kind object;
  #L23177c.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L231782.  v0:= temp;
  #L231784.  if v0 == 0 then goto L231796;
  #L231788.  v2:= "Cache-Control" @kind object;
  #L23178c.  call temp:= `removeHeader`(v1, v2) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L231792.  v2:= temp @kind object;
  #L231794.  return v2 @kind object;
  #L231796.  v0:= "Cache-Control" @kind object;
  #L23179a.  call temp:= `header`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2317a0.  v2:= temp @kind object;
  #L2317a2.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.delete:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2317b4.  v0:= `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` @kind object;
  #L2317b8.  call temp:= `delete`(v1, v0) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2317be.  v0:= temp @kind object;
  #L2317c0.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2317d4.  v0:= "DELETE" @kind object;
  #L2317d8.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2317de.  v2:= temp @kind object;
  #L2317e0.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `get`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.get:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2317f4.  v0:= "GET" @kind object;
  #L2317f8.  v1:= 0I;
  #L2317fa.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L231800.  v0:= temp @kind object;
  #L231802.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `head`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.head:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L231814.  v0:= "HEAD" @kind object;
  #L231818.  v1:= 0I;
  #L23181a.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L231820.  v0:= temp @kind object;
  #L231822.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `header`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231834.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L231838.  call temp:= `set`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L23183e.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `headers`(`okhttp3.Request$Builder` v0 @kind this, `okhttp3.Headers` v1 @kind object) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;

  #L231850.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L231856.  v1:= temp @kind object;
  #L231858.  v0.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v1 @kind object;
  #L23185c.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `method`(`okhttp3.Request$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `okhttp3.RequestBody` v4 @kind object) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L231870.  if v3 == 0 then goto L23192e;
  #L231874.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23187a.  v0:= temp;
  #L23187c.  if v0 == 0 then goto L23191e;
  #L231880.  if v4 == 0 then goto L2318ca;
  #L231884.  call temp:= `permitsRequestBody`(v3) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L23188a.  v0:= temp;
  #L23188c.  if v0 == 0 then goto L231892;
  #L231890.  goto L2318ca;
  #L231892.  v4:= new `java.lang.IllegalArgumentException`;
  #L231896.  v0:= new `java.lang.StringBuilder`;
  #L23189a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2318a0.  v1:= "method " @kind object;
  #L2318a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2318aa.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2318b0.  v3:= " must not have a request body." @kind object;
  #L2318b4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2318ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2318c0.  v3:= temp @kind object;
  #L2318c2.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2318c8.  throw v4;
  #L2318ca.  if v4 != 0 then goto L231914;
  #L2318ce.  call temp:= `requiresRequestBody`(v3) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L2318d4.  v0:= temp;
  #L2318d6.  if v0 != 0 then goto L2318dc;
  #L2318da.  goto L231914;
  #L2318dc.  v4:= new `java.lang.IllegalArgumentException`;
  #L2318e0.  v0:= new `java.lang.StringBuilder`;
  #L2318e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2318ea.  v1:= "method " @kind object;
  #L2318ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2318f4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2318fa.  v3:= " must have a request body." @kind object;
  #L2318fe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231904.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23190a.  v3:= temp @kind object;
  #L23190c.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L231912.  throw v4;
  #L231914.  v2.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v3 @kind object;
  #L231918.  v2.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v4 @kind object;
  #L23191c.  return v2 @kind object;
  #L23191e.  v3:= new `java.lang.IllegalArgumentException`;
  #L231922.  v4:= "method.length() == 0" @kind object;
  #L231926.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23192c.  throw v3;
  #L23192e.  v3:= new `java.lang.NullPointerException`;
  #L231932.  v4:= "method == null" @kind object;
  #L231936.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23193c.  throw v3;
}
procedure `okhttp3.Request$Builder` `patch`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.patch:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231950.  v0:= "PATCH" @kind object;
  #L231954.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23195a.  v2:= temp @kind object;
  #L23195c.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `post`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.post:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231970.  v0:= "POST" @kind object;
  #L231974.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23197a.  v2:= temp @kind object;
  #L23197c.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `put`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.put:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231990.  v0:= "PUT" @kind object;
  #L231994.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23199a.  v2:= temp @kind object;
  #L23199c.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `removeHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2319b0.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L2319b4.  call temp:= `removeAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2319ba.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;

  #L2319cc.  v0.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v1 @kind object;
  #L2319d0.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2319e4.  if v7 == 0 then goto L231aba;
  #L2319e8.  v1:= 1I;
  #L2319ea.  v2:= 0I;
  #L2319ec.  v3:= "ws:" @kind object;
  #L2319f0.  v4:= 0I;
  #L2319f2.  v5:= 3I;
  #L2319f4.  v0:= v7 @kind object;
  #L2319f6.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L2319fc.  v0:= temp;
  #L2319fe.  if v0 == 0 then goto L231a30;
  #L231a02.  v0:= new `java.lang.StringBuilder`;
  #L231a06.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L231a0c.  v1:= "http:" @kind object;
  #L231a10.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231a16.  v1:= 3I;
  #L231a18.  call temp:= `substring`(v7, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L231a1e.  v7:= temp @kind object;
  #L231a20.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231a26.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L231a2c.  v7:= temp @kind object;
  #L231a2e.  goto L231a76;
  #L231a30.  v1:= 1I;
  #L231a32.  v2:= 0I;
  #L231a34.  v3:= "wss:" @kind object;
  #L231a38.  v4:= 0I;
  #L231a3a.  v5:= 4I;
  #L231a3c.  v0:= v7 @kind object;
  #L231a3e.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L231a44.  v0:= temp;
  #L231a46.  if v0 == 0 then goto L231a76;
  #L231a4a.  v0:= new `java.lang.StringBuilder`;
  #L231a4e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L231a54.  v1:= "https:" @kind object;
  #L231a58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231a5e.  v1:= 4I;
  #L231a60.  call temp:= `substring`(v7, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L231a66.  v7:= temp @kind object;
  #L231a68.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231a6e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L231a74.  v7:= temp @kind object;
  #L231a76.  call temp:= `parse`(v7) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L231a7c.  v0:= temp @kind object;
  #L231a7e.  if v0 == 0 then goto L231a8c;
  #L231a82.  call temp:= `url`(v6, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L231a88.  v7:= temp @kind object;
  #L231a8a.  return v7 @kind object;
  #L231a8c.  v0:= new `java.lang.IllegalArgumentException`;
  #L231a90.  v1:= new `java.lang.StringBuilder`;
  #L231a94.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L231a9a.  v2:= "unexpected url: " @kind object;
  #L231a9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231aa4.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231aaa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L231ab0.  v7:= temp @kind object;
  #L231ab2.  call `<init>`(v0, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L231ab8.  throw v0;
  #L231aba.  v7:= new `java.lang.NullPointerException`;
  #L231abe.  v0:= "url == null" @kind object;
  #L231ac2.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L231ac8.  throw v7;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v3 @kind this, `java.net.URL` v4 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Ljava/net/URL;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L231adc.  if v4 == 0 then goto L231b24;
  #L231ae0.  call temp:= `get`(v4) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @kind static;
  #L231ae6.  v0:= temp @kind object;
  #L231ae8.  if v0 == 0 then goto L231af6;
  #L231aec.  call temp:= `url`(v3, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L231af2.  v4:= temp @kind object;
  #L231af4.  return v4 @kind object;
  #L231af6.  v0:= new `java.lang.IllegalArgumentException`;
  #L231afa.  v1:= new `java.lang.StringBuilder`;
  #L231afe.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L231b04.  v2:= "unexpected url: " @kind object;
  #L231b08.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231b0e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231b14.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L231b1a.  v4:= temp @kind object;
  #L231b1c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L231b22.  throw v0;
  #L231b24.  v4:= new `java.lang.NullPointerException`;
  #L231b28.  v0:= "url == null" @kind object;
  #L231b2c.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L231b32.  throw v4;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231b44.  if v2 == 0 then goto L231b4e;
  #L231b48.  v1.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v2 @kind object;
  #L231b4c.  return v1 @kind object;
  #L231b4e.  v2:= new `java.lang.NullPointerException`;
  #L231b52.  v0:= "url == null" @kind object;
  #L231b56.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L231b5c.  throw v2;
}
