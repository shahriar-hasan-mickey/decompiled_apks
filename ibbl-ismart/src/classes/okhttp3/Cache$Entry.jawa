record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `int` `okhttp3.Cache$Entry.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.handshake` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.receivedResponseMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.requestMethod` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.responseHeaders` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.sentRequestMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.url` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.varyHeaders` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.SENT_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2268c8.  v0:= new `java.lang.StringBuilder`;
  #L2268cc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2268d2.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L2268d8.  v1:= temp @kind object;
  #L2268da.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L2268e0.  v1:= temp @kind object;
  #L2268e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2268e8.  v1:= "-Sent-Millis" @kind object;
  #L2268ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2268f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2268f8.  v0:= temp @kind object;
  #L2268fa.  `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L2268fe.  v0:= new `java.lang.StringBuilder`;
  #L226902.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L226908.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L22690e.  v1:= temp @kind object;
  #L226910.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L226916.  v1:= temp @kind object;
  #L226918.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22691e.  v1:= "-Received-Millis" @kind object;
  #L226922.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226928.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22692e.  v0:= temp @kind object;
  #L226930.  `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L226934.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L226948.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22694e.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L226954.  v0:= temp @kind object;
  #L226956.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L22695c.  v0:= temp @kind object;
  #L22695e.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L226964.  v0:= temp @kind object;
  #L226966.  v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L22696a.  call temp:= `varyHeaders`(v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind static;
  #L226970.  v0:= temp @kind object;
  #L226972.  v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L226976.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L22697c.  v0:= temp @kind object;
  #L22697e.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L226984.  v0:= temp @kind object;
  #L226986.  v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L22698a.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L226990.  v0:= temp @kind object;
  #L226992.  v2.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L226996.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L22699c.  v0:= temp;
  #L22699e.  v2.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L2269a2.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L2269a8.  v0:= temp @kind object;
  #L2269aa.  v2.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L2269ae.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L2269b4.  v0:= temp @kind object;
  #L2269b6.  v2.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L2269ba.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L2269c0.  v0:= temp @kind object;
  #L2269c2.  v2.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L2269c6.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L2269cc.  v0:= temp @kind wide;
  #L2269ce.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L2269d2.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L2269d8.  v0:= temp @kind wide;
  #L2269da.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L2269de.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v8 @kind this, `okio.Source` v9 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2269f0.  call `<init>`(v8) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2269f6.  call temp:= `buffer`(v9) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L2269fc.  v0:= temp @kind object;
  #L2269fe.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L226a04.  v1:= temp @kind object;
  #L226a06.  v8.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v1 @kind object;
  #L226a0a.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L226a10.  v1:= temp @kind object;
  #L226a12.  v8.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v1 @kind object;
  #L226a16.  v1:= new `okhttp3.Headers$Builder`;
  #L226a1a.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L226a20.  call temp:= `readInt`(v0) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L226a26.  v2:= temp;
  #L226a28.  v3:= 0I;
  #L226a2a.  v4:= 0I;
  #L226a2c.  if v4 >= v2 then goto L226a44;
  #L226a30.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L226a36.  v5:= temp @kind object;
  #L226a38.  call temp:= `addLenient`(v1, v5) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L226a3e.  v4:= v4 + 1;
  #L226a42.  goto L226a2c;
  #L226a44.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L226a4a.  v1:= temp @kind object;
  #L226a4c.  v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v1 @kind object;
  #L226a50.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L226a56.  v1:= temp @kind object;
  #L226a58.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L226a5e.  v1:= temp @kind object;
  #L226a60.  v2:= v1.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L226a64.  v8.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L226a68.  v2:= v1.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L226a6c.  v8.`okhttp3.Cache$Entry.code` @type ^`int` := v2;
  #L226a70.  v1:= v1.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L226a74.  v8.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v1 @kind object;
  #L226a78.  v1:= new `okhttp3.Headers$Builder`;
  #L226a7c.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L226a82.  call temp:= `readInt`(v0) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L226a88.  v2:= temp;
  #L226a8a.  if v3 >= v2 then goto L226aa2;
  #L226a8e.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L226a94.  v4:= temp @kind object;
  #L226a96.  call temp:= `addLenient`(v1, v4) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L226a9c.  v3:= v3 + 1;
  #L226aa0.  goto L226a8a;
  #L226aa2.  v2:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L226aa6.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L226aac.  v2:= temp @kind object;
  #L226aae.  v3:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L226ab2.  call temp:= `get`(v1, v3) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L226ab8.  v3:= temp @kind object;
  #L226aba.  v4:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L226abe.  call temp:= `removeAll`(v1, v4) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L226ac4.  v4:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L226ac8.  call temp:= `removeAll`(v1, v4) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L226ace.  v4:= 0L;
  #L226ad2.  if v2 == 0 then goto L226ae0;
  #L226ad6.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L226adc.  v6:= temp @kind wide;
  #L226ade.  goto L226ae2;
  #L226ae0.  v6:= v4 @kind wide;
  #L226ae2.  v8.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v6 @kind wide;
  #L226ae6.  if v3 == 0 then goto L226af2;
  #L226aea.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L226af0.  v4:= temp @kind wide;
  #L226af2.  v8.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v4 @kind wide;
  #L226af6.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L226afc.  v1:= temp @kind object;
  #L226afe.  v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v1 @kind object;
  #L226b02.  call temp:= `isHttps`(v8) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L226b08.  v1:= temp;
  #L226b0a.  if v1 == 0 then goto L226baa;
  #L226b0e.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L226b14.  v1:= temp @kind object;
  #L226b16.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L226b1c.  v2:= temp;
  #L226b1e.  if v2 > 0 then goto L226b72;
  #L226b22.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L226b28.  v1:= temp @kind object;
  #L226b2a.  call temp:= `forJavaName`(v1) @signature `Lokhttp3/CipherSuite;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind static;
  #L226b30.  v1:= temp @kind object;
  #L226b32.  call temp:= `readCertificateList`(v8, v0) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L226b38.  v2:= temp @kind object;
  #L226b3a.  call temp:= `readCertificateList`(v8, v0) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L226b40.  v3:= temp @kind object;
  #L226b42.  call temp:= `exhausted`(v0) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L226b48.  v4:= temp;
  #L226b4a.  if v4 != 0 then goto L226b60;
  #L226b4e.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L226b54.  v0:= temp @kind object;
  #L226b56.  call temp:= `forJavaName`(v0) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L226b5c.  v0:= temp @kind object;
  #L226b5e.  goto L226b64;
  #L226b60.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L226b64.  call temp:= `get`(v0, v1, v2, v3) @signature `Lokhttp3/Handshake;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind static;
  #L226b6a.  v0:= temp @kind object;
  #L226b6c.  v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L226b70.  goto L226bb0;
  #L226b72.  v0:= new `java.io.IOException`;
  #L226b76.  v2:= new `java.lang.StringBuilder`;
  #L226b7a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L226b80.  v3:= "expected \"\" but was \"" @kind object;
  #L226b84.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226b8a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226b90.  v1:= "\"" @kind object;
  #L226b94.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226b9a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L226ba0.  v1:= temp @kind object;
  #L226ba2.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L226ba8.  throw v0;
  #L226baa.  v0:= 0I;
  #L226bac.  v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L226bb0.  call `close`(v9) @signature `Lokio/Source;.close:()V` @kind interface;
  #L226bb6.  return @kind void;
  #L226bb8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L226bba.  call `close`(v9) @signature `Lokio/Source;.close:()V` @kind interface;
  #L226bc0.  throw v0;
  #L226bc2.  return @kind void;
  catch `java.lang.Throwable` @[L2269f6..L226bb0] goto L226bb8;
}
procedure `boolean` `isHttps`(`okhttp3.Cache$Entry` v2 @kind this) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2266ac.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L2266b0.  v1:= "https://" @kind object;
  #L2266b4.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2266ba.  v0:= temp;
  #L2266bc.  return v0;
}
procedure `java.util.List` `readCertificateList`(`okhttp3.Cache$Entry` v6 @kind this, `okio.BufferedSource` v7 @kind object) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L226730.  call temp:= `readInt`(v7) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L226736.  v0:= temp;
  #L226738.  v1:= -1I;
  #L22673a.  if v0 != v1 then goto L226748;
  #L22673e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L226744.  v7:= temp @kind object;
  #L226746.  return v7 @kind object;
  #L226748.  v1:= "X.509" @kind object;
  #L22674c.  call temp:= `getInstance`(v1) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L226752.  v1:= temp @kind object;
  #L226754.  v2:= new `java.util.ArrayList`;
  #L226758.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L22675e.  v3:= 0I;
  #L226760.  if v3 >= v0 then goto L2267a0;
  #L226764.  call temp:= `readUtf8LineStrict`(v7) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L22676a.  v4:= temp @kind object;
  #L22676c.  v5:= new `okio.Buffer`;
  #L226770.  call `<init>`(v5) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L226776.  call temp:= `decodeBase64`(v4) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L22677c.  v4:= temp @kind object;
  #L22677e.  call temp:= `write`(v5, v4) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L226784.  call temp:= `inputStream`(v5) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L22678a.  v4:= temp @kind object;
  #L22678c.  call temp:= `generateCertificate`(v1, v4) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L226792.  v4:= temp @kind object;
  #L226794.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22679a.  v3:= v3 + 1;
  #L22679e.  goto L226760;
  #L2267a0.  return v2 @kind object;
  #L2267a2.  v7:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L2267a4.  v0:= new `java.io.IOException`;
  #L2267a8.  call temp:= `getMessage`(v7) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2267ae.  v7:= temp @kind object;
  #L2267b0.  call `<init>`(v0, v7) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2267b6.  throw v0;
  #L2267b8.  return @kind void;
  catch `java.security.cert.CertificateException` @[L226748..L22679a] goto L2267a2;
}
procedure `void` `writeCertList`(`okhttp3.Cache$Entry` v4 @kind this, `okio.BufferedSink` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L226be0.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L226be6.  v0:= temp;
  #L226be8.  v0:= (`long`) v0 @kind i2l;
  #L226bea.  call temp:= `writeDecimalLong`(v5, v0) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L226bf0.  v0:= temp @kind object;
  #L226bf2.  v1:= 10I;
  #L226bf6.  call temp:= `writeByte`(v0, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226bfc.  v0:= 0I;
  #L226bfe.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L226c04.  v2:= temp;
  #L226c06.  if v0 >= v2 then goto L226c42;
  #L226c0a.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L226c10.  v3:= temp @kind object;
  #L226c12.  v3:= (`java.security.cert.Certificate`) v3 @kind object;
  #L226c16.  call temp:= `getEncoded`(v3) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L226c1c.  v3:= temp @kind object;
  #L226c1e.  call temp:= `of`(v3) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L226c24.  v3:= temp @kind object;
  #L226c26.  call temp:= `base64`(v3) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L226c2c.  v3:= temp @kind object;
  #L226c2e.  call temp:= `writeUtf8`(v5, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226c34.  v3:= temp @kind object;
  #L226c36.  call temp:= `writeByte`(v3, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226c3c.  v0:= v0 + 1;
  #L226c40.  goto L226c06;
  #L226c42.  return @kind void;
  #L226c44.  v5:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L226c46.  v6:= new `java.io.IOException`;
  #L226c4a.  call temp:= `getMessage`(v5) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L226c50.  v5:= temp @kind object;
  #L226c52.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L226c58.  throw v6;
  #L226c5a.  return @kind void;
  catch `java.security.cert.CertificateEncodingException` @[L226be0..L226c3c] goto L226c44;
}
procedure `boolean` `matches`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object, `okhttp3.Response` v4 @kind object) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2266d0.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L2266d4.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2266da.  v1:= temp @kind object;
  #L2266dc.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L2266e2.  v1:= temp @kind object;
  #L2266e4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2266ea.  v0:= temp;
  #L2266ec.  if v0 == 0 then goto L22671c;
  #L2266f0.  v0:= v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L2266f4.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L2266fa.  v1:= temp @kind object;
  #L2266fc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L226702.  v0:= temp;
  #L226704.  if v0 == 0 then goto L22671c;
  #L226708.  v0:= v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L22670c.  call temp:= `varyMatches`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind static;
  #L226712.  v3:= temp;
  #L226714.  if v3 == 0 then goto L22671c;
  #L226718.  v3:= 1I;
  #L22671a.  goto L22671e;
  #L22671c.  v3:= 0I;
  #L22671e.  return v3;
}
procedure `okhttp3.Response` `response`(`okhttp3.Cache$Entry` v5 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2267dc.  v0:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2267e0.  v1:= "Content-Type" @kind object;
  #L2267e4.  call temp:= `get`(v0, v1) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2267ea.  v0:= temp @kind object;
  #L2267ec.  v1:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2267f0.  v2:= "Content-Length" @kind object;
  #L2267f4.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2267fa.  v1:= temp @kind object;
  #L2267fc.  v2:= new `okhttp3.Request$Builder`;
  #L226800.  call `<init>`(v2) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L226806.  v3:= v5.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L22680a.  call temp:= `url`(v2, v3) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L226810.  v2:= temp @kind object;
  #L226812.  v3:= v5.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L226816.  v4:= 0I;
  #L226818.  call temp:= `method`(v2, v3, v4) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L22681e.  v2:= temp @kind object;
  #L226820.  v3:= v5.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L226824.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L22682a.  v2:= temp @kind object;
  #L22682c.  call temp:= `build`(v2) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L226832.  v2:= temp @kind object;
  #L226834.  v3:= new `okhttp3.Response$Builder`;
  #L226838.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L22683e.  call temp:= `request`(v3, v2) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L226844.  v2:= temp @kind object;
  #L226846.  v3:= v5.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L22684a.  call temp:= `protocol`(v2, v3) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L226850.  v2:= temp @kind object;
  #L226852.  v3:= v5.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L226856.  call temp:= `code`(v2, v3) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L22685c.  v2:= temp @kind object;
  #L22685e.  v3:= v5.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L226862.  call temp:= `message`(v2, v3) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L226868.  v2:= temp @kind object;
  #L22686a.  v3:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L22686e.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L226874.  v2:= temp @kind object;
  #L226876.  v3:= new `okhttp3.Cache$CacheResponseBody`;
  #L22687a.  call `<init>`(v3, v6, v0, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L226880.  call temp:= `body`(v2, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L226886.  v6:= temp @kind object;
  #L226888.  v0:= v5.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L22688c.  call temp:= `handshake`(v6, v0) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L226892.  v6:= temp @kind object;
  #L226894.  v0:= v5.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L226898.  call temp:= `sentRequestAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L22689e.  v6:= temp @kind object;
  #L2268a0.  v0:= v5.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L2268a4.  call temp:= `receivedResponseAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2268aa.  v6:= temp @kind object;
  #L2268ac.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2268b2.  v6:= temp @kind object;
  #L2268b4.  return v6 @kind object;
}
procedure `void` `writeTo`(`okhttp3.Cache$Entry` v6 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v7 @kind object) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L226c7c.  v0:= 0I;
  #L226c7e.  call temp:= `newSink`(v7, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L226c84.  v7:= temp @kind object;
  #L226c86.  call temp:= `buffer`(v7) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L226c8c.  v7:= temp @kind object;
  #L226c8e.  v1:= v6.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L226c92.  call temp:= `writeUtf8`(v7, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226c98.  v1:= temp @kind object;
  #L226c9a.  v2:= 10I;
  #L226c9e.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226ca4.  v1:= v6.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L226ca8.  call temp:= `writeUtf8`(v7, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226cae.  v1:= temp @kind object;
  #L226cb0.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226cb6.  v1:= v6.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L226cba.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L226cc0.  v1:= temp;
  #L226cc2.  v3:= (`long`) v1 @kind i2l;
  #L226cc4.  call temp:= `writeDecimalLong`(v7, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L226cca.  v1:= temp @kind object;
  #L226ccc.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226cd2.  v1:= v6.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L226cd6.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L226cdc.  v1:= temp;
  #L226cde.  v3:= 0I;
  #L226ce0.  if v3 >= v1 then goto L226d24;
  #L226ce4.  v4:= v6.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L226ce8.  call temp:= `name`(v4, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L226cee.  v4:= temp @kind object;
  #L226cf0.  call temp:= `writeUtf8`(v7, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226cf6.  v4:= temp @kind object;
  #L226cf8.  v5:= ": " @kind object;
  #L226cfc.  call temp:= `writeUtf8`(v4, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226d02.  v4:= temp @kind object;
  #L226d04.  v5:= v6.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L226d08.  call temp:= `value`(v5, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L226d0e.  v5:= temp @kind object;
  #L226d10.  call temp:= `writeUtf8`(v4, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226d16.  v4:= temp @kind object;
  #L226d18.  call temp:= `writeByte`(v4, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226d1e.  v3:= v3 + 1;
  #L226d22.  goto L226ce0;
  #L226d24.  v1:= new `okhttp3.internal.http.StatusLine`;
  #L226d28.  v3:= v6.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L226d2c.  v4:= v6.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L226d30.  v5:= v6.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L226d34.  call `<init>`(v1, v3, v4, v5) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L226d3a.  call temp:= `toString`(v1) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L226d40.  v1:= temp @kind object;
  #L226d42.  call temp:= `writeUtf8`(v7, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226d48.  v1:= temp @kind object;
  #L226d4a.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226d50.  v1:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L226d54.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L226d5a.  v1:= temp;
  #L226d5c.  v1:= v1 + 2;
  #L226d60.  v3:= (`long`) v1 @kind i2l;
  #L226d62.  call temp:= `writeDecimalLong`(v7, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L226d68.  v1:= temp @kind object;
  #L226d6a.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226d70.  v1:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L226d74.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L226d7a.  v1:= temp;
  #L226d7c.  if v0 >= v1 then goto L226dc0;
  #L226d80.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L226d84.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L226d8a.  v3:= temp @kind object;
  #L226d8c.  call temp:= `writeUtf8`(v7, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226d92.  v3:= temp @kind object;
  #L226d94.  v4:= ": " @kind object;
  #L226d98.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226d9e.  v3:= temp @kind object;
  #L226da0.  v4:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L226da4.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L226daa.  v4:= temp @kind object;
  #L226dac.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226db2.  v3:= temp @kind object;
  #L226db4.  call temp:= `writeByte`(v3, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226dba.  v0:= v0 + 1;
  #L226dbe.  goto L226d7c;
  #L226dc0.  v0:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L226dc4.  call temp:= `writeUtf8`(v7, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226dca.  v0:= temp @kind object;
  #L226dcc.  v1:= ": " @kind object;
  #L226dd0.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226dd6.  v0:= temp @kind object;
  #L226dd8.  v3:= v6.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L226ddc.  call temp:= `writeDecimalLong`(v0, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L226de2.  v0:= temp @kind object;
  #L226de4.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226dea.  v0:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L226dee.  call temp:= `writeUtf8`(v7, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226df4.  v0:= temp @kind object;
  #L226df6.  v1:= ": " @kind object;
  #L226dfa.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226e00.  v0:= temp @kind object;
  #L226e02.  v3:= v6.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L226e06.  call temp:= `writeDecimalLong`(v0, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L226e0c.  v0:= temp @kind object;
  #L226e0e.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226e14.  call temp:= `isHttps`(v6) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L226e1a.  v0:= temp;
  #L226e1c.  if v0 == 0 then goto L226e8e;
  #L226e20.  call temp:= `writeByte`(v7, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226e26.  v0:= v6.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L226e2a.  call temp:= `cipherSuite`(v0) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L226e30.  v0:= temp @kind object;
  #L226e32.  call temp:= `javaName`(v0) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L226e38.  v0:= temp @kind object;
  #L226e3a.  call temp:= `writeUtf8`(v7, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226e40.  v0:= temp @kind object;
  #L226e42.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226e48.  v0:= v6.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L226e4c.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L226e52.  v0:= temp @kind object;
  #L226e54.  call `writeCertList`(v6, v7, v0) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L226e5a.  v0:= v6.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L226e5e.  call temp:= `localCertificates`(v0) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L226e64.  v0:= temp @kind object;
  #L226e66.  call `writeCertList`(v6, v7, v0) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L226e6c.  v0:= v6.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L226e70.  call temp:= `tlsVersion`(v0) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L226e76.  v0:= temp @kind object;
  #L226e78.  call temp:= `javaName`(v0) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L226e7e.  v0:= temp @kind object;
  #L226e80.  call temp:= `writeUtf8`(v7, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L226e86.  v0:= temp @kind object;
  #L226e88.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L226e8e.  call `close`(v7) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L226e94.  return @kind void;
}
