record `okhttp3.Cache$2` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `boolean` `okhttp3.Cache$2.canRemove` @AccessFlag ;
  `java.util.Iterator` `okhttp3.Cache$2.delegate` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Cache$2.nextUrl` @AccessFlag ;
  `okhttp3.Cache` `okhttp3.Cache$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$2` v0 @kind this, `okhttp3.Cache` v1 @kind object) @signature `Lokhttp3/Cache$2;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2263e0.  v0.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` := v1 @kind object;
  #L2263e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2263ea.  v1:= v0.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` @kind object;
  #L2263ee.  v1:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2263f2.  call temp:= `snapshots`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.snapshots:()Ljava/util/Iterator;` @kind virtual;
  #L2263f8.  v1:= temp @kind object;
  #L2263fa.  v0.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` := v1 @kind object;
  #L2263fe.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.Cache$2` v4 @kind this) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2262fc.  v0:= v4.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L226300.  v1:= 1I;
  #L226302.  if v0 == 0 then goto L226308;
  #L226306.  return v1;
  #L226308.  v0:= 0I;
  #L22630a.  v4.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v0 @kind boolean;
  #L22630e.  v2:= v4.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L226312.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L226318.  v2:= temp;
  #L22631a.  if v2 == 0 then goto L226364;
  #L22631e.  v2:= v4.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L226322.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L226328.  v2:= temp @kind object;
  #L22632a.  v2:= (`okhttp3.internal.cache.DiskLruCache$Snapshot`) v2 @kind object;
  #L22632e.  call temp:= `getSource`(v2, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L226334.  v3:= temp @kind object;
  #L226336.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L22633c.  v3:= temp @kind object;
  #L22633e.  call temp:= `readUtf8LineStrict`(v3) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L226344.  v3:= temp @kind object;
  #L226346.  v4.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v3 @kind object;
  #L22634a.  call `close`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L226350.  return v1;
  #L226352.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L226354.  call `close`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L22635a.  throw v0;
  #L22635c.  call `close`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L226362.  goto L22630e;
  #L226364.  return v0;
  catch `java.io.IOException` @[L22632e..L22634a] goto L22635c;
  catch `java.lang.Throwable` @[L22632e..L22634a] goto L226352;
}
procedure `java.lang.Object` `next`(`okhttp3.Cache$2` v1 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L226388.  call temp:= `next`(v1) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @kind virtual;
  #L22638e.  v0:= temp @kind object;
  #L226390.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2263a4.  call temp:= `hasNext`(v2) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @kind virtual;
  #L2263aa.  v0:= temp;
  #L2263ac.  if v0 == 0 then goto L2263c2;
  #L2263b0.  v0:= v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L2263b4.  v1:= 0I;
  #L2263b6.  v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v1 @kind object;
  #L2263ba.  v1:= 1I;
  #L2263bc.  v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v1 @kind boolean;
  #L2263c0.  return v0 @kind object;
  #L2263c2.  v0:= new `java.util.NoSuchElementException`;
  #L2263c6.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L2263cc.  throw v0;
}
procedure `void` `remove`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L226410.  v0:= v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` @kind boolean;
  #L226414.  if v0 == 0 then goto L226424;
  #L226418.  v0:= v2.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L22641c.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L226422.  return @kind void;
  #L226424.  v0:= new `java.lang.IllegalStateException`;
  #L226428.  v1:= "remove() before next()" @kind object;
  #L22642c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L226432.  throw v0;
}
