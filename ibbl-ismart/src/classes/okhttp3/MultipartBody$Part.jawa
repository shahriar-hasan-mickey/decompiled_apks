record `okhttp3.MultipartBody$Part` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.MultipartBody$Part.body` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.MultipartBody$Part.headers` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Part` v0 @kind this, `okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L22f8b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22f8b6.  v0.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` := v1 @kind object;
  #L22f8ba.  v0.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L22f8be.  return @kind void;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22f760.  if v2 == 0 then goto L22f7bc;
  #L22f764.  if v1 == 0 then goto L22f78a;
  #L22f768.  v0:= "Content-Type" @kind object;
  #L22f76c.  call temp:= `get`(v1, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L22f772.  v0:= temp @kind object;
  #L22f774.  if v0 != 0 then goto L22f77a;
  #L22f778.  goto L22f78a;
  #L22f77a.  v1:= new `java.lang.IllegalArgumentException`;
  #L22f77e.  v2:= "Unexpected header: Content-Type" @kind object;
  #L22f782.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f788.  throw v1;
  #L22f78a.  if v1 == 0 then goto L22f7b0;
  #L22f78e.  v0:= "Content-Length" @kind object;
  #L22f792.  call temp:= `get`(v1, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L22f798.  v0:= temp @kind object;
  #L22f79a.  if v0 != 0 then goto L22f7a0;
  #L22f79e.  goto L22f7b0;
  #L22f7a0.  v1:= new `java.lang.IllegalArgumentException`;
  #L22f7a4.  v2:= "Unexpected header: Content-Length" @kind object;
  #L22f7a8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f7ae.  throw v1;
  #L22f7b0.  v0:= new `okhttp3.MultipartBody$Part`;
  #L22f7b4.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @kind direct;
  #L22f7ba.  return v0 @kind object;
  #L22f7bc.  v1:= new `java.lang.NullPointerException`;
  #L22f7c0.  v2:= "body == null" @kind object;
  #L22f7c4.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f7ca.  throw v1;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.RequestBody` v1 @kind object) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22f7dc.  v0:= 0I;
  #L22f7de.  call temp:= `create`(v0, v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L22f7e4.  v1:= temp @kind object;
  #L22f7e6.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22f7f8.  v0:= 0I;
  #L22f7fa.  call temp:= `create`(v0, v2) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L22f800.  v2:= temp @kind object;
  #L22f802.  call temp:= `createFormData`(v1, v0, v2) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L22f808.  v1:= temp @kind object;
  #L22f80a.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `okhttp3.RequestBody` v4 @kind object) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L22f81c.  if v2 == 0 then goto L22f878;
  #L22f820.  v0:= new `java.lang.StringBuilder`;
  #L22f824.  v1:= "form-data; name=" @kind object;
  #L22f828.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f82e.  call temp:= `appendQuotedString`(v0, v2) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L22f834.  if v3 == 0 then goto L22f848;
  #L22f838.  v2:= "; filename=" @kind object;
  #L22f83c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22f842.  call temp:= `appendQuotedString`(v0, v3) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L22f848.  v2:= 2I;
  #L22f84a.  v2:= new `java.lang.String`[v2];
  #L22f84e.  v3:= 0I;
  #L22f850.  v1:= "Content-Disposition" @kind object;
  #L22f854.  v2[v3]:= v1 @kind object;
  #L22f858.  v3:= 1I;
  #L22f85a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22f860.  v0:= temp @kind object;
  #L22f862.  v2[v3]:= v0 @kind object;
  #L22f866.  call temp:= `of`(v2) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L22f86c.  v2:= temp @kind object;
  #L22f86e.  call temp:= `create`(v2, v4) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L22f874.  v2:= temp @kind object;
  #L22f876.  return v2 @kind object;
  #L22f878.  v2:= new `java.lang.NullPointerException`;
  #L22f87c.  v3:= "name == null" @kind object;
  #L22f880.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f886.  throw v2;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f898.  v0:= v1.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` @kind object;
  #L22f89c.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f748.  v0:= v1.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` @kind object;
  #L22f74c.  return v0 @kind object;
}
