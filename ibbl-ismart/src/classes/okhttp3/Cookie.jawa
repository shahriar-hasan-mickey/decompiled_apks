record `okhttp3.Cookie` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie.domain` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cookie.expiresAt` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.hostOnly` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.httpOnly` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.name` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.path` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.persistent` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.secure` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.value` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.TIME_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.YEAR_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cookie;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L22ad48.  v0:= "(\\d{2,4})[^\\d]*" @kind object;
  #L22ad4c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L22ad52.  v0:= temp @kind object;
  #L22ad54.  `@@okhttp3.Cookie.YEAR_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L22ad58.  v0:= "(?i)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).*" @kind object;
  #L22ad5c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L22ad62.  v0:= temp @kind object;
  #L22ad64.  `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L22ad68.  v0:= "(\\d{1,2})[^\\d]*" @kind object;
  #L22ad6c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L22ad72.  v0:= temp @kind object;
  #L22ad74.  `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L22ad78.  v0:= "(\\d{1,2}):(\\d{1,2}):(\\d{1,2})[^\\d]*" @kind object;
  #L22ad7c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L22ad82.  v0:= temp @kind object;
  #L22ad84.  `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L22ad88.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cookie` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `boolean` v7 , `boolean` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lokhttp3/Cookie;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L22ad9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22ada2.  v0.`okhttp3.Cookie.name` @type ^`java.lang.String` := v1 @kind object;
  #L22ada6.  v0.`okhttp3.Cookie.value` @type ^`java.lang.String` := v2 @kind object;
  #L22adaa.  v0.`okhttp3.Cookie.expiresAt` @type ^`long` := v3 @kind wide;
  #L22adae.  v0.`okhttp3.Cookie.domain` @type ^`java.lang.String` := v5 @kind object;
  #L22adb2.  v0.`okhttp3.Cookie.path` @type ^`java.lang.String` := v6 @kind object;
  #L22adb6.  v0.`okhttp3.Cookie.secure` @type ^`boolean` := v7 @kind boolean;
  #L22adba.  v0.`okhttp3.Cookie.httpOnly` @type ^`boolean` := v8 @kind boolean;
  #L22adbe.  v0.`okhttp3.Cookie.hostOnly` @type ^`boolean` := v9 @kind boolean;
  #L22adc2.  v0.`okhttp3.Cookie.persistent` @type ^`boolean` := v10 @kind boolean;
  #L22adc6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cookie` v2 @kind this, `okhttp3.Cookie$Builder` v3 @kind object) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L22add8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22adde.  v0:= v3.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` @kind object;
  #L22ade2.  if v0 == 0 then goto L22ae60;
  #L22ade6.  v0:= v3.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` @kind object;
  #L22adea.  if v0 == 0 then goto L22ae50;
  #L22adee.  v0:= v3.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` @kind object;
  #L22adf2.  if v0 == 0 then goto L22ae40;
  #L22adf6.  v0:= v3.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` @kind object;
  #L22adfa.  v2.`okhttp3.Cookie.name` @type ^`java.lang.String` := v0 @kind object;
  #L22adfe.  v0:= v3.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` @kind object;
  #L22ae02.  v2.`okhttp3.Cookie.value` @type ^`java.lang.String` := v0 @kind object;
  #L22ae06.  v0:= v3.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` @kind wide;
  #L22ae0a.  v2.`okhttp3.Cookie.expiresAt` @type ^`long` := v0 @kind wide;
  #L22ae0e.  v0:= v3.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` @kind object;
  #L22ae12.  v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` := v0 @kind object;
  #L22ae16.  v0:= v3.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` @kind object;
  #L22ae1a.  v2.`okhttp3.Cookie.path` @type ^`java.lang.String` := v0 @kind object;
  #L22ae1e.  v0:= v3.`okhttp3.Cookie$Builder.secure` @type ^`boolean` @kind boolean;
  #L22ae22.  v2.`okhttp3.Cookie.secure` @type ^`boolean` := v0 @kind boolean;
  #L22ae26.  v0:= v3.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` @kind boolean;
  #L22ae2a.  v2.`okhttp3.Cookie.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L22ae2e.  v0:= v3.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` @kind boolean;
  #L22ae32.  v2.`okhttp3.Cookie.persistent` @type ^`boolean` := v0 @kind boolean;
  #L22ae36.  v3:= v3.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` @kind boolean;
  #L22ae3a.  v2.`okhttp3.Cookie.hostOnly` @type ^`boolean` := v3 @kind boolean;
  #L22ae3e.  return @kind void;
  #L22ae40.  v3:= new `java.lang.NullPointerException`;
  #L22ae44.  v0:= "builder.domain == null" @kind object;
  #L22ae48.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22ae4e.  throw v3;
  #L22ae50.  v3:= new `java.lang.NullPointerException`;
  #L22ae54.  v0:= "builder.value == null" @kind object;
  #L22ae58.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22ae5e.  throw v3;
  #L22ae60.  v3:= new `java.lang.NullPointerException`;
  #L22ae64.  v0:= "builder.name == null" @kind object;
  #L22ae68.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22ae6e.  throw v3;
}
procedure `int` `dateCharacterOffset`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22a3ec.  if v4 >= v5 then goto L22a462;
  #L22a3f0.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22a3f6.  v0:= temp;
  #L22a3f8.  v1:= 32I;
  #L22a3fc.  v2:= 1I;
  #L22a3fe.  if v0 >= v1 then goto L22a40a;
  #L22a402.  v1:= 9I;
  #L22a406.  if v0 != v1 then goto L22a450;
  #L22a40a.  v1:= 127I;
  #L22a40e.  if v0 >= v1 then goto L22a450;
  #L22a412.  v1:= 48I;
  #L22a416.  if v0 < v1 then goto L22a422;
  #L22a41a.  v1:= 57I;
  #L22a41e.  if v0 <= v1 then goto L22a450;
  #L22a422.  v1:= 97I;
  #L22a426.  if v0 < v1 then goto L22a432;
  #L22a42a.  v1:= 122I;
  #L22a42e.  if v0 <= v1 then goto L22a450;
  #L22a432.  v1:= 65I;
  #L22a436.  if v0 < v1 then goto L22a442;
  #L22a43a.  v1:= 90I;
  #L22a43e.  if v0 <= v1 then goto L22a450;
  #L22a442.  v1:= 58I;
  #L22a446.  if v0 != v1 then goto L22a44c;
  #L22a44a.  goto L22a450;
  #L22a44c.  v0:= 0I;
  #L22a44e.  goto L22a452;
  #L22a450.  v0:= 1I;
  #L22a452.  v1:= v6 ^~ 1;
  #L22a456.  if v0 != v1 then goto L22a45c;
  #L22a45a.  return v4;
  #L22a45c.  v4:= v4 + 1;
  #L22a460.  goto L22a3ec;
  #L22a462.  return v5;
}
procedure `boolean` `domainMatch`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L22a198.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a19e.  v0:= temp;
  #L22a1a0.  v1:= 1I;
  #L22a1a2.  if v0 == 0 then goto L22a1a8;
  #L22a1a6.  return v1;
  #L22a1a8.  call temp:= `endsWith`(v2, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22a1ae.  v0:= temp;
  #L22a1b0.  if v0 == 0 then goto L22a1e6;
  #L22a1b4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22a1ba.  v0:= temp;
  #L22a1bc.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22a1c2.  v3:= temp;
  #L22a1c4.  v0:= v0 - v3 @kind int;
  #L22a1c6.  v0:= v0 - v1 @kind int;
  #L22a1c8.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22a1ce.  v3:= temp;
  #L22a1d0.  v0:= 46I;
  #L22a1d4.  if v3 != v0 then goto L22a1e6;
  #L22a1d8.  call temp:= `verifyAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L22a1de.  v2:= temp;
  #L22a1e0.  if v2 != 0 then goto L22a1e6;
  #L22a1e4.  return v1;
  #L22a1e6.  v2:= 0I;
  #L22a1e8.  return v2;
}
procedure `okhttp3.Cookie` `parse`(`long` v24 , `okhttp3.HttpUrl` v26 @kind object, `java.lang.String` v27 @kind object) @signature `Lokhttp3/Cookie;.parse:(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L22aa48.  v0:= v27 @kind object;
  #L22aa4c.  call temp:= `length`(v27) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22aa52.  v1:= temp;
  #L22aa54.  v2:= 59I;
  #L22aa58.  v3:= 0I;
  #L22aa5a.  call temp:= `delimiterOffset`(v0, v3, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L22aa60.  v4:= temp;
  #L22aa62.  v5:= 61I;
  #L22aa66.  call temp:= `delimiterOffset`(v0, v3, v4, v5) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L22aa6c.  v6:= temp;
  #L22aa6e.  v7:= 0I;
  #L22aa70.  if v6 != v4 then goto L22aa76;
  #L22aa74.  return v7 @kind object;
  #L22aa76.  call temp:= `trimSubstring`(v0, v3, v6) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L22aa7c.  v9:= temp @kind object;
  #L22aa7e.  call temp:= `isEmpty`(v9) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22aa84.  v8:= temp;
  #L22aa86.  if v8 != 0 then goto L22acea;
  #L22aa8a.  call temp:= `indexOfControlOrNonAscii`(v9) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @kind static;
  #L22aa90.  v8:= temp;
  #L22aa92.  v10:= -1I;
  #L22aa94.  if v8 == v10 then goto L22aa9c;
  #L22aa98.  goto L22acea;
  #L22aa9c.  v8:= 1I;
  #L22aa9e.  v6:= v6 + v8 @kind int;
  #L22aaa0.  call temp:= `trimSubstring`(v0, v6, v4) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L22aaa6.  v6:= temp @kind object;
  #L22aaa8.  call temp:= `indexOfControlOrNonAscii`(v6) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @kind static;
  #L22aaae.  v11:= temp;
  #L22aab0.  if v11 == v10 then goto L22aab6;
  #L22aab4.  return v7 @kind object;
  #L22aab6.  v4:= v4 + v8 @kind int;
  #L22aab8.  v10:= -1L;
  #L22aabc.  v12:= 253402300799999L;
  #L22aac6.  v8:= v7 @kind object;
  #L22aac8.  v19:= v8 @kind object;
  #L22aacc.  v14:= v10 @kind wide;
  #L22aace.  v21:= v12 @kind wide;
  #L22aad2.  v17:= 0I;
  #L22aad6.  v18:= 0I;
  #L22aada.  v20:= 1I;
  #L22aade.  v23:= 0I;
  #L22aae2.  if v4 >= v1 then goto L22abce;
  #L22aae6.  call temp:= `delimiterOffset`(v0, v4, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L22aaec.  v7:= temp;
  #L22aaee.  call temp:= `delimiterOffset`(v0, v4, v7, v5) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L22aaf4.  v2:= temp;
  #L22aaf6.  call temp:= `trimSubstring`(v0, v4, v2) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L22aafc.  v4:= temp @kind object;
  #L22aafe.  if v2 >= v7 then goto L22ab10;
  #L22ab02.  v2:= v2 + 1;
  #L22ab06.  call temp:= `trimSubstring`(v0, v2, v7) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L22ab0c.  v2:= temp @kind object;
  #L22ab0e.  goto L22ab14;
  #L22ab10.  v2:= "" @kind object;
  #L22ab14.  v5:= "expires" @kind object;
  #L22ab18.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22ab1e.  v5:= temp;
  #L22ab20.  if v5 == 0 then goto L22ab3e;
  #L22ab24.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22ab2a.  v4:= temp;
  #L22ab2c.  call temp:= `parseExpires`(v2, v3, v4) @signature `Lokhttp3/Cookie;.parseExpires:(Ljava/lang/String;II)J` @kind static;
  #L22ab32.  v4:= temp @kind wide;
  #L22ab34.  v21:= v4 @kind wide;
  #L22ab38.  v23:= 1I;
  #L22ab3c.  goto L22abbe;
  #L22ab3e.  v5:= "max-age" @kind object;
  #L22ab42.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22ab48.  v5:= temp;
  #L22ab4a.  if v5 == 0 then goto L22ab5e;
  #L22ab4e.  call temp:= `parseMaxAge`(v2) @signature `Lokhttp3/Cookie;.parseMaxAge:(Ljava/lang/String;)J` @kind static;
  #L22ab54.  v4:= temp @kind wide;
  #L22ab56.  v14:= v4 @kind wide;
  #L22ab58.  v23:= 1I;
  #L22ab5c.  goto L22abbe;
  #L22ab5e.  v5:= "domain" @kind object;
  #L22ab62.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22ab68.  v5:= temp;
  #L22ab6a.  if v5 == 0 then goto L22ab7e;
  #L22ab6e.  call temp:= `parseDomain`(v2) @signature `Lokhttp3/Cookie;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22ab74.  v2:= temp @kind object;
  #L22ab76.  v8:= v2 @kind object;
  #L22ab78.  v20:= 0I;
  #L22ab7c.  goto L22abbe;
  #L22ab7e.  v5:= "path" @kind object;
  #L22ab82.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22ab88.  v5:= temp;
  #L22ab8a.  if v5 == 0 then goto L22ab94;
  #L22ab8e.  v19:= v2 @kind object;
  #L22ab92.  goto L22abbe;
  #L22ab94.  v2:= "secure" @kind object;
  #L22ab98.  call temp:= `equalsIgnoreCase`(v4, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22ab9e.  v2:= temp;
  #L22aba0.  if v2 == 0 then goto L22abaa;
  #L22aba4.  v17:= 1I;
  #L22aba8.  goto L22abbe;
  #L22abaa.  v2:= "httponly" @kind object;
  #L22abae.  call temp:= `equalsIgnoreCase`(v4, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22abb4.  v2:= temp;
  #L22abb6.  if v2 == 0 then goto L22abbe;
  #L22abba.  v18:= 1I;
  #L22abbe.  v4:= v7 + 1;
  #L22abc2.  v2:= 59I;
  #L22abc6.  v5:= 61I;
  #L22abca.  v7:= 0I;
  #L22abcc.  goto L22aae2;
  #L22abce.  v0:= -9223372036854775808L;
  #L22abd2.  v2:= lcmp(v14, v0);
  #L22abd6.  if v2 != 0 then goto L22abde;
  #L22abda.  v11:= v0 @kind wide;
  #L22abdc.  goto L22ac2e;
  #L22abde.  v0:= lcmp(v14, v10);
  #L22abe2.  if v0 == 0 then goto L22ac2a;
  #L22abe6.  v0:= 9223372036854775L;
  #L22abf0.  v2:= lcmp(v14, v0);
  #L22abf4.  if v2 > 0 then goto L22ac02;
  #L22abf8.  v0:= 1000L;
  #L22abfc.  v14:= v14 * v0 @kind long;
  #L22ac00.  goto L22ac0c;
  #L22ac02.  v14:= 9223372036854775807L;
  #L22ac0c.  v0:= v24 + v14 @kind long;
  #L22ac10.  v2:= lcmp(v0, v24);
  #L22ac14.  if v2 < 0 then goto L22ac26;
  #L22ac18.  v2:= lcmp(v0, v12);
  #L22ac1c.  if v2 <= 0 then goto L22ac22;
  #L22ac20.  goto L22ac26;
  #L22ac22.  v11:= v0 @kind wide;
  #L22ac24.  goto L22ac2e;
  #L22ac26.  v11:= v12 @kind wide;
  #L22ac28.  goto L22ac2e;
  #L22ac2a.  v11:= v21 @kind wide;
  #L22ac2e.  call temp:= `host`(v26) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L22ac34.  v0:= temp @kind object;
  #L22ac36.  if v8 != 0 then goto L22ac40;
  #L22ac3a.  v13:= v0 @kind object;
  #L22ac3c.  v1:= 0I;
  #L22ac3e.  goto L22ac54;
  #L22ac40.  call temp:= `domainMatch`(v0, v8) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L22ac46.  v1:= temp;
  #L22ac48.  if v1 != 0 then goto L22ac50;
  #L22ac4c.  v1:= 0I;
  #L22ac4e.  return v1 @kind object;
  #L22ac50.  v1:= 0I;
  #L22ac52.  v13:= v8 @kind object;
  #L22ac54.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22ac5a.  v0:= temp;
  #L22ac5c.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22ac62.  v2:= temp;
  #L22ac64.  if v0 == v2 then goto L22ac84;
  #L22ac68.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L22ac6e.  v0:= temp @kind object;
  #L22ac70.  call temp:= `getEffectiveTldPlusOne`(v0, v13) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L22ac76.  v0:= temp @kind object;
  #L22ac78.  if v0 != 0 then goto L22ac7e;
  #L22ac7c.  return v1 @kind object;
  #L22ac7e.  v7:= v19 @kind object;
  #L22ac82.  goto L22ac88;
  #L22ac84.  v7:= v19 @kind object;
  #L22ac88.  if v7 == 0 then goto L22aca2;
  #L22ac8c.  v0:= "/" @kind object;
  #L22ac90.  call temp:= `startsWith`(v7, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22ac96.  v0:= temp;
  #L22ac98.  if v0 != 0 then goto L22ac9e;
  #L22ac9c.  goto L22aca2;
  #L22ac9e.  v14:= v7 @kind object;
  #L22aca0.  goto L22acca;
  #L22aca2.  call temp:= `encodedPath`(v26) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L22aca8.  v0:= temp @kind object;
  #L22acaa.  v1:= 47I;
  #L22acae.  call temp:= `lastIndexOf`(v0, v1) @signature `Ljava/lang/String;.lastIndexOf:(I)I` @kind virtual;
  #L22acb4.  v1:= temp;
  #L22acb6.  if v1 == 0 then goto L22acc4;
  #L22acba.  call temp:= `substring`(v0, v3, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22acc0.  v0:= temp @kind object;
  #L22acc2.  goto L22acc8;
  #L22acc4.  v0:= "/" @kind object;
  #L22acc8.  v14:= v0 @kind object;
  #L22acca.  v0:= new `okhttp3.Cookie`;
  #L22acce.  v8:= v0 @kind object;
  #L22acd0.  v10:= v6 @kind object;
  #L22acd2.  v15:= v17;
  #L22acd6.  v16:= v18;
  #L22acda.  v17:= v20;
  #L22acde.  v18:= v23;
  #L22ace2.  call `<init>`(v8, v9, v10, v11, v13, v14, v15, v16, v17, v18) @signature `Lokhttp3/Cookie;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @kind direct;
  #L22ace8.  return v0 @kind object;
  #L22acea.  v0:= v7 @kind object;
  #L22acec.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L22ab24..L22ab34] goto L22abbe;
  catch `java.lang.NumberFormatException` @[L22ab4e..L22ab56] goto L22abbe;
  catch `java.lang.IllegalArgumentException` @[L22ab6e..L22ab76] goto L22abbe;
}
procedure `okhttp3.Cookie` `parse`(`okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L22ad24.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L22ad2a.  v0:= temp @kind wide;
  #L22ad2c.  call temp:= `parse`(v0, v2, v3) @signature `Lokhttp3/Cookie;.parse:(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @kind static;
  #L22ad32.  v2:= temp @kind object;
  #L22ad34.  return v2 @kind object;
}
procedure `java.util.List` `parseAll`(`okhttp3.HttpUrl` v4 @kind object, `okhttp3.Headers` v5 @kind object) @signature `Lokhttp3/Cookie;.parseAll:(Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22a6e8.  v0:= "Set-Cookie" @kind object;
  #L22a6ec.  call temp:= `values`(v5, v0) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L22a6f2.  v5:= temp @kind object;
  #L22a6f4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22a6fa.  v0:= temp;
  #L22a6fc.  v1:= 0I;
  #L22a6fe.  v2:= 0I;
  #L22a700.  if v2 >= v0 then goto L22a738;
  #L22a704.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22a70a.  v3:= temp @kind object;
  #L22a70c.  v3:= (`java.lang.String`) v3 @kind object;
  #L22a710.  call temp:= `parse`(v4, v3) @signature `Lokhttp3/Cookie;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @kind static;
  #L22a716.  v3:= temp @kind object;
  #L22a718.  if v3 != 0 then goto L22a71e;
  #L22a71c.  goto L22a732;
  #L22a71e.  if v1 != 0 then goto L22a72c;
  #L22a722.  v1:= new `java.util.ArrayList`;
  #L22a726.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22a72c.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22a732.  v2:= v2 + 1;
  #L22a736.  goto L22a700;
  #L22a738.  if v1 == 0 then goto L22a746;
  #L22a73c.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22a742.  v4:= temp @kind object;
  #L22a744.  goto L22a74e;
  #L22a746.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L22a74c.  v4:= temp @kind object;
  #L22a74e.  return v4 @kind object;
}
procedure `java.lang.String` `parseDomain`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/Cookie;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L22a54c.  v0:= "." @kind object;
  #L22a550.  call temp:= `endsWith`(v1, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22a556.  v0:= temp;
  #L22a558.  if v0 != 0 then goto L22a590;
  #L22a55c.  v0:= "." @kind object;
  #L22a560.  call temp:= `startsWith`(v1, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22a566.  v0:= temp;
  #L22a568.  if v0 == 0 then goto L22a576;
  #L22a56c.  v0:= 1I;
  #L22a56e.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L22a574.  v1:= temp @kind object;
  #L22a576.  call temp:= `canonicalizeHost`(v1) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22a57c.  v1:= temp @kind object;
  #L22a57e.  if v1 == 0 then goto L22a584;
  #L22a582.  return v1 @kind object;
  #L22a584.  v1:= new `java.lang.IllegalArgumentException`;
  #L22a588.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a58e.  throw v1;
  #L22a590.  v1:= new `java.lang.IllegalArgumentException`;
  #L22a594.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a59a.  throw v1;
}
procedure `long` `parseExpires`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lokhttp3/Cookie;.parseExpires:(Ljava/lang/String;II)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L22a778.  v0:= 0I;
  #L22a77a.  call temp:= `dateCharacterOffset`(v12, v13, v14, v0) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L22a780.  v13:= temp;
  #L22a782.  v1:= `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L22a786.  call temp:= `matcher`(v1, v12) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L22a78c.  v1:= temp @kind object;
  #L22a78e.  v2:= -1I;
  #L22a790.  v3:= -1I;
  #L22a792.  v4:= -1I;
  #L22a794.  v5:= -1I;
  #L22a796.  v6:= -1I;
  #L22a798.  v7:= -1I;
  #L22a79a.  v8:= -1I;
  #L22a79c.  v9:= 2I;
  #L22a79e.  v10:= 1I;
  #L22a7a0.  if v13 >= v14 then goto L22a8c6;
  #L22a7a4.  v11:= v13 + 1;
  #L22a7a8.  call temp:= `dateCharacterOffset`(v12, v11, v14, v10) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L22a7ae.  v11:= temp;
  #L22a7b0.  call temp:= `region`(v1, v13, v11) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L22a7b6.  if v4 != v2 then goto L22a80c;
  #L22a7ba.  v13:= `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L22a7be.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L22a7c4.  v13:= temp @kind object;
  #L22a7c6.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L22a7cc.  v13:= temp;
  #L22a7ce.  if v13 == 0 then goto L22a80c;
  #L22a7d2.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22a7d8.  v13:= temp @kind object;
  #L22a7da.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L22a7e0.  v13:= temp;
  #L22a7e2.  call temp:= `group`(v1, v9) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22a7e8.  v4:= temp @kind object;
  #L22a7ea.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L22a7f0.  v4:= temp;
  #L22a7f2.  v7:= 3I;
  #L22a7f4.  call temp:= `group`(v1, v7) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22a7fa.  v7:= temp @kind object;
  #L22a7fc.  call temp:= `parseInt`(v7) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L22a802.  v7:= temp;
  #L22a804.  v8:= v7;
  #L22a806.  v7:= v4;
  #L22a808.  v4:= v13;
  #L22a80a.  goto L22a8b6;
  #L22a80c.  if v5 != v2 then goto L22a83c;
  #L22a810.  v13:= `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L22a814.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L22a81a.  v13:= temp @kind object;
  #L22a81c.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L22a822.  v13:= temp;
  #L22a824.  if v13 == 0 then goto L22a83c;
  #L22a828.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22a82e.  v13:= temp @kind object;
  #L22a830.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L22a836.  v13:= temp;
  #L22a838.  v5:= v13;
  #L22a83a.  goto L22a8b6;
  #L22a83c.  if v6 != v2 then goto L22a888;
  #L22a840.  v13:= `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L22a844.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L22a84a.  v13:= temp @kind object;
  #L22a84c.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L22a852.  v13:= temp;
  #L22a854.  if v13 == 0 then goto L22a888;
  #L22a858.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22a85e.  v13:= temp @kind object;
  #L22a860.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L22a864.  call temp:= `toLowerCase`(v13, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L22a86a.  v13:= temp @kind object;
  #L22a86c.  v6:= `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L22a870.  call temp:= `pattern`(v6) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L22a876.  v6:= temp @kind object;
  #L22a878.  call temp:= `indexOf`(v6, v13) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L22a87e.  v13:= temp;
  #L22a880.  v13:= v13 / 4;
  #L22a884.  v6:= v13;
  #L22a886.  goto L22a8b6;
  #L22a888.  if v3 != v2 then goto L22a8b6;
  #L22a88c.  v13:= `@@okhttp3.Cookie.YEAR_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L22a890.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L22a896.  v13:= temp @kind object;
  #L22a898.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L22a89e.  v13:= temp;
  #L22a8a0.  if v13 == 0 then goto L22a8b6;
  #L22a8a4.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22a8aa.  v13:= temp @kind object;
  #L22a8ac.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L22a8b2.  v13:= temp;
  #L22a8b4.  v3:= v13;
  #L22a8b6.  v11:= v11 + 1;
  #L22a8ba.  call temp:= `dateCharacterOffset`(v12, v11, v14, v0) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L22a8c0.  v13:= temp;
  #L22a8c2.  goto L22a79c;
  #L22a8c6.  v12:= 70I;
  #L22a8ca.  if v3 < v12 then goto L22a8da;
  #L22a8ce.  v12:= 99I;
  #L22a8d2.  if v3 > v12 then goto L22a8da;
  #L22a8d6.  v3:= v3 + 1900;
  #L22a8da.  if v3 < 0 then goto L22a8ea;
  #L22a8de.  v12:= 69I;
  #L22a8e2.  if v3 > v12 then goto L22a8ea;
  #L22a8e6.  v3:= v3 + 2000;
  #L22a8ea.  v12:= 1601I;
  #L22a8ee.  if v3 < v12 then goto L22a9ba;
  #L22a8f2.  if v6 == v2 then goto L22a9ae;
  #L22a8f6.  if v5 < v10 then goto L22a9a2;
  #L22a8fa.  v12:= 31I;
  #L22a8fe.  if v5 > v12 then goto L22a9a2;
  #L22a902.  if v4 < 0 then goto L22a996;
  #L22a906.  v12:= 23I;
  #L22a90a.  if v4 > v12 then goto L22a996;
  #L22a90e.  if v7 < 0 then goto L22a98a;
  #L22a912.  v12:= 59I;
  #L22a916.  if v7 > v12 then goto L22a98a;
  #L22a91a.  if v8 < 0 then goto L22a97e;
  #L22a91e.  if v8 > v12 then goto L22a97e;
  #L22a922.  v12:= new `java.util.GregorianCalendar`;
  #L22a926.  v13:= `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` @kind object;
  #L22a92a.  call `<init>`(v12, v13) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L22a930.  call `setLenient`(v12, v0) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L22a936.  call `set`(v12, v10, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L22a93c.  v6:= v6 - v10 @kind int;
  #L22a93e.  call `set`(v12, v9, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L22a944.  v13:= 5I;
  #L22a946.  call `set`(v12, v13, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L22a94c.  v13:= 11I;
  #L22a950.  call `set`(v12, v13, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L22a956.  v13:= 12I;
  #L22a95a.  call `set`(v12, v13, v7) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L22a960.  v13:= 13I;
  #L22a964.  call `set`(v12, v13, v8) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L22a96a.  v13:= 14I;
  #L22a96e.  call `set`(v12, v13, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L22a974.  call temp:= `getTimeInMillis`(v12) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L22a97a.  v12:= temp @kind wide;
  #L22a97c.  return v12 @kind wide;
  #L22a97e.  v12:= new `java.lang.IllegalArgumentException`;
  #L22a982.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a988.  throw v12;
  #L22a98a.  v12:= new `java.lang.IllegalArgumentException`;
  #L22a98e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a994.  throw v12;
  #L22a996.  v12:= new `java.lang.IllegalArgumentException`;
  #L22a99a.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a9a0.  throw v12;
  #L22a9a2.  v12:= new `java.lang.IllegalArgumentException`;
  #L22a9a6.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a9ac.  throw v12;
  #L22a9ae.  v12:= new `java.lang.IllegalArgumentException`;
  #L22a9b2.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a9b8.  throw v12;
  #L22a9ba.  v12:= new `java.lang.IllegalArgumentException`;
  #L22a9be.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a9c4.  throw v12;
  #L22a9c6.  return @kind void;
}
procedure `long` `parseMaxAge`(`java.lang.String` v6 @kind object) @signature `Lokhttp3/Cookie;.parseMaxAge:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22a9d8.  v0:= -9223372036854775808L;
  #L22a9dc.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L22a9e2.  v2:= temp @kind wide;
  #L22a9e4.  v4:= 0L;
  #L22a9e8.  v6:= lcmp(v2, v4);
  #L22a9ec.  if v6 > 0 then goto L22a9f2;
  #L22a9f0.  goto L22a9f4;
  #L22a9f2.  v0:= v2 @kind wide;
  #L22a9f4.  return v0 @kind wide;
  #L22a9f6.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L22a9f8.  v3:= "-?\\d+" @kind object;
  #L22a9fc.  call temp:= `matches`(v6, v3) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L22aa02.  v3:= temp;
  #L22aa04.  if v3 == 0 then goto L22aa26;
  #L22aa08.  v2:= "-" @kind object;
  #L22aa0c.  call temp:= `startsWith`(v6, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22aa12.  v6:= temp;
  #L22aa14.  if v6 == 0 then goto L22aa1a;
  #L22aa18.  goto L22aa24;
  #L22aa1a.  v0:= 9223372036854775807L;
  #L22aa24.  return v0 @kind wide;
  #L22aa26.  throw v2;
  catch `java.lang.NumberFormatException` @[L22a9dc..L22a9e4] goto L22a9f6;
}
procedure `boolean` `pathMatch`(`okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.pathMatch:(Lokhttp3/HttpUrl;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L22a358.  call temp:= `encodedPath`(v2) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L22a35e.  v2:= temp @kind object;
  #L22a360.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a366.  v0:= temp;
  #L22a368.  v1:= 1I;
  #L22a36a.  if v0 == 0 then goto L22a370;
  #L22a36e.  return v1;
  #L22a370.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22a376.  v0:= temp;
  #L22a378.  if v0 == 0 then goto L22a3a8;
  #L22a37c.  v0:= "/" @kind object;
  #L22a380.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22a386.  v0:= temp;
  #L22a388.  if v0 == 0 then goto L22a38e;
  #L22a38c.  return v1;
  #L22a38e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22a394.  v3:= temp;
  #L22a396.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22a39c.  v2:= temp;
  #L22a39e.  v3:= 47I;
  #L22a3a2.  if v2 != v3 then goto L22a3a8;
  #L22a3a6.  return v1;
  #L22a3a8.  v2:= 0I;
  #L22a3aa.  return v2;
}
procedure `java.lang.String` `domain`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.domain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a51c.  v0:= v1.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L22a520.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Cookie` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lokhttp3/Cookie;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22a1fc.  v0:= instanceof @variable v7 @type ^`okhttp3.Cookie` @kind boolean;
  #L22a200.  v1:= 0I;
  #L22a202.  if v0 != 0 then goto L22a208;
  #L22a206.  return v1;
  #L22a208.  v7:= (`okhttp3.Cookie`) v7 @kind object;
  #L22a20c.  v0:= v7.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L22a210.  v2:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L22a214.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a21a.  v0:= temp;
  #L22a21c.  if v0 == 0 then goto L22a29e;
  #L22a220.  v0:= v7.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L22a224.  v2:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L22a228.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a22e.  v0:= temp;
  #L22a230.  if v0 == 0 then goto L22a29e;
  #L22a234.  v0:= v7.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L22a238.  v2:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L22a23c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a242.  v0:= temp;
  #L22a244.  if v0 == 0 then goto L22a29e;
  #L22a248.  v0:= v7.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L22a24c.  v2:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L22a250.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a256.  v0:= temp;
  #L22a258.  if v0 == 0 then goto L22a29e;
  #L22a25c.  v2:= v7.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L22a260.  v4:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L22a264.  v0:= lcmp(v2, v4);
  #L22a268.  if v0 != 0 then goto L22a29e;
  #L22a26c.  v0:= v7.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L22a270.  v2:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L22a274.  if v0 != v2 then goto L22a29e;
  #L22a278.  v0:= v7.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L22a27c.  v2:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L22a280.  if v0 != v2 then goto L22a29e;
  #L22a284.  v0:= v7.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L22a288.  v2:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L22a28c.  if v0 != v2 then goto L22a29e;
  #L22a290.  v7:= v7.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L22a294.  v0:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L22a298.  if v7 != v0 then goto L22a29e;
  #L22a29c.  v1:= 1I;
  #L22a29e.  return v1;
}
procedure `long` `expiresAt`(`okhttp3.Cookie` v2 @kind this) @signature `Lokhttp3/Cookie;.expiresAt:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22a760.  v0:= v2.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L22a764.  return v0 @kind wide;
}
procedure `int` `hashCode`(`okhttp3.Cookie` v6 @kind this) @signature `Lokhttp3/Cookie;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22a474.  v0:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L22a478.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L22a47e.  v0:= temp;
  #L22a480.  v1:= 527I;
  #L22a484.  v1:= v1 + v0 @kind int;
  #L22a486.  v1:= v1 * 31;
  #L22a48a.  v0:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L22a48e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L22a494.  v0:= temp;
  #L22a496.  v1:= v1 + v0 @kind int;
  #L22a498.  v1:= v1 * 31;
  #L22a49c.  v0:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L22a4a0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L22a4a6.  v0:= temp;
  #L22a4a8.  v1:= v1 + v0 @kind int;
  #L22a4aa.  v1:= v1 * 31;
  #L22a4ae.  v0:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L22a4b2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L22a4b8.  v0:= temp;
  #L22a4ba.  v1:= v1 + v0 @kind int;
  #L22a4bc.  v1:= v1 * 31;
  #L22a4c0.  v2:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L22a4c4.  v0:= 32I;
  #L22a4c8.  v4:= v2 ^>> v0 @kind long;
  #L22a4cc.  v2:= v2 ^~ v4 @kind long;
  #L22a4ce.  v0:= (`int`) v2 @kind l2i;
  #L22a4d0.  v1:= v1 + v0 @kind int;
  #L22a4d2.  v1:= v1 * 31;
  #L22a4d6.  v0:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L22a4da.  v0:= v0 ^~ 1;
  #L22a4de.  v1:= v1 + v0 @kind int;
  #L22a4e0.  v1:= v1 * 31;
  #L22a4e4.  v0:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L22a4e8.  v0:= v0 ^~ 1;
  #L22a4ec.  v1:= v1 + v0 @kind int;
  #L22a4ee.  v1:= v1 * 31;
  #L22a4f2.  v0:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L22a4f6.  v0:= v0 ^~ 1;
  #L22a4fa.  v1:= v1 + v0 @kind int;
  #L22a4fc.  v1:= v1 * 31;
  #L22a500.  v0:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L22a504.  v0:= v0 ^~ 1;
  #L22a508.  v1:= v1 + v0 @kind int;
  #L22a50a.  return v1;
}
procedure `boolean` `hostOnly`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.hostOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a2b0.  v0:= v1.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L22a2b4.  return v0;
}
procedure `boolean` `httpOnly`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.httpOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a2c8.  v0:= v1.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L22a2cc.  return v0;
}
procedure `boolean` `matches`(`okhttp3.Cookie` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object) @signature `Lokhttp3/Cookie;.matches:(Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22a2e0.  v0:= v2.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L22a2e4.  if v0 == 0 then goto L22a2fe;
  #L22a2e8.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L22a2ee.  v0:= temp @kind object;
  #L22a2f0.  v1:= v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L22a2f4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a2fa.  v0:= temp;
  #L22a2fc.  goto L22a312;
  #L22a2fe.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L22a304.  v0:= temp @kind object;
  #L22a306.  v1:= v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L22a30a.  call temp:= `domainMatch`(v0, v1) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L22a310.  v0:= temp;
  #L22a312.  v1:= 0I;
  #L22a314.  if v0 != 0 then goto L22a31a;
  #L22a318.  return v1;
  #L22a31a.  v0:= v2.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L22a31e.  call temp:= `pathMatch`(v3, v0) @signature `Lokhttp3/Cookie;.pathMatch:(Lokhttp3/HttpUrl;Ljava/lang/String;)Z` @kind static;
  #L22a324.  v0:= temp;
  #L22a326.  if v0 != 0 then goto L22a32c;
  #L22a32a.  return v1;
  #L22a32c.  v0:= v2.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L22a330.  if v0 == 0 then goto L22a342;
  #L22a334.  call temp:= `isHttps`(v3) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L22a33a.  v3:= temp;
  #L22a33c.  if v3 != 0 then goto L22a342;
  #L22a340.  return v1;
  #L22a342.  v3:= 1I;
  #L22a344.  return v3;
}
procedure `java.lang.String` `name`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.name:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a534.  v0:= v1.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L22a538.  return v0 @kind object;
}
procedure `java.lang.String` `path`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.path:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a5ac.  v0:= v1.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L22a5b0.  return v0 @kind object;
}
procedure `boolean` `persistent`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.persistent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a3bc.  v0:= v1.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L22a3c0.  return v0;
}
procedure `boolean` `secure`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.secure:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a3d4.  v0:= v1.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L22a3d8.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a5c4.  v0:= 0I;
  #L22a5c6.  call temp:= `toString`(v1, v0) @signature `Lokhttp3/Cookie;.toString:(Z)Ljava/lang/String;` @kind virtual;
  #L22a5cc.  v0:= temp @kind object;
  #L22a5ce.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Cookie` v6 @kind this, `boolean` v7 ) @signature `Lokhttp3/Cookie;.toString:(Z)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22a5e0.  v0:= new `java.lang.StringBuilder`;
  #L22a5e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22a5ea.  v1:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L22a5ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a5f4.  v1:= 61I;
  #L22a5f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a5fe.  v1:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L22a602.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a608.  v1:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L22a60c.  if v1 == 0 then goto L22a652;
  #L22a610.  v1:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L22a614.  v3:= -9223372036854775808L;
  #L22a618.  v5:= lcmp(v1, v3);
  #L22a61c.  if v5 != 0 then goto L22a62c;
  #L22a620.  v1:= "; max-age=0" @kind object;
  #L22a624.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a62a.  goto L22a652;
  #L22a62c.  v1:= "; expires=" @kind object;
  #L22a630.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a636.  v1:= new `java.util.Date`;
  #L22a63a.  v2:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L22a63e.  call `<init>`(v1, v2) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L22a644.  call temp:= `format`(v1) @signature `Lokhttp3/internal/http/HttpDate;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L22a64a.  v1:= temp @kind object;
  #L22a64c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a652.  v1:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L22a656.  if v1 != 0 then goto L22a67c;
  #L22a65a.  v1:= "; domain=" @kind object;
  #L22a65e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a664.  if v7 == 0 then goto L22a672;
  #L22a668.  v7:= "." @kind object;
  #L22a66c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a672.  v7:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L22a676.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a67c.  v7:= "; path=" @kind object;
  #L22a680.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a686.  v7:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L22a68a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a690.  v7:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L22a694.  if v7 == 0 then goto L22a6a2;
  #L22a698.  v7:= "; secure" @kind object;
  #L22a69c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a6a2.  v7:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L22a6a6.  if v7 == 0 then goto L22a6b4;
  #L22a6aa.  v7:= "; httponly" @kind object;
  #L22a6ae.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22a6b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22a6ba.  v7:= temp @kind object;
  #L22a6bc.  return v7 @kind object;
}
procedure `java.lang.String` `value`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.value:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a6d0.  v0:= v1.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L22a6d4.  return v0 @kind object;
}
