record `okhttp3.Cache$CacheRequestImpl$1` @kind class @AccessFlag  extends `okio.ForwardingSink` @kind class {
  `okhttp3.Cache$CacheRequestImpl` `okhttp3.Cache$CacheRequestImpl$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.Cache$CacheRequestImpl$1.val$editor` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Cache` `okhttp3.Cache$CacheRequestImpl$1.val$this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$CacheRequestImpl$1` v0 @kind this, `okhttp3.Cache$CacheRequestImpl` v1 @kind object, `okio.Sink` v2 @kind object, `okhttp3.Cache` v3 @kind object, `okhttp3.internal.cache.DiskLruCache$Editor` v4 @kind object) @signature `Lokhttp3/Cache$CacheRequestImpl$1;.<init>:(Lokhttp3/Cache$CacheRequestImpl;Lokio/Sink;Lokhttp3/Cache;Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L226444.  v0.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` := v1 @kind object;
  #L226448.  v0.`okhttp3.Cache$CacheRequestImpl$1.val$this$0` @type ^`okhttp3.Cache` := v3 @kind object;
  #L22644c.  v0.`okhttp3.Cache$CacheRequestImpl$1.val$editor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` := v4 @kind object;
  #L226450.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L226456.  return @kind void;
}
procedure `void` `close`(`okhttp3.Cache$CacheRequestImpl$1` v4 @kind this) @signature `Lokhttp3/Cache$CacheRequestImpl$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L226468.  v0:= v4.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L22646c.  v0:= v0.`okhttp3.Cache$CacheRequestImpl.this$0` @type ^`okhttp3.Cache` @kind object;
  #L226470.  @monitorenter v0
  #L226472.  v1:= v4.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L226476.  v1:= v1.`okhttp3.Cache$CacheRequestImpl.done` @type ^`boolean` @kind boolean;
  #L22647a.  if v1 == 0 then goto L226482;
  #L22647e.  @monitorexit v0
  #L226480.  return @kind void;
  #L226482.  v1:= v4.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L226486.  v2:= 1I;
  #L226488.  v1.`okhttp3.Cache$CacheRequestImpl.done` @type ^`boolean` := v2 @kind boolean;
  #L22648c.  v1:= v4.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L226490.  v1:= v1.`okhttp3.Cache$CacheRequestImpl.this$0` @type ^`okhttp3.Cache` @kind object;
  #L226494.  v3:= v1.`okhttp3.Cache.writeSuccessCount` @type ^`int`;
  #L226498.  v3:= v3 + v2 @kind int;
  #L22649a.  v1.`okhttp3.Cache.writeSuccessCount` @type ^`int` := v3;
  #L22649e.  @monitorexit v0
  #L2264a0.  call `close`(v4) @signature `Lokio/ForwardingSink;.close:()V` @kind super;
  #L2264a6.  v0:= v4.`okhttp3.Cache$CacheRequestImpl$1.val$editor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L2264aa.  call `commit`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L2264b0.  return @kind void;
  #L2264b2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2264b4.  @monitorexit v0
  #L2264b6.  throw v1;
  catch `java.lang.Throwable` @[L226472..L2264a0] goto L2264b2;
  catch `java.lang.Throwable` @[L2264b4..L2264b6] goto L2264b2;
}
