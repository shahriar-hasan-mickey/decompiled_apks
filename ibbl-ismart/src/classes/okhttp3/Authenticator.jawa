record `okhttp3.Authenticator` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `okhttp3.Authenticator` `@@okhttp3.Authenticator.NONE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Authenticator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L226210.  v0:= new `okhttp3.Authenticator$1`;
  #L226214.  call `<init>`(v0) @signature `Lokhttp3/Authenticator$1;.<init>:()V` @kind direct;
  #L22621a.  `@@okhttp3.Authenticator.NONE` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L22621e.  return @kind void;
}
procedure `okhttp3.Request` `authenticate`(`okhttp3.Route` v0 @kind object, `okhttp3.Response` v1 @kind object) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
