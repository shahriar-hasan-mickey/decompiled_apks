record `okhttp3.MultipartBody$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okio.ByteString` `okhttp3.MultipartBody$Builder.boundary` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody$Builder.parts` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody$Builder.type` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L22f6e4.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L22f6ea.  v0:= temp @kind object;
  #L22f6ec.  call temp:= `toString`(v0) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L22f6f2.  v0:= temp @kind object;
  #L22f6f4.  call `<init>`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f6fa.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L22f70c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22f712.  v0:= `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` @kind object;
  #L22f716.  v1.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L22f71a.  v0:= new `java.util.ArrayList`;
  #L22f71e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22f724.  v1.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` := v0 @kind object;
  #L22f728.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L22f72e.  v2:= temp @kind object;
  #L22f730.  v1.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` := v2 @kind object;
  #L22f734.  return @kind void;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L22f5b4.  call temp:= `createFormData`(v1, v2) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L22f5ba.  v1:= temp @kind object;
  #L22f5bc.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L22f5c2.  v1:= temp @kind object;
  #L22f5c4.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `okhttp3.RequestBody` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L22f5d8.  call temp:= `createFormData`(v1, v2, v3) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L22f5de.  v1:= temp @kind object;
  #L22f5e0.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L22f5e6.  v1:= temp @kind object;
  #L22f5e8.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L22f5fc.  call temp:= `create`(v1, v2) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L22f602.  v1:= temp @kind object;
  #L22f604.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L22f60a.  v1:= temp @kind object;
  #L22f60c.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.MultipartBody$Part` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f620.  if v2 == 0 then goto L22f630;
  #L22f624.  v0:= v1.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L22f628.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22f62e.  return v1 @kind object;
  #L22f630.  v2:= new `java.lang.NullPointerException`;
  #L22f634.  v0:= "part == null" @kind object;
  #L22f638.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f63e.  throw v2;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `okhttp3.RequestBody` v1 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L22f650.  call temp:= `create`(v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L22f656.  v1:= temp @kind object;
  #L22f658.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L22f65e.  v1:= temp @kind object;
  #L22f660.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody` `build`(`okhttp3.MultipartBody$Builder` v4 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22f56c.  v0:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L22f570.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L22f576.  v0:= temp;
  #L22f578.  if v0 != 0 then goto L22f594;
  #L22f57c.  v0:= new `okhttp3.MultipartBody`;
  #L22f580.  v1:= v4.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` @kind object;
  #L22f584.  v2:= v4.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` @kind object;
  #L22f588.  v3:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L22f58c.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @kind direct;
  #L22f592.  return v0 @kind object;
  #L22f594.  v0:= new `java.lang.IllegalStateException`;
  #L22f598.  v1:= "Multipart body must have at least one part." @kind object;
  #L22f59c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f5a2.  throw v0;
}
procedure `okhttp3.MultipartBody$Builder` `setType`(`okhttp3.MultipartBody$Builder` v3 @kind this, `okhttp3.MediaType` v4 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22f674.  if v4 == 0 then goto L22f6c4;
  #L22f678.  call temp:= `type`(v4) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @kind virtual;
  #L22f67e.  v0:= temp @kind object;
  #L22f680.  v1:= "multipart" @kind object;
  #L22f684.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22f68a.  v0:= temp;
  #L22f68c.  if v0 == 0 then goto L22f696;
  #L22f690.  v3.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v4 @kind object;
  #L22f694.  return v3 @kind object;
  #L22f696.  v0:= new `java.lang.IllegalArgumentException`;
  #L22f69a.  v1:= new `java.lang.StringBuilder`;
  #L22f69e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22f6a4.  v2:= "multipart != " @kind object;
  #L22f6a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22f6ae.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22f6b4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22f6ba.  v4:= temp @kind object;
  #L22f6bc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f6c2.  throw v0;
  #L22f6c4.  v4:= new `java.lang.NullPointerException`;
  #L22f6c8.  v0:= "type == null" @kind object;
  #L22f6cc.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22f6d2.  throw v4;
}
