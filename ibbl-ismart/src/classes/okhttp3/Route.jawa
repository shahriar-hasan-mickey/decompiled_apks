record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.address` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.inetSocketAddress` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Route.proxy` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v0 @kind this, `okhttp3.Address` v1 @kind object, `java.net.Proxy` v2 @kind object, `java.net.InetSocketAddress` v3 @kind object) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L232e54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L232e5a.  if v1 == 0 then goto L232e94;
  #L232e5e.  if v2 == 0 then goto L232e84;
  #L232e62.  if v3 == 0 then goto L232e74;
  #L232e66.  v0.`okhttp3.Route.address` @type ^`okhttp3.Address` := v1 @kind object;
  #L232e6a.  v0.`okhttp3.Route.proxy` @type ^`java.net.Proxy` := v2 @kind object;
  #L232e6e.  v0.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` := v3 @kind object;
  #L232e72.  return @kind void;
  #L232e74.  v1:= new `java.lang.NullPointerException`;
  #L232e78.  v2:= "inetSocketAddress == null" @kind object;
  #L232e7c.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L232e82.  throw v1;
  #L232e84.  v1:= new `java.lang.NullPointerException`;
  #L232e88.  v2:= "proxy == null" @kind object;
  #L232e8c.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L232e92.  throw v1;
  #L232e94.  v1:= new `java.lang.NullPointerException`;
  #L232e98.  v2:= "address == null" @kind object;
  #L232e9c.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L232ea2.  throw v1;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L232e3c.  v0:= v1.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L232e40.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L232ce8.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L232cec.  if v0 == 0 then goto L232d34;
  #L232cf0.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L232cf4.  v0:= v3.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L232cf8.  v1:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L232cfc.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L232d02.  v0:= temp;
  #L232d04.  if v0 == 0 then goto L232d34;
  #L232d08.  v0:= v3.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L232d0c.  v1:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L232d10.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L232d16.  v0:= temp;
  #L232d18.  if v0 == 0 then goto L232d34;
  #L232d1c.  v3:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L232d20.  v0:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L232d24.  call temp:= `equals`(v3, v0) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L232d2a.  v3:= temp;
  #L232d2c.  if v3 == 0 then goto L232d34;
  #L232d30.  v3:= 1I;
  #L232d32.  goto L232d36;
  #L232d34.  v3:= 0I;
  #L232d36.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L232d80.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L232d84.  call temp:= `hashCode`(v0) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L232d8a.  v0:= temp;
  #L232d8c.  v1:= 527I;
  #L232d90.  v1:= v1 + v0 @kind int;
  #L232d92.  v1:= v1 * 31;
  #L232d96.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L232d9a.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L232da0.  v0:= temp;
  #L232da2.  v1:= v1 + v0 @kind int;
  #L232da4.  v1:= v1 * 31;
  #L232da8.  v0:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L232dac.  call temp:= `hashCode`(v0) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L232db2.  v0:= temp;
  #L232db4.  v1:= v1 + v0 @kind int;
  #L232db6.  return v1;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L232e24.  v0:= v1.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L232e28.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L232d48.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L232d4c.  v0:= v0.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L232d50.  if v0 == 0 then goto L232d6c;
  #L232d54.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L232d58.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L232d5e.  v0:= temp @kind object;
  #L232d60.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L232d64.  if v0 != v1 then goto L232d6c;
  #L232d68.  v0:= 1I;
  #L232d6a.  goto L232d6e;
  #L232d6c.  v0:= 0I;
  #L232d6e.  return v0;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L232e0c.  v0:= v1.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L232e10.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L232dc8.  v0:= new `java.lang.StringBuilder`;
  #L232dcc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L232dd2.  v1:= "Route{" @kind object;
  #L232dd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L232ddc.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L232de0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L232de6.  v1:= "}" @kind object;
  #L232dea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L232df0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L232df6.  v0:= temp @kind object;
  #L232df8.  return v0 @kind object;
}
