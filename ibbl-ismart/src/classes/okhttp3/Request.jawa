record `okhttp3.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.Request.body` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Request.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Headers` `okhttp3.Request.headers` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Request.method` @AccessFlag FINAL;
  `java.lang.Object` `okhttp3.Request.tag` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Request.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Request` v1 @kind this, `okhttp3.Request$Builder` v2 @kind object) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L232048.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23204e.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L232052.  v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L232056.  v0:= v2.`okhttp3.Request$Builder.method` @type ^`java.lang.String` @kind object;
  #L23205a.  v1.`okhttp3.Request.method` @type ^`java.lang.String` := v0 @kind object;
  #L23205e.  v0:= v2.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L232062.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L232068.  v0:= temp @kind object;
  #L23206a.  v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L23206e.  v0:= v2.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` @kind object;
  #L232072.  v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L232076.  v0:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L23207a.  if v0 == 0 then goto L232084;
  #L23207e.  v2:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L232082.  goto L232086;
  #L232084.  v2:= v1 @kind object;
  #L232086.  v1.`okhttp3.Request.tag` @type ^`java.lang.Object` := v2 @kind object;
  #L23208a.  return @kind void;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L232030.  v0:= v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L232034.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231fb8.  v0:= v1.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L231fbc.  if v0 == 0 then goto L231fc2;
  #L231fc0.  goto L231fd2;
  #L231fc2.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L231fc6.  call temp:= `parse`(v0) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L231fcc.  v0:= temp @kind object;
  #L231fce.  v1.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L231fd2.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231eec.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L231ef0.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L231ef6.  v2:= temp @kind object;
  #L231ef8.  return v2 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231f98.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L231f9c.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L231fa2.  v2:= temp @kind object;
  #L231fa4.  return v2 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231fe4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L231fe8.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231eb4.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L231eb8.  call temp:= `isHttps`(v0) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L231ebe.  v0:= temp;
  #L231ec0.  return v0;
}
procedure `java.lang.String` `method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231f0c.  v0:= v1.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L231f10.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `newBuilder`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L232014.  v0:= new `okhttp3.Request$Builder`;
  #L232018.  call `<init>`(v0, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @kind direct;
  #L23201e.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231ed4.  v0:= v1.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L231ed8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L231f24.  v0:= new `java.lang.StringBuilder`;
  #L231f28.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L231f2e.  v1:= "Request{method=" @kind object;
  #L231f32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231f38.  v1:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L231f3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231f42.  v1:= ", url=" @kind object;
  #L231f46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231f4c.  v1:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L231f50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231f56.  v1:= ", tag=" @kind object;
  #L231f5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231f60.  v1:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L231f64.  if v1 == v2 then goto L231f6a;
  #L231f68.  goto L231f6c;
  #L231f6a.  v1:= 0I;
  #L231f6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L231f72.  v1:= 125I;
  #L231f76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L231f7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L231f82.  v0:= temp @kind object;
  #L231f84.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231ffc.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L232000.  return v0 @kind object;
}
