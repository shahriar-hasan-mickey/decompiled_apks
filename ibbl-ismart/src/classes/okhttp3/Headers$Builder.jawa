record `okhttp3.Headers$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.Headers$Builder.namesAndValues` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Headers$Builder` v2 @kind this) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L22c194.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22c19a.  v0:= new `java.util.ArrayList`;
  #L22c19e.  v1:= 20I;
  #L22c1a2.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L22c1a8.  v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L22c1ac.  return @kind void;
}
procedure `void` `checkNameAndValue`(`okhttp3.Headers$Builder` v9 @kind this, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `Lokhttp3/Headers$Builder;.checkNameAndValue:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L22c1c0.  if v10 == 0 then goto L22c2f8;
  #L22c1c4.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22c1ca.  v0:= temp;
  #L22c1cc.  if v0 != 0 then goto L22c2e8;
  #L22c1d0.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22c1d6.  v0:= temp;
  #L22c1d8.  v1:= 0I;
  #L22c1da.  v2:= 0I;
  #L22c1dc.  v3:= 127I;
  #L22c1e0.  v4:= 2I;
  #L22c1e2.  v5:= 3I;
  #L22c1e4.  v6:= 1I;
  #L22c1e6.  if v2 >= v0 then goto L22c23c;
  #L22c1ea.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22c1f0.  v7:= temp;
  #L22c1f2.  v8:= 32I;
  #L22c1f6.  if v7 <= v8 then goto L22c204;
  #L22c1fa.  if v7 >= v3 then goto L22c204;
  #L22c1fe.  v2:= v2 + 1;
  #L22c202.  goto L22c1dc;
  #L22c204.  v11:= new `java.lang.IllegalArgumentException`;
  #L22c208.  v0:= new `java.lang.Object`[v5];
  #L22c20c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22c212.  v3:= temp @kind object;
  #L22c214.  v0[v1]:= v3 @kind object;
  #L22c218.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22c21e.  v1:= temp @kind object;
  #L22c220.  v0[v6]:= v1 @kind object;
  #L22c224.  v0[v4]:= v10 @kind object;
  #L22c228.  v10:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L22c22c.  call temp:= `format`(v10, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22c232.  v10:= temp @kind object;
  #L22c234.  call `<init>`(v11, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22c23a.  throw v11;
  #L22c23c.  if v11 == 0 then goto L22c2b0;
  #L22c240.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22c246.  v0:= temp;
  #L22c248.  v2:= 0I;
  #L22c24a.  if v2 >= v0 then goto L22c2ae;
  #L22c24e.  call temp:= `charAt`(v11, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22c254.  v7:= temp;
  #L22c256.  v8:= 31I;
  #L22c25a.  if v7 > v8 then goto L22c266;
  #L22c25e.  v8:= 9I;
  #L22c262.  if v7 != v8 then goto L22c270;
  #L22c266.  if v7 >= v3 then goto L22c270;
  #L22c26a.  v2:= v2 + 1;
  #L22c26e.  goto L22c24a;
  #L22c270.  v0:= new `java.lang.IllegalArgumentException`;
  #L22c274.  v3:= 4I;
  #L22c276.  v3:= new `java.lang.Object`[v3];
  #L22c27a.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22c280.  v7:= temp @kind object;
  #L22c282.  v3[v1]:= v7 @kind object;
  #L22c286.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22c28c.  v1:= temp @kind object;
  #L22c28e.  v3[v6]:= v1 @kind object;
  #L22c292.  v3[v4]:= v10 @kind object;
  #L22c296.  v3[v5]:= v11 @kind object;
  #L22c29a.  v10:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L22c29e.  call temp:= `format`(v10, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22c2a4.  v10:= temp @kind object;
  #L22c2a6.  call `<init>`(v0, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22c2ac.  throw v0;
  #L22c2ae.  return @kind void;
  #L22c2b0.  v11:= new `java.lang.NullPointerException`;
  #L22c2b4.  v0:= new `java.lang.StringBuilder`;
  #L22c2b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22c2be.  v1:= "value for name " @kind object;
  #L22c2c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c2c8.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c2ce.  v10:= " == null" @kind object;
  #L22c2d2.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c2d8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22c2de.  v10:= temp @kind object;
  #L22c2e0.  call `<init>`(v11, v10) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22c2e6.  throw v11;
  #L22c2e8.  v10:= new `java.lang.IllegalArgumentException`;
  #L22c2ec.  v11:= "name is empty" @kind object;
  #L22c2f0.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22c2f6.  throw v10;
  #L22c2f8.  v10:= new `java.lang.NullPointerException`;
  #L22c2fc.  v11:= "name == null" @kind object;
  #L22c300.  call `<init>`(v10, v11) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22c306.  throw v10;
  #L22c308.  return @kind void;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22bfd0.  v0:= ":" @kind object;
  #L22bfd4.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L22bfda.  v0:= temp;
  #L22bfdc.  v1:= -1I;
  #L22bfde.  if v0 == v1 then goto L22c00a;
  #L22bfe2.  v1:= 0I;
  #L22bfe4.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22bfea.  v1:= temp @kind object;
  #L22bfec.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L22bff2.  v1:= temp @kind object;
  #L22bff4.  v0:= v0 + 1;
  #L22bff8.  call temp:= `substring`(v4, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L22bffe.  v4:= temp @kind object;
  #L22c000.  call temp:= `add`(v3, v1, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L22c006.  v4:= temp @kind object;
  #L22c008.  return v4 @kind object;
  #L22c00a.  v0:= new `java.lang.IllegalArgumentException`;
  #L22c00e.  v1:= new `java.lang.StringBuilder`;
  #L22c012.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22c018.  v2:= "Unexpected header: " @kind object;
  #L22c01c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c022.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c028.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22c02e.  v4:= temp @kind object;
  #L22c030.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22c036.  throw v0;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;

  #L22c048.  call `checkNameAndValue`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.checkNameAndValue:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L22c04e.  call temp:= `addLenient`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L22c054.  v1:= temp @kind object;
  #L22c056.  return v1 @kind object;
}
procedure `okhttp3.Headers$Builder` `addLenient`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L22c068.  v0:= ":" @kind object;
  #L22c06c.  v1:= 1I;
  #L22c06e.  call temp:= `indexOf`(v4, v0, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L22c074.  v0:= temp;
  #L22c076.  v2:= -1I;
  #L22c078.  if v0 == v2 then goto L22c09a;
  #L22c07c.  v2:= 0I;
  #L22c07e.  call temp:= `substring`(v4, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22c084.  v2:= temp @kind object;
  #L22c086.  v0:= v0 + v1 @kind int;
  #L22c088.  call temp:= `substring`(v4, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L22c08e.  v4:= temp @kind object;
  #L22c090.  call temp:= `addLenient`(v3, v2, v4) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L22c096.  v4:= temp @kind object;
  #L22c098.  return v4 @kind object;
  #L22c09a.  v0:= ":" @kind object;
  #L22c09e.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22c0a4.  v0:= temp;
  #L22c0a6.  if v0 == 0 then goto L22c0c0;
  #L22c0aa.  v0:= "" @kind object;
  #L22c0ae.  call temp:= `substring`(v4, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L22c0b4.  v4:= temp @kind object;
  #L22c0b6.  call temp:= `addLenient`(v3, v0, v4) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L22c0bc.  v4:= temp @kind object;
  #L22c0be.  return v4 @kind object;
  #L22c0c0.  v0:= "" @kind object;
  #L22c0c4.  call temp:= `addLenient`(v3, v0, v4) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L22c0ca.  v4:= temp @kind object;
  #L22c0cc.  return v4 @kind object;
}
procedure `okhttp3.Headers$Builder` `addLenient`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag  {
    temp;
    v0;

  #L22c0e0.  v0:= v1.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L22c0e4.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22c0ea.  v2:= v1.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L22c0ee.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L22c0f4.  v3:= temp @kind object;
  #L22c0f6.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22c0fc.  return v1 @kind object;
}
procedure `okhttp3.Headers` `build`(`okhttp3.Headers$Builder` v1 @kind this) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22bfb4.  v0:= new `okhttp3.Headers`;
  #L22bfb8.  call `<init>`(v0, v1) @signature `Lokhttp3/Headers;.<init>:(Lokhttp3/Headers$Builder;)V` @kind direct;
  #L22bfbe.  return v0 @kind object;
}
procedure `java.lang.String` `get`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22bf54.  v0:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L22bf58.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22bf5e.  v0:= temp;
  #L22bf60.  v0:= v0 + -2;
  #L22bf64.  if v0 < 0 then goto L22bfa0;
  #L22bf68.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L22bf6c.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22bf72.  v1:= temp @kind object;
  #L22bf74.  v1:= (`java.lang.String`) v1 @kind object;
  #L22bf78.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22bf7e.  v1:= temp;
  #L22bf80.  if v1 == 0 then goto L22bf9a;
  #L22bf84.  v3:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L22bf88.  v0:= v0 + 1;
  #L22bf8c.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22bf92.  v3:= temp @kind object;
  #L22bf94.  v3:= (`java.lang.String`) v3 @kind object;
  #L22bf98.  return v3 @kind object;
  #L22bf9a.  v0:= v0 + -2;
  #L22bf9e.  goto L22bf64;
  #L22bfa0.  v3:= 0I;
  #L22bfa2.  return v3 @kind object;
}
procedure `okhttp3.Headers$Builder` `removeAll`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22c110.  v0:= 0I;
  #L22c112.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L22c116.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22c11c.  v1:= temp;
  #L22c11e.  if v0 >= v1 then goto L22c15c;
  #L22c122.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L22c126.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22c12c.  v1:= temp @kind object;
  #L22c12e.  v1:= (`java.lang.String`) v1 @kind object;
  #L22c132.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22c138.  v1:= temp;
  #L22c13a.  if v1 == 0 then goto L22c156;
  #L22c13e.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L22c142.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L22c148.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L22c14c.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L22c152.  v0:= v0 + -2;
  #L22c156.  v0:= v0 + 2;
  #L22c15a.  goto L22c112;
  #L22c15c.  return v2 @kind object;
}
procedure `okhttp3.Headers$Builder` `set`(`okhttp3.Headers$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;

  #L22c170.  call `checkNameAndValue`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.checkNameAndValue:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L22c176.  call temp:= `removeAll`(v0, v1) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L22c17c.  call temp:= `addLenient`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L22c182.  return v0 @kind object;
}
