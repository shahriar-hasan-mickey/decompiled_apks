record `com.plugin.datepicker.DatePickerPlugin$JsonDate` @kind class @AccessFlag FINAL {
  `java.lang.String` `com.plugin.datepicker.DatePickerPlugin$JsonDate.action` @AccessFlag PRIVATE;
  `java.lang.String` `com.plugin.datepicker.DatePickerPlugin$JsonDate.cancelText` @AccessFlag PRIVATE;
  `int` `com.plugin.datepicker.DatePickerPlugin$JsonDate.day` @AccessFlag PRIVATE;
  `int` `com.plugin.datepicker.DatePickerPlugin$JsonDate.hour` @AccessFlag PRIVATE;
  `boolean` `com.plugin.datepicker.DatePickerPlugin$JsonDate.is24Hour` @AccessFlag PRIVATE;
  `long` `com.plugin.datepicker.DatePickerPlugin$JsonDate.maxDate` @AccessFlag PRIVATE;
  `long` `com.plugin.datepicker.DatePickerPlugin$JsonDate.minDate` @AccessFlag PRIVATE;
  `int` `com.plugin.datepicker.DatePickerPlugin$JsonDate.minutes` @AccessFlag PRIVATE;
  `int` `com.plugin.datepicker.DatePickerPlugin$JsonDate.month` @AccessFlag PRIVATE;
  `java.lang.String` `com.plugin.datepicker.DatePickerPlugin$JsonDate.nowText` @AccessFlag PRIVATE;
  `java.lang.String` `com.plugin.datepicker.DatePickerPlugin$JsonDate.okText` @AccessFlag PRIVATE;
  `com.plugin.datepicker.DatePickerPlugin` `com.plugin.datepicker.DatePickerPlugin$JsonDate.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.String` `com.plugin.datepicker.DatePickerPlugin$JsonDate.titleText` @AccessFlag PRIVATE;
  `java.lang.String` `com.plugin.datepicker.DatePickerPlugin$JsonDate.todayText` @AccessFlag PRIVATE;
  `int` `com.plugin.datepicker.DatePickerPlugin$JsonDate.year` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v2 @kind this, `com.plugin.datepicker.DatePickerPlugin` v3 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.<init>:(Lcom/plugin/datepicker/DatePickerPlugin;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L21f090.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.this$0` @type ^`com.plugin.datepicker.DatePickerPlugin` := v3 @kind object;
  #L21f094.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21f09a.  v3:= "date" @kind object;
  #L21f09e.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.action` @type ^`java.lang.String` := v3 @kind object;
  #L21f0a2.  v3:= "" @kind object;
  #L21f0a6.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.titleText` @type ^`java.lang.String` := v3 @kind object;
  #L21f0aa.  v3:= "" @kind object;
  #L21f0ae.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.okText` @type ^`java.lang.String` := v3 @kind object;
  #L21f0b2.  v3:= "" @kind object;
  #L21f0b6.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.cancelText` @type ^`java.lang.String` := v3 @kind object;
  #L21f0ba.  v3:= "" @kind object;
  #L21f0be.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.todayText` @type ^`java.lang.String` := v3 @kind object;
  #L21f0c2.  v3:= "" @kind object;
  #L21f0c6.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.nowText` @type ^`java.lang.String` := v3 @kind object;
  #L21f0ca.  v0:= 0L;
  #L21f0ce.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.minDate` @type ^`long` := v0 @kind wide;
  #L21f0d2.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.maxDate` @type ^`long` := v0 @kind wide;
  #L21f0d6.  v3:= 0I;
  #L21f0d8.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.month` @type ^`int` := v3;
  #L21f0dc.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.day` @type ^`int` := v3;
  #L21f0e0.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.year` @type ^`int` := v3;
  #L21f0e4.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.hour` @type ^`int` := v3;
  #L21f0e8.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.minutes` @type ^`int` := v3;
  #L21f0ec.  v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.is24Hour` @type ^`boolean` := v3 @kind boolean;
  #L21f0f0.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L21f0f6.  v3:= temp @kind object;
  #L21f0f8.  call `reset`(v2, v3) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.reset:(Ljava/util/Calendar;)V` @kind direct;
  #L21f0fe.  return @kind void;
}
procedure `java.lang.String` `access$000`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$000:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21efd0.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.action` @type ^`java.lang.String` @kind object;
  #L21efd4.  return v0 @kind object;
}
procedure `java.lang.String` `access$1000`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$1000:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21efe8.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.cancelText` @type ^`java.lang.String` @kind object;
  #L21efec.  return v0 @kind object;
}
procedure `java.lang.String` `access$1200`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$1200:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21f000.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.okText` @type ^`java.lang.String` @kind object;
  #L21f004.  return v0 @kind object;
}
procedure `int` `access$1400`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$1400:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21ef58.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.year` @type ^`int`;
  #L21ef5c.  return v0;
}
procedure `int` `access$1500`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$1500:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21ef70.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.month` @type ^`int`;
  #L21ef74.  return v0;
}
procedure `int` `access$1600`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$1600:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21ef88.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.day` @type ^`int`;
  #L21ef8c.  return v0;
}
procedure `java.lang.String` `access$1900`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$1900:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21f018.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.todayText` @type ^`java.lang.String` @kind object;
  #L21f01c.  return v0 @kind object;
}
procedure `int` `access$200`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$200:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21efa0.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.hour` @type ^`int`;
  #L21efa4.  return v0;
}
procedure `long` `access$2000`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v2 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$2000:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L21f060.  v0:= v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.minDate` @type ^`long` @kind wide;
  #L21f064.  return v0 @kind wide;
}
procedure `long` `access$2100`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v2 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$2100:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L21f078.  v0:= v2.`com.plugin.datepicker.DatePickerPlugin$JsonDate.maxDate` @type ^`long` @kind wide;
  #L21f07c.  return v0 @kind wide;
}
procedure `int` `access$300`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$300:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21efb8.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.minutes` @type ^`int`;
  #L21efbc.  return v0;
}
procedure `boolean` `access$400`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$400:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21eccc.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.is24Hour` @type ^`boolean` @kind boolean;
  #L21ecd0.  return v0;
}
procedure `java.lang.String` `access$800`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$800:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21f030.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.titleText` @type ^`java.lang.String` @kind object;
  #L21f034.  return v0 @kind object;
}
procedure `java.lang.String` `access$900`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v0 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.access$900:(Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21f048.  v0:= v0.`com.plugin.datepicker.DatePickerPlugin$JsonDate.nowText` @type ^`java.lang.String` @kind object;
  #L21f04c.  return v0 @kind object;
}
procedure `void` `reset`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v1 @kind this, `java.util.Calendar` v2 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.reset:(Ljava/util/Calendar;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L21f110.  v0:= 1I;
  #L21f112.  call temp:= `get`(v2, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L21f118.  v0:= temp;
  #L21f11a.  v1.`com.plugin.datepicker.DatePickerPlugin$JsonDate.year` @type ^`int` := v0;
  #L21f11e.  v0:= 2I;
  #L21f120.  call temp:= `get`(v2, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L21f126.  v0:= temp;
  #L21f128.  v1.`com.plugin.datepicker.DatePickerPlugin$JsonDate.month` @type ^`int` := v0;
  #L21f12c.  v0:= 5I;
  #L21f12e.  call temp:= `get`(v2, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L21f134.  v0:= temp;
  #L21f136.  v1.`com.plugin.datepicker.DatePickerPlugin$JsonDate.day` @type ^`int` := v0;
  #L21f13a.  v0:= 11I;
  #L21f13e.  call temp:= `get`(v2, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L21f144.  v0:= temp;
  #L21f146.  v1.`com.plugin.datepicker.DatePickerPlugin$JsonDate.hour` @type ^`int` := v0;
  #L21f14a.  v0:= 12I;
  #L21f14e.  call temp:= `get`(v2, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L21f154.  v2:= temp;
  #L21f156.  v1.`com.plugin.datepicker.DatePickerPlugin$JsonDate.minutes` @type ^`int` := v2;
  #L21f15a.  return @kind void;
}
procedure `com.plugin.datepicker.DatePickerPlugin$JsonDate` `fromJson`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v6 @kind this, `org.json.JSONArray` v7 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.fromJson:(Lorg/json/JSONArray;)Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21ed58.  v0:= 0I;
  #L21ed5a.  call temp:= `getJSONObject`(v7, v0) @signature `Lorg/json/JSONArray;.getJSONObject:(I)Lorg/json/JSONObject;` @kind virtual;
  #L21ed60.  v7:= temp @kind object;
  #L21ed62.  v1:= "mode" @kind object;
  #L21ed66.  call temp:= `isNotEmpty`(v6, v7, v1) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @kind virtual;
  #L21ed6c.  v1:= temp;
  #L21ed6e.  if v1 == 0 then goto L21ed80;
  #L21ed72.  v1:= "mode" @kind object;
  #L21ed76.  call temp:= `getString`(v7, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21ed7c.  v1:= temp @kind object;
  #L21ed7e.  goto L21ed84;
  #L21ed80.  v1:= "date" @kind object;
  #L21ed84.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.action` @type ^`java.lang.String` := v1 @kind object;
  #L21ed88.  v1:= "minDate" @kind object;
  #L21ed8c.  call temp:= `isNotEmpty`(v6, v7, v1) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @kind virtual;
  #L21ed92.  v1:= temp;
  #L21ed94.  v2:= 0L;
  #L21ed98.  if v1 == 0 then goto L21edaa;
  #L21ed9c.  v1:= "minDate" @kind object;
  #L21eda0.  call temp:= `getLong`(v7, v1) @signature `Lorg/json/JSONObject;.getLong:(Ljava/lang/String;)J` @kind virtual;
  #L21eda6.  v4:= temp @kind wide;
  #L21eda8.  goto L21edac;
  #L21edaa.  v4:= v2 @kind wide;
  #L21edac.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.minDate` @type ^`long` := v4 @kind wide;
  #L21edb0.  v1:= "maxDate" @kind object;
  #L21edb4.  call temp:= `isNotEmpty`(v6, v7, v1) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @kind virtual;
  #L21edba.  v1:= temp;
  #L21edbc.  if v1 == 0 then goto L21edcc;
  #L21edc0.  v1:= "maxDate" @kind object;
  #L21edc4.  call temp:= `getLong`(v7, v1) @signature `Lorg/json/JSONObject;.getLong:(Ljava/lang/String;)J` @kind virtual;
  #L21edca.  v2:= temp @kind wide;
  #L21edcc.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.maxDate` @type ^`long` := v2 @kind wide;
  #L21edd0.  v1:= "titleText" @kind object;
  #L21edd4.  call temp:= `isNotEmpty`(v6, v7, v1) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @kind virtual;
  #L21edda.  v1:= temp;
  #L21eddc.  if v1 == 0 then goto L21edee;
  #L21ede0.  v1:= "titleText" @kind object;
  #L21ede4.  call temp:= `getString`(v7, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21edea.  v1:= temp @kind object;
  #L21edec.  goto L21edf2;
  #L21edee.  v1:= "" @kind object;
  #L21edf2.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.titleText` @type ^`java.lang.String` := v1 @kind object;
  #L21edf6.  v1:= "okText" @kind object;
  #L21edfa.  call temp:= `isNotEmpty`(v6, v7, v1) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @kind virtual;
  #L21ee00.  v1:= temp;
  #L21ee02.  if v1 == 0 then goto L21ee14;
  #L21ee06.  v1:= "okText" @kind object;
  #L21ee0a.  call temp:= `getString`(v7, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21ee10.  v1:= temp @kind object;
  #L21ee12.  goto L21ee18;
  #L21ee14.  v1:= "" @kind object;
  #L21ee18.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.okText` @type ^`java.lang.String` := v1 @kind object;
  #L21ee1c.  v1:= "cancelText" @kind object;
  #L21ee20.  call temp:= `isNotEmpty`(v6, v7, v1) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @kind virtual;
  #L21ee26.  v1:= temp;
  #L21ee28.  if v1 == 0 then goto L21ee3a;
  #L21ee2c.  v1:= "cancelText" @kind object;
  #L21ee30.  call temp:= `getString`(v7, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21ee36.  v1:= temp @kind object;
  #L21ee38.  goto L21ee3e;
  #L21ee3a.  v1:= "" @kind object;
  #L21ee3e.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.cancelText` @type ^`java.lang.String` := v1 @kind object;
  #L21ee42.  v1:= "todayText" @kind object;
  #L21ee46.  call temp:= `isNotEmpty`(v6, v7, v1) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @kind virtual;
  #L21ee4c.  v1:= temp;
  #L21ee4e.  if v1 == 0 then goto L21ee60;
  #L21ee52.  v1:= "todayText" @kind object;
  #L21ee56.  call temp:= `getString`(v7, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21ee5c.  v1:= temp @kind object;
  #L21ee5e.  goto L21ee64;
  #L21ee60.  v1:= "" @kind object;
  #L21ee64.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.todayText` @type ^`java.lang.String` := v1 @kind object;
  #L21ee68.  v1:= "nowText" @kind object;
  #L21ee6c.  call temp:= `isNotEmpty`(v6, v7, v1) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @kind virtual;
  #L21ee72.  v1:= temp;
  #L21ee74.  if v1 == 0 then goto L21ee86;
  #L21ee78.  v1:= "nowText" @kind object;
  #L21ee7c.  call temp:= `getString`(v7, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21ee82.  v1:= temp @kind object;
  #L21ee84.  goto L21ee8a;
  #L21ee86.  v1:= "" @kind object;
  #L21ee8a.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.nowText` @type ^`java.lang.String` := v1 @kind object;
  #L21ee8e.  v1:= "is24Hour" @kind object;
  #L21ee92.  call temp:= `isNotEmpty`(v6, v7, v1) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @kind virtual;
  #L21ee98.  v1:= temp;
  #L21ee9a.  if v1 == 0 then goto L21eeac;
  #L21ee9e.  v1:= "is24Hour" @kind object;
  #L21eea2.  call temp:= `getBoolean`(v7, v1) @signature `Lorg/json/JSONObject;.getBoolean:(Ljava/lang/String;)Z` @kind virtual;
  #L21eea8.  v1:= temp;
  #L21eeaa.  goto L21eeae;
  #L21eeac.  v1:= 0I;
  #L21eeae.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.is24Hour` @type ^`boolean` := v1 @kind boolean;
  #L21eeb2.  v1:= "date" @kind object;
  #L21eeb6.  call temp:= `getString`(v7, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21eebc.  v7:= temp @kind object;
  #L21eebe.  v1:= "/" @kind object;
  #L21eec2.  call temp:= `split`(v7, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L21eec8.  v7:= temp @kind object;
  #L21eeca.  v0:= v7[v0] @kind object;
  #L21eece.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L21eed4.  v0:= temp;
  #L21eed6.  v1:= 1I;
  #L21eed8.  v0:= v0 - v1 @kind int;
  #L21eeda.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.month` @type ^`int` := v0;
  #L21eede.  v0:= v7[v1] @kind object;
  #L21eee2.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L21eee8.  v0:= temp;
  #L21eeea.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.day` @type ^`int` := v0;
  #L21eeee.  v0:= 2I;
  #L21eef0.  v0:= v7[v0] @kind object;
  #L21eef4.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L21eefa.  v0:= temp;
  #L21eefc.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.year` @type ^`int` := v0;
  #L21ef00.  v0:= 3I;
  #L21ef02.  v0:= v7[v0] @kind object;
  #L21ef06.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L21ef0c.  v0:= temp;
  #L21ef0e.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.hour` @type ^`int` := v0;
  #L21ef12.  v0:= 4I;
  #L21ef14.  v7:= v7[v0] @kind object;
  #L21ef18.  call temp:= `parseInt`(v7) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L21ef1e.  v7:= temp;
  #L21ef20.  v6.`com.plugin.datepicker.DatePickerPlugin$JsonDate.minutes` @type ^`int` := v7;
  #L21ef24.  goto L21ef34;
  #L21ef26.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L21ef2c.  v7:= temp @kind object;
  #L21ef2e.  call `reset`(v6, v7) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.reset:(Ljava/util/Calendar;)V` @kind direct;
  #L21ef34.  return v6 @kind object;
  catch `org.json.JSONException` @[L21ed5a..L21ef24] goto L21ef26;
}
procedure `boolean` `isNotEmpty`(`com.plugin.datepicker.DatePickerPlugin$JsonDate` v1 @kind this, `org.json.JSONObject` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/plugin/datepicker/DatePickerPlugin$JsonDate;.isNotEmpty:(Lorg/json/JSONObject;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21ece4.  call temp:= `has`(v2, v3) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L21ecea.  v0:= temp;
  #L21ecec.  if v0 == 0 then goto L21ed44;
  #L21ecf0.  call temp:= `isNull`(v2, v3) @signature `Lorg/json/JSONObject;.isNull:(Ljava/lang/String;)Z` @kind virtual;
  #L21ecf6.  v0:= temp;
  #L21ecf8.  if v0 != 0 then goto L21ed44;
  #L21ecfc.  call temp:= `get`(v2, v3) @signature `Lorg/json/JSONObject;.get:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L21ed02.  v0:= temp @kind object;
  #L21ed04.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ed0a.  v0:= temp @kind object;
  #L21ed0c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21ed12.  v0:= temp;
  #L21ed14.  if v0 <= 0 then goto L21ed44;
  #L21ed18.  v0:= `@@org.json.JSONObject.NULL` @type ^`java.lang.Object` @kind object;
  #L21ed1c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ed22.  v0:= temp @kind object;
  #L21ed24.  call temp:= `get`(v2, v3) @signature `Lorg/json/JSONObject;.get:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L21ed2a.  v2:= temp @kind object;
  #L21ed2c.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ed32.  v2:= temp @kind object;
  #L21ed34.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21ed3a.  v2:= temp;
  #L21ed3c.  if v2 != 0 then goto L21ed44;
  #L21ed40.  v2:= 1I;
  #L21ed42.  goto L21ed46;
  #L21ed44.  v2:= 0I;
  #L21ed46.  return v2;
}
