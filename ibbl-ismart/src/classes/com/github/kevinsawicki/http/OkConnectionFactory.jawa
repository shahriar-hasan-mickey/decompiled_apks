record `com.github.kevinsawicki.http.OkConnectionFactory` @kind class @AccessFlag PUBLIC extends `com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` @kind interface {
  `okhttp3.OkHttpClient` `com.github.kevinsawicki.http.OkConnectionFactory.okHttpClient` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.kevinsawicki.http.OkConnectionFactory` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/OkConnectionFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19300c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L193012.  v0:= new `okhttp3.OkHttpClient`;
  #L193016.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient;.<init>:()V` @kind direct;
  #L19301c.  v1.`com.github.kevinsawicki.http.OkConnectionFactory.okHttpClient` @type ^`okhttp3.OkHttpClient` := v0 @kind object;
  #L193020.  return @kind void;
}
procedure `java.net.HttpURLConnection` `create`(`com.github.kevinsawicki.http.OkConnectionFactory` v2 @kind this, `java.net.URL` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/OkConnectionFactory;.create:(Ljava/net/URL;)Ljava/net/HttpURLConnection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192fa4.  v0:= new `okhttp3.OkUrlFactory`;
  #L192fa8.  v1:= v2.`com.github.kevinsawicki.http.OkConnectionFactory.okHttpClient` @type ^`okhttp3.OkHttpClient` @kind object;
  #L192fac.  call `<init>`(v0, v1) @signature `Lokhttp3/OkUrlFactory;.<init>:(Lokhttp3/OkHttpClient;)V` @kind direct;
  #L192fb2.  call temp:= `open`(v0, v3) @signature `Lokhttp3/OkUrlFactory;.open:(Ljava/net/URL;)Ljava/net/HttpURLConnection;` @kind virtual;
  #L192fb8.  v3:= temp @kind object;
  #L192fba.  return v3 @kind object;
}
procedure `java.net.HttpURLConnection` `create`(`com.github.kevinsawicki.http.OkConnectionFactory` v1 @kind this, `java.net.URL` v2 @kind object, `java.net.Proxy` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/OkConnectionFactory;.create:(Ljava/net/URL;Ljava/net/Proxy;)Ljava/net/HttpURLConnection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192fcc.  v0:= v1.`com.github.kevinsawicki.http.OkConnectionFactory.okHttpClient` @type ^`okhttp3.OkHttpClient` @kind object;
  #L192fd0.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/OkHttpClient;.newBuilder:()Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L192fd6.  v0:= temp @kind object;
  #L192fd8.  call temp:= `proxy`(v0, v3) @signature `Lokhttp3/OkHttpClient$Builder;.proxy:(Ljava/net/Proxy;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L192fde.  v3:= temp @kind object;
  #L192fe0.  call temp:= `build`(v3) @signature `Lokhttp3/OkHttpClient$Builder;.build:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L192fe6.  v3:= temp @kind object;
  #L192fe8.  v0:= new `okhttp3.OkUrlFactory`;
  #L192fec.  call `<init>`(v0, v3) @signature `Lokhttp3/OkUrlFactory;.<init>:(Lokhttp3/OkHttpClient;)V` @kind direct;
  #L192ff2.  call temp:= `open`(v0, v2) @signature `Lokhttp3/OkUrlFactory;.open:(Ljava/net/URL;)Ljava/net/HttpURLConnection;` @kind virtual;
  #L192ff8.  v2:= temp @kind object;
  #L192ffa.  return v2 @kind object;
}
