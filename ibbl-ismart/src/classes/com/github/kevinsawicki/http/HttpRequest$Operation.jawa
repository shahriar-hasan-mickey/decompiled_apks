record `com.github.kevinsawicki.http.HttpRequest$Operation` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.concurrent.Callable` @kind interface {
}
procedure `void` `<init>`(`com.github.kevinsawicki.http.HttpRequest$Operation` v0 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest$Operation;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L1903b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1903ba.  return @kind void;
}
procedure `java.lang.Object` `call`(`com.github.kevinsawicki.http.HttpRequest$Operation` v3 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest$Operation;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L190314.  v0:= 1I;
  #L190316.  call temp:= `run`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$Operation;.run:()Ljava/lang/Object;` @kind virtual;
  #L19031c.  v0:= temp @kind object;
  #L19031e.  call `done`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$Operation;.done:()V` @kind virtual;
  #L190324.  return v0 @kind object;
  #L190326.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L190328.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19032c.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L190332.  throw v1;
  #L190334.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L190336.  v1:= 0I;
  #L190338.  v1:= v0 @kind object;
  #L19033a.  v0:= 0I;
  #L19033c.  goto L190352;
  #L19033e.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L190340.  v2:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L190344.  call `<init>`(v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L19034a.  throw v2;
  #L19034c.  v1:= Exception @type ^`com.github.kevinsawicki.http.HttpRequest$HttpRequestException` @kind object;
  #L19034e.  throw v1;
  #L190350.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L190352.  call `done`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$Operation;.done:()V` @kind virtual;
  #L190358.  goto L19036c;
  #L19035a.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L19035c.  if v0 != 0 then goto L19036c;
  #L190360.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L190364.  call `<init>`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L19036a.  throw v0;
  #L19036c.  throw v1;
  catch `com.github.kevinsawicki.http.HttpRequest$HttpRequestException` @[L190316..L19031e] goto L19034c;
  catch `java.io.IOException` @[L190316..L19031e] goto L19033e;
  catch `java.lang.Throwable` @[L190316..L19031e] goto L190334;
  catch `java.io.IOException` @[L19031e..L190324] goto L190326;
  catch `java.lang.Throwable` @[L190340..L190350] goto L190350;
  catch `java.io.IOException` @[L190352..L190358] goto L19035a;
}
procedure `void` `done`() @signature `Lcom/github/kevinsawicki/http/HttpRequest$Operation;.done:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `run`() @signature `Lcom/github/kevinsawicki/http/HttpRequest$Operation;.run:()Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
