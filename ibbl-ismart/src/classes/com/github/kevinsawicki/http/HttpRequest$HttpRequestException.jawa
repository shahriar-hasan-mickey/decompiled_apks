record `com.github.kevinsawicki.http.HttpRequest$HttpRequestException` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
}
global `long` `@@com.github.kevinsawicki.http.HttpRequest$HttpRequestException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.github.kevinsawicki.http.HttpRequest$HttpRequestException` v0 @kind this, `java.io.IOException` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1902fc.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L190302.  return @kind void;
}
procedure `java.io.IOException` `getCause`(`com.github.kevinsawicki.http.HttpRequest$HttpRequestException` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.getCause:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1902c0.  call temp:= `getCause`(v1) @signature `Ljava/lang/RuntimeException;.getCause:()Ljava/lang/Throwable;` @kind super;
  #L1902c6.  v0:= temp @kind object;
  #L1902c8.  v0:= (`java.io.IOException`) v0 @kind object;
  #L1902cc.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getCause`(`com.github.kevinsawicki.http.HttpRequest$HttpRequestException` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.getCause:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1902e0.  call temp:= `getCause`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.getCause:()Ljava/io/IOException;` @kind virtual;
  #L1902e6.  v0:= temp @kind object;
  #L1902e8.  return v0 @kind object;
}
