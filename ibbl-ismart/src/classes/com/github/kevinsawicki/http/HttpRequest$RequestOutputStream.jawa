record `com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind class @AccessFlag PUBLIC extends `java.io.BufferedOutputStream` @kind class {
  `java.nio.charset.CharsetEncoder` `com.github.kevinsawicki.http.HttpRequest$RequestOutputStream.encoder` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` v0 @kind this, `java.io.OutputStream` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L190424.  call `<init>`(v0, v1, v3) @signature `Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;I)V` @kind direct;
  #L19042a.  call temp:= `access$000`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$000:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L190430.  v1:= temp @kind object;
  #L190432.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L190438.  v1:= temp @kind object;
  #L19043a.  call temp:= `newEncoder`(v1) @signature `Ljava/nio/charset/Charset;.newEncoder:()Ljava/nio/charset/CharsetEncoder;` @kind virtual;
  #L190440.  v1:= temp @kind object;
  #L190442.  v0.`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream.encoder` @type ^`java.nio.charset.CharsetEncoder` := v1 @kind object;
  #L190446.  return @kind void;
}
procedure `java.nio.charset.CharsetEncoder` `access$500`(`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` v0 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.access$500:(Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;)Ljava/nio/charset/CharsetEncoder;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L19040c.  v0:= v0.`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream.encoder` @type ^`java.nio.charset.CharsetEncoder` @kind object;
  #L190410.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` `write`(`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1903cc.  v0:= v2.`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream.encoder` @type ^`java.nio.charset.CharsetEncoder` @kind object;
  #L1903d0.  call temp:= `wrap`(v3) @signature `Ljava/nio/CharBuffer;.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;` @kind static;
  #L1903d6.  v3:= temp @kind object;
  #L1903d8.  call temp:= `encode`(v0, v3) @signature `Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1903de.  v3:= temp @kind object;
  #L1903e0.  call temp:= `array`(v3) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1903e6.  v0:= temp @kind object;
  #L1903e8.  call temp:= `limit`(v3) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1903ee.  v3:= temp;
  #L1903f0.  v1:= 0I;
  #L1903f2.  call `write`(v2, v0, v1, v3) @signature `Ljava/io/BufferedOutputStream;.write:([BII)V` @kind super;
  #L1903f8.  return v2 @kind object;
}
