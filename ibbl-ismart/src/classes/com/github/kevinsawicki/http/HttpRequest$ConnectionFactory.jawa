record `com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` `@@com.github.kevinsawicki.http.HttpRequest$ConnectionFactory.DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/github/kevinsawicki/http/HttpRequest$ConnectionFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L190268.  v0:= new `com.github.kevinsawicki.http.OkConnectionFactory`;
  #L19026c.  call `<init>`(v0) @signature `Lcom/github/kevinsawicki/http/OkConnectionFactory;.<init>:()V` @kind direct;
  #L190272.  `@@com.github.kevinsawicki.http.HttpRequest$ConnectionFactory.DEFAULT` @type ^`com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` := v0 @kind object;
  #L190276.  return @kind void;
}
procedure `java.net.HttpURLConnection` `create`(`java.net.URL` v0 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest$ConnectionFactory;.create:(Ljava/net/URL;)Ljava/net/HttpURLConnection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.net.HttpURLConnection` `create`(`java.net.URL` v0 @kind object, `java.net.Proxy` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest$ConnectionFactory;.create:(Ljava/net/URL;Ljava/net/Proxy;)Ljava/net/HttpURLConnection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
