record `com.github.kevinsawicki.http.HttpRequest$8` @kind class @AccessFlag  extends `com.github.kevinsawicki.http.HttpRequest$CloseOperation` @kind class {
  `com.github.kevinsawicki.http.HttpRequest` `com.github.kevinsawicki.http.HttpRequest$8.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.io.InputStream` `com.github.kevinsawicki.http.HttpRequest$8.val$input` @AccessFlag FINAL_SYNTHETIC;
  `java.io.OutputStream` `com.github.kevinsawicki.http.HttpRequest$8.val$output` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.github.kevinsawicki.http.HttpRequest$8` v0 @kind this, `com.github.kevinsawicki.http.HttpRequest` v1 @kind object, `java.io.Closeable` v2 @kind object, `boolean` v3 , `java.io.InputStream` v4 @kind object, `java.io.OutputStream` v5 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest$8;.<init>:(Lcom/github/kevinsawicki/http/HttpRequest;Ljava/io/Closeable;ZLjava/io/InputStream;Ljava/io/OutputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L18fd6c.  v0.`com.github.kevinsawicki.http.HttpRequest$8.this$0` @type ^`com.github.kevinsawicki.http.HttpRequest` := v1 @kind object;
  #L18fd70.  v0.`com.github.kevinsawicki.http.HttpRequest$8.val$input` @type ^`java.io.InputStream` := v4 @kind object;
  #L18fd74.  v0.`com.github.kevinsawicki.http.HttpRequest$8.val$output` @type ^`java.io.OutputStream` := v5 @kind object;
  #L18fd78.  call `<init>`(v0, v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$CloseOperation;.<init>:(Ljava/io/Closeable;Z)V` @kind direct;
  #L18fd7e.  return @kind void;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `run`(`com.github.kevinsawicki.http.HttpRequest$8` v7 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest$8;.run:()Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L18fcc8.  v0:= v7.`com.github.kevinsawicki.http.HttpRequest$8.this$0` @type ^`com.github.kevinsawicki.http.HttpRequest` @kind object;
  #L18fccc.  call temp:= `access$100`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$100:(Lcom/github/kevinsawicki/http/HttpRequest;)I` @kind static;
  #L18fcd2.  v0:= temp;
  #L18fcd4.  v0:= new `byte`[v0];
  #L18fcd8.  v1:= v7.`com.github.kevinsawicki.http.HttpRequest$8.val$input` @type ^`java.io.InputStream` @kind object;
  #L18fcdc.  call temp:= `read`(v1, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L18fce2.  v1:= temp;
  #L18fce4.  v2:= -1I;
  #L18fce6.  if v1 == v2 then goto L18fd38;
  #L18fcea.  v2:= v7.`com.github.kevinsawicki.http.HttpRequest$8.val$output` @type ^`java.io.OutputStream` @kind object;
  #L18fcee.  v3:= 0I;
  #L18fcf0.  call `write`(v2, v0, v3, v1) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L18fcf6.  v2:= v7.`com.github.kevinsawicki.http.HttpRequest$8.this$0` @type ^`com.github.kevinsawicki.http.HttpRequest` @kind object;
  #L18fcfa.  call temp:= `access$200`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$200:(Lcom/github/kevinsawicki/http/HttpRequest;)J` @kind static;
  #L18fd00.  v3:= temp @kind wide;
  #L18fd02.  v5:= (`long`) v1 @kind i2l;
  #L18fd04.  v3:= v3 + v5 @kind long;
  #L18fd06.  call temp:= `access$202`(v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$202:(Lcom/github/kevinsawicki/http/HttpRequest;J)J` @kind static;
  #L18fd0c.  v1:= v7.`com.github.kevinsawicki.http.HttpRequest$8.this$0` @type ^`com.github.kevinsawicki.http.HttpRequest` @kind object;
  #L18fd10.  call temp:= `access$400`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$400:(Lcom/github/kevinsawicki/http/HttpRequest;)Lcom/github/kevinsawicki/http/HttpRequest$UploadProgress;` @kind static;
  #L18fd16.  v1:= temp @kind object;
  #L18fd18.  v2:= v7.`com.github.kevinsawicki.http.HttpRequest$8.this$0` @type ^`com.github.kevinsawicki.http.HttpRequest` @kind object;
  #L18fd1c.  call temp:= `access$200`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$200:(Lcom/github/kevinsawicki/http/HttpRequest;)J` @kind static;
  #L18fd22.  v2:= temp @kind wide;
  #L18fd24.  v4:= v7.`com.github.kevinsawicki.http.HttpRequest$8.this$0` @type ^`com.github.kevinsawicki.http.HttpRequest` @kind object;
  #L18fd28.  call temp:= `access$300`(v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$300:(Lcom/github/kevinsawicki/http/HttpRequest;)J` @kind static;
  #L18fd2e.  v4:= temp @kind wide;
  #L18fd30.  call `onUpload`(v1, v2, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest$UploadProgress;.onUpload:(JJ)V` @kind interface;
  #L18fd36.  goto L18fcd8;
  #L18fd38.  v0:= v7.`com.github.kevinsawicki.http.HttpRequest$8.this$0` @type ^`com.github.kevinsawicki.http.HttpRequest` @kind object;
  #L18fd3c.  return v0 @kind object;
}
procedure `java.lang.Object` `run`(`com.github.kevinsawicki.http.HttpRequest$8` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest$8;.run:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L18fd50.  call temp:= `run`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$8;.run:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L18fd56.  v0:= temp @kind object;
  #L18fd58.  return v0 @kind object;
}
