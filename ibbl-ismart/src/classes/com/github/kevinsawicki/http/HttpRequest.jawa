record `com.github.kevinsawicki.http.HttpRequest` @kind class @AccessFlag PUBLIC {
  `int` `com.github.kevinsawicki.http.HttpRequest.bufferSize` @AccessFlag PRIVATE;
  `java.net.HttpURLConnection` `com.github.kevinsawicki.http.HttpRequest.connection` @AccessFlag PRIVATE;
  `boolean` `com.github.kevinsawicki.http.HttpRequest.form` @AccessFlag PRIVATE;
  `java.lang.String` `com.github.kevinsawicki.http.HttpRequest.httpProxyHost` @AccessFlag PRIVATE;
  `int` `com.github.kevinsawicki.http.HttpRequest.httpProxyPort` @AccessFlag PRIVATE;
  `boolean` `com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @AccessFlag PRIVATE;
  `boolean` `com.github.kevinsawicki.http.HttpRequest.multipart` @AccessFlag PRIVATE;
  `com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` `com.github.kevinsawicki.http.HttpRequest.output` @AccessFlag PRIVATE;
  `com.github.kevinsawicki.http.HttpRequest$UploadProgress` `com.github.kevinsawicki.http.HttpRequest.progress` @AccessFlag PRIVATE;
  `java.lang.String` `com.github.kevinsawicki.http.HttpRequest.requestMethod` @AccessFlag PRIVATE_FINAL;
  `long` `com.github.kevinsawicki.http.HttpRequest.totalSize` @AccessFlag PRIVATE;
  `long` `com.github.kevinsawicki.http.HttpRequest.totalWritten` @AccessFlag PRIVATE;
  `boolean` `com.github.kevinsawicki.http.HttpRequest.uncompress` @AccessFlag PRIVATE;
  `java.net.URL` `com.github.kevinsawicki.http.HttpRequest.url` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.BOUNDARY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CERT_MODE_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CERT_MODE_PINNED` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CERT_MODE_TRUSTALL` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CHARSET_LATIN1` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CHARSET_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` `@@com.github.kevinsawicki.http.HttpRequest.CONNECTION_FACTORY` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CONTENT_TYPE_FORM` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CONTENT_TYPE_JSON` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CONTENT_TYPE_MULTIPART` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CRLF` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.CURRENT_CERT_MODE` @AccessFlag PRIVATE_STATIC;
global `java.lang.String`[] `@@com.github.kevinsawicki.http.HttpRequest.EMPTY_STRINGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.ENCODING_GZIP` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_ACCEPT` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_ACCEPT_CHARSET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_ACCEPT_ENCODING` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_AUTHORIZATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_CACHE_CONTROL` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_CONTENT_ENCODING` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_CONTENT_LENGTH` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_CONTENT_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_DATE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_ETAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_EXPIRES` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_IF_NONE_MATCH` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_LAST_MODIFIED` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_LOCATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_PROXY_AUTHORIZATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_REFERER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_SERVER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.HEADER_USER_AGENT` @AccessFlag PUBLIC_STATIC_FINAL;
global `javax.net.ssl.HostnameVerifier` `@@com.github.kevinsawicki.http.HttpRequest.HOSTNAME_VERIFIER` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.METHOD_DELETE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.METHOD_GET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.METHOD_HEAD` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.METHOD_OPTIONS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.METHOD_PATCH` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.METHOD_POST` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.METHOD_PUT` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.METHOD_TRACE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.github.kevinsawicki.http.HttpRequest.PARAM_CHARSET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.ArrayList` `@@com.github.kevinsawicki.http.HttpRequest.PINNED_CERTS` @AccessFlag PRIVATE_STATIC;
global `javax.net.ssl.SSLSocketFactory` `@@com.github.kevinsawicki.http.HttpRequest.SOCKET_FACTORY` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L192be8.  v0:= 0I;
  #L192bea.  v0:= new `java.lang.String`[v0];
  #L192bee.  `@@com.github.kevinsawicki.http.HttpRequest.EMPTY_STRINGS` @type ^`java.lang.String`[] := v0 @kind object;
  #L192bf2.  v0:= "default" @kind object;
  #L192bf6.  `@@com.github.kevinsawicki.http.HttpRequest.CURRENT_CERT_MODE` @type ^`java.lang.String` := v0 @kind object;
  #L192bfa.  v0:= `@@com.github.kevinsawicki.http.HttpRequest$ConnectionFactory.DEFAULT` @type ^`com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` @kind object;
  #L192bfe.  `@@com.github.kevinsawicki.http.HttpRequest.CONNECTION_FACTORY` @type ^`com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` := v0 @kind object;
  #L192c02.  return @kind void;
}
procedure `void` `<init>`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/lang/CharSequence;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L192c14.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L192c1a.  v0:= 0I;
  #L192c1c.  v2.`com.github.kevinsawicki.http.HttpRequest.connection` @type ^`java.net.HttpURLConnection` := v0 @kind object;
  #L192c20.  v0:= 1I;
  #L192c22.  v2.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` := v0 @kind boolean;
  #L192c26.  v0:= 0I;
  #L192c28.  v2.`com.github.kevinsawicki.http.HttpRequest.uncompress` @type ^`boolean` := v0 @kind boolean;
  #L192c2c.  v0:= 8192I;
  #L192c30.  v2.`com.github.kevinsawicki.http.HttpRequest.bufferSize` @type ^`int` := v0;
  #L192c34.  v0:= -1L;
  #L192c38.  v2.`com.github.kevinsawicki.http.HttpRequest.totalSize` @type ^`long` := v0 @kind wide;
  #L192c3c.  v0:= 0L;
  #L192c40.  v2.`com.github.kevinsawicki.http.HttpRequest.totalWritten` @type ^`long` := v0 @kind wide;
  #L192c44.  v0:= `@@com.github.kevinsawicki.http.HttpRequest$UploadProgress.DEFAULT` @type ^`com.github.kevinsawicki.http.HttpRequest$UploadProgress` @kind object;
  #L192c48.  v2.`com.github.kevinsawicki.http.HttpRequest.progress` @type ^`com.github.kevinsawicki.http.HttpRequest$UploadProgress` := v0 @kind object;
  #L192c4c.  v0:= new `java.net.URL`;
  #L192c50.  call temp:= `toString`(v3) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L192c56.  v3:= temp @kind object;
  #L192c58.  call `<init>`(v0, v3) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192c5e.  v2.`com.github.kevinsawicki.http.HttpRequest.url` @type ^`java.net.URL` := v0 @kind object;
  #L192c62.  v2.`com.github.kevinsawicki.http.HttpRequest.requestMethod` @type ^`java.lang.String` := v4 @kind object;
  #L192c66.  call `setupSecurity`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setupSecurity:()V` @kind direct;
  #L192c6c.  return @kind void;
  #L192c6e.  v3:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L192c70.  v4:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L192c74.  call `<init>`(v4, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L192c7a.  throw v4;
  catch `java.net.MalformedURLException` @[L192c4c..L192c62] goto L192c6e;
}
procedure `void` `<init>`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.net.URL` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L192c9c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L192ca2.  v0:= 0I;
  #L192ca4.  v2.`com.github.kevinsawicki.http.HttpRequest.connection` @type ^`java.net.HttpURLConnection` := v0 @kind object;
  #L192ca8.  v0:= 1I;
  #L192caa.  v2.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` := v0 @kind boolean;
  #L192cae.  v0:= 0I;
  #L192cb0.  v2.`com.github.kevinsawicki.http.HttpRequest.uncompress` @type ^`boolean` := v0 @kind boolean;
  #L192cb4.  v0:= 8192I;
  #L192cb8.  v2.`com.github.kevinsawicki.http.HttpRequest.bufferSize` @type ^`int` := v0;
  #L192cbc.  v0:= -1L;
  #L192cc0.  v2.`com.github.kevinsawicki.http.HttpRequest.totalSize` @type ^`long` := v0 @kind wide;
  #L192cc4.  v0:= 0L;
  #L192cc8.  v2.`com.github.kevinsawicki.http.HttpRequest.totalWritten` @type ^`long` := v0 @kind wide;
  #L192ccc.  v0:= `@@com.github.kevinsawicki.http.HttpRequest$UploadProgress.DEFAULT` @type ^`com.github.kevinsawicki.http.HttpRequest$UploadProgress` @kind object;
  #L192cd0.  v2.`com.github.kevinsawicki.http.HttpRequest.progress` @type ^`com.github.kevinsawicki.http.HttpRequest$UploadProgress` := v0 @kind object;
  #L192cd4.  v2.`com.github.kevinsawicki.http.HttpRequest.url` @type ^`java.net.URL` := v3 @kind object;
  #L192cd8.  v2.`com.github.kevinsawicki.http.HttpRequest.requestMethod` @type ^`java.lang.String` := v4 @kind object;
  #L192cdc.  call `setupSecurity`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setupSecurity:()V` @kind direct;
  #L192ce2.  return @kind void;
}
procedure `java.lang.String` `access$000`(`java.lang.String` v0 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$000:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L191cc8.  call temp:= `getValidCharset`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getValidCharset:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L191cce.  v0:= temp @kind object;
  #L191cd0.  return v0 @kind object;
}
procedure `int` `access$100`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$100:(Lcom/github/kevinsawicki/http/HttpRequest;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L191984.  v0:= v0.`com.github.kevinsawicki.http.HttpRequest.bufferSize` @type ^`int`;
  #L191988.  return v0;
}
procedure `long` `access$200`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$200:(Lcom/github/kevinsawicki/http/HttpRequest;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L192af8.  v0:= v2.`com.github.kevinsawicki.http.HttpRequest.totalWritten` @type ^`long` @kind wide;
  #L192afc.  return v0 @kind wide;
}
procedure `long` `access$202`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind object, `long` v1 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$202:(Lcom/github/kevinsawicki/http/HttpRequest;J)J` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L192b10.  v0.`com.github.kevinsawicki.http.HttpRequest.totalWritten` @type ^`long` := v1 @kind wide;
  #L192b14.  return v1 @kind wide;
}
procedure `long` `access$300`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$300:(Lcom/github/kevinsawicki/http/HttpRequest;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L192b28.  v0:= v2.`com.github.kevinsawicki.http.HttpRequest.totalSize` @type ^`long` @kind wide;
  #L192b2c.  return v0 @kind wide;
}
procedure `com.github.kevinsawicki.http.HttpRequest$UploadProgress` `access$400`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.access$400:(Lcom/github/kevinsawicki/http/HttpRequest;)Lcom/github/kevinsawicki/http/HttpRequest$UploadProgress;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L19196c.  v0:= v0.`com.github.kevinsawicki.http.HttpRequest.progress` @type ^`com.github.kevinsawicki.http.HttpRequest$UploadProgress` @kind object;
  #L191970.  return v0 @kind object;
}
procedure `void` `addCert`(`java.io.InputStream` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addCert:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L192cf4.  v0:= "X.509" @kind object;
  #L192cf8.  call temp:= `getInstance`(v0) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L192cfe.  v0:= temp @kind object;
  #L192d00.  call temp:= `generateCertificate`(v0, v1) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L192d06.  v0:= temp @kind object;
  #L192d08.  call `addCert`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addCert:(Ljava/security/cert/Certificate;)V` @kind static;
  #L192d0e.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L192d14.  return @kind void;
  #L192d16.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L192d18.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L192d1e.  throw v0;
  catch `java.lang.Throwable` @[L192d00..L192d0e] goto L192d16;
}
procedure `void` `addCert`(`java.security.cert.Certificate` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addCert:(Ljava/security/cert/Certificate;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L192d3c.  v0:= `@@com.github.kevinsawicki.http.HttpRequest.PINNED_CERTS` @type ^`java.util.ArrayList` @kind object;
  #L192d40.  if v0 != 0 then goto L192d52;
  #L192d44.  v0:= new `java.util.ArrayList`;
  #L192d48.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L192d4e.  `@@com.github.kevinsawicki.http.HttpRequest.PINNED_CERTS` @type ^`java.util.ArrayList` := v0 @kind object;
  #L192d52.  v0:= `@@com.github.kevinsawicki.http.HttpRequest.PINNED_CERTS` @type ^`java.util.ArrayList` @kind object;
  #L192d56.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L192d5c.  v1:= `@@com.github.kevinsawicki.http.HttpRequest.CURRENT_CERT_MODE` @type ^`java.lang.String` @kind object;
  #L192d60.  v0:= "pinned" @kind object;
  #L192d64.  if v1 != v0 then goto L192d7c;
  #L192d68.  call temp:= `getPinnedTrustManagers`() @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getPinnedTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind static;
  #L192d6e.  v1:= temp @kind object;
  #L192d70.  call temp:= `createSocketFactory`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.createSocketFactory:([Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L192d76.  v1:= temp @kind object;
  #L192d78.  `@@com.github.kevinsawicki.http.HttpRequest.SOCKET_FACTORY` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L192d7c.  return @kind void;
}
procedure `java.lang.StringBuilder` `addParam`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.StringBuilder` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParam:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L192350.  v0:= "UTF-8" @kind object;
  #L192354.  call temp:= `addParam`(v1, v2, v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParam:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L19235a.  v1:= temp @kind object;
  #L19235c.  return v1 @kind object;
}
procedure `java.lang.StringBuilder` `addParam`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.StringBuilder` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParam:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L192370.  if v2 == 0 then goto L192390;
  #L192374.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L19237a.  v0:= temp @kind object;
  #L19237c.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L192382.  v0:= temp;
  #L192384.  if v0 == 0 then goto L192390;
  #L192388.  call temp:= `arrayToList`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.arrayToList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L19238e.  v2:= temp @kind object;
  #L192390.  v0:= instanceof @variable v2 @type ^`java.lang.Iterable` @kind boolean;
  #L192394.  if v0 == 0 then goto L19240a;
  #L192398.  v2:= (`java.lang.Iterable`) v2 @kind object;
  #L19239c.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1923a2.  v2:= temp @kind object;
  #L1923a4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1923aa.  v0:= temp;
  #L1923ac.  if v0 == 0 then goto L192444;
  #L1923b0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1923b6.  v0:= temp @kind object;
  #L1923b8.  call temp:= `encode`(v0, v4) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1923be.  v0:= temp @kind object;
  #L1923c0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1923c6.  v0:= "[]=" @kind object;
  #L1923ca.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1923d0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1923d6.  v0:= temp @kind object;
  #L1923d8.  if v0 == 0 then goto L1923f2;
  #L1923dc.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1923e2.  v0:= temp @kind object;
  #L1923e4.  call temp:= `encode`(v0, v4) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1923ea.  v0:= temp @kind object;
  #L1923ec.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1923f2.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1923f8.  v0:= temp;
  #L1923fa.  if v0 == 0 then goto L1923a4;
  #L1923fe.  v0:= "&" @kind object;
  #L192402.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192408.  goto L1923a4;
  #L19240a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L192410.  v1:= temp @kind object;
  #L192412.  call temp:= `encode`(v1, v4) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L192418.  v1:= temp @kind object;
  #L19241a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192420.  v1:= "=" @kind object;
  #L192424.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19242a.  if v2 == 0 then goto L192444;
  #L19242e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L192434.  v1:= temp @kind object;
  #L192436.  call temp:= `encode`(v1, v4) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19243c.  v1:= temp @kind object;
  #L19243e.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192444.  return v3 @kind object;
  #L192446.  v1:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L192448.  v2:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19244c.  call `<init>`(v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L192452.  throw v2;
  #L192454.  return @kind void;
  catch `java.io.UnsupportedEncodingException` @[L192390..L192444] goto L192446;
}
procedure `java.lang.StringBuilder` `addParamPrefix`(`java.lang.String` v4 @kind object, `java.lang.StringBuilder` v5 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParamPrefix:(Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L192478.  v0:= 63I;
  #L19247c.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L192482.  v1:= temp;
  #L192484.  call temp:= `length`(v5) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L19248a.  v2:= temp;
  #L19248c.  v2:= v2 + -1;
  #L192490.  v3:= -1I;
  #L192492.  if v1 != v3 then goto L19249e;
  #L192496.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19249c.  goto L1924b8;
  #L19249e.  if v1 >= v2 then goto L1924b8;
  #L1924a2.  call temp:= `charAt`(v4, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1924a8.  v4:= temp;
  #L1924aa.  v0:= 38I;
  #L1924ae.  if v4 == v0 then goto L1924b8;
  #L1924b2.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1924b8.  return v5 @kind object;
}
procedure `java.lang.StringBuilder` `addPathSeparator`(`java.lang.String` v2 @kind object, `java.lang.StringBuilder` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addPathSeparator:(Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1924cc.  v0:= 58I;
  #L1924d0.  call temp:= `indexOf`(v2, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1924d6.  v0:= temp;
  #L1924d8.  v0:= v0 + 2;
  #L1924dc.  v1:= 47I;
  #L1924e0.  call temp:= `lastIndexOf`(v2, v1) @signature `Ljava/lang/String;.lastIndexOf:(I)I` @kind virtual;
  #L1924e6.  v2:= temp;
  #L1924e8.  if v0 != v2 then goto L1924f2;
  #L1924ec.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1924f2.  return v3 @kind object;
}
procedure `java.lang.String` `append`(`java.lang.CharSequence` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;Ljava/util/Map;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L191d80.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L191d86.  v2:= temp @kind object;
  #L191d88.  if v3 == 0 then goto L191e36;
  #L191d8c.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L191d92.  v0:= temp;
  #L191d94.  if v0 == 0 then goto L191d9a;
  #L191d98.  goto L191e36;
  #L191d9a.  v0:= new `java.lang.StringBuilder`;
  #L191d9e.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L191da4.  call temp:= `addPathSeparator`(v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addPathSeparator:(Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L191daa.  call temp:= `addParamPrefix`(v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParamPrefix:(Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L191db0.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L191db6.  v2:= temp @kind object;
  #L191db8.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L191dbe.  v2:= temp @kind object;
  #L191dc0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L191dc6.  v3:= temp @kind object;
  #L191dc8.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L191dcc.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L191dd2.  v1:= temp @kind object;
  #L191dd4.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L191dda.  v1:= temp @kind object;
  #L191ddc.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L191de2.  v3:= temp @kind object;
  #L191de4.  call temp:= `addParam`(v1, v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParam:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L191dea.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L191df0.  v3:= temp;
  #L191df2.  if v3 == 0 then goto L191e2c;
  #L191df6.  v3:= 38I;
  #L191dfa.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L191e00.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L191e06.  v3:= temp @kind object;
  #L191e08.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L191e0c.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L191e12.  v1:= temp @kind object;
  #L191e14.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L191e1a.  v1:= temp @kind object;
  #L191e1c.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L191e22.  v3:= temp @kind object;
  #L191e24.  call temp:= `addParam`(v1, v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParam:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L191e2a.  goto L191dea;
  #L191e2c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L191e32.  v2:= temp @kind object;
  #L191e34.  return v2 @kind object;
  #L191e36.  return v2 @kind object;
}
procedure `java.lang.String` `append`(`java.lang.CharSequence` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L191ce4.  call temp:= `toString`(v3) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L191cea.  v3:= temp @kind object;
  #L191cec.  if v4 == 0 then goto L191d6c;
  #L191cf0.  v0:= length @variable v4;
  #L191cf2.  if v0 != 0 then goto L191cf8;
  #L191cf6.  goto L191d6c;
  #L191cf8.  v0:= length @variable v4;
  #L191cfa.  v1:= 2I;
  #L191cfc.  v0:= v0 %% v1 @kind int;
  #L191cfe.  if v0 != 0 then goto L191d5c;
  #L191d02.  v0:= new `java.lang.StringBuilder`;
  #L191d06.  call `<init>`(v0, v3) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L191d0c.  call temp:= `addPathSeparator`(v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addPathSeparator:(Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L191d12.  call temp:= `addParamPrefix`(v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParamPrefix:(Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L191d18.  v3:= 0I;
  #L191d1a.  v3:= v4[v3] @kind object;
  #L191d1e.  v2:= 1I;
  #L191d20.  v2:= v4[v2] @kind object;
  #L191d24.  call temp:= `addParam`(v3, v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParam:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L191d2a.  v3:= length @variable v4;
  #L191d2c.  if v1 >= v3 then goto L191d52;
  #L191d30.  v3:= 38I;
  #L191d34.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L191d3a.  v3:= v4[v1] @kind object;
  #L191d3e.  v2:= v1 + 1;
  #L191d42.  v2:= v4[v2] @kind object;
  #L191d46.  call temp:= `addParam`(v3, v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.addParam:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L191d4c.  v1:= v1 + 2;
  #L191d50.  goto L191d2a;
  #L191d52.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L191d58.  v3:= temp @kind object;
  #L191d5a.  return v3 @kind object;
  #L191d5c.  v3:= new `java.lang.IllegalArgumentException`;
  #L191d60.  v4:= "Must specify an even number of parameter names/values" @kind object;
  #L191d64.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L191d6a.  throw v3;
  #L191d6c.  return v3 @kind object;
}
procedure `java.util.List` `arrayToList`(`java.lang.Object` v5 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.arrayToList:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L192660.  v0:= instanceof @variable v5 @type ^`java.lang.Object`[] @kind boolean;
  #L192664.  if v0 == 0 then goto L192676;
  #L192668.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L19266c.  call temp:= `asList`(v5) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L192672.  v5:= temp @kind object;
  #L192674.  return v5 @kind object;
  #L192676.  v0:= new `java.util.ArrayList`;
  #L19267a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L192680.  v1:= instanceof @variable v5 @type ^`int`[] @kind boolean;
  #L192684.  v2:= 0I;
  #L192686.  if v1 == 0 then goto L1926ac;
  #L19268a.  v5:= (`int`[]) v5 @kind object;
  #L19268e.  v1:= length @variable v5;
  #L192690.  if v2 >= v1 then goto L1927d2;
  #L192694.  v3:= v5[v2];
  #L192698.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L19269e.  v3:= temp @kind object;
  #L1926a0.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1926a6.  v2:= v2 + 1;
  #L1926aa.  goto L192690;
  #L1926ac.  v1:= instanceof @variable v5 @type ^`boolean`[] @kind boolean;
  #L1926b0.  if v1 == 0 then goto L1926d6;
  #L1926b4.  v5:= (`boolean`[]) v5 @kind object;
  #L1926b8.  v1:= length @variable v5;
  #L1926ba.  if v2 >= v1 then goto L1927d2;
  #L1926be.  v3:= v5[v2] @kind boolean;
  #L1926c2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1926c8.  v3:= temp @kind object;
  #L1926ca.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1926d0.  v2:= v2 + 1;
  #L1926d4.  goto L1926ba;
  #L1926d6.  v1:= instanceof @variable v5 @type ^`long`[] @kind boolean;
  #L1926da.  if v1 == 0 then goto L192700;
  #L1926de.  v5:= (`long`[]) v5 @kind object;
  #L1926e2.  v1:= length @variable v5;
  #L1926e4.  if v2 >= v1 then goto L1927d2;
  #L1926e8.  v3:= v5[v2] @kind wide;
  #L1926ec.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1926f2.  v3:= temp @kind object;
  #L1926f4.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1926fa.  v2:= v2 + 1;
  #L1926fe.  goto L1926e4;
  #L192700.  v1:= instanceof @variable v5 @type ^`float`[] @kind boolean;
  #L192704.  if v1 == 0 then goto L19272a;
  #L192708.  v5:= (`float`[]) v5 @kind object;
  #L19270c.  v1:= length @variable v5;
  #L19270e.  if v2 >= v1 then goto L1927d2;
  #L192712.  v3:= v5[v2];
  #L192716.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L19271c.  v3:= temp @kind object;
  #L19271e.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L192724.  v2:= v2 + 1;
  #L192728.  goto L19270e;
  #L19272a.  v1:= instanceof @variable v5 @type ^`double`[] @kind boolean;
  #L19272e.  if v1 == 0 then goto L192754;
  #L192732.  v5:= (`double`[]) v5 @kind object;
  #L192736.  v1:= length @variable v5;
  #L192738.  if v2 >= v1 then goto L1927d2;
  #L19273c.  v3:= v5[v2] @kind wide;
  #L192740.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L192746.  v3:= temp @kind object;
  #L192748.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19274e.  v2:= v2 + 1;
  #L192752.  goto L192738;
  #L192754.  v1:= instanceof @variable v5 @type ^`short`[] @kind boolean;
  #L192758.  if v1 == 0 then goto L19277e;
  #L19275c.  v5:= (`short`[]) v5 @kind object;
  #L192760.  v1:= length @variable v5;
  #L192762.  if v2 >= v1 then goto L1927d2;
  #L192766.  v3:= v5[v2] @kind short;
  #L19276a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L192770.  v3:= temp @kind object;
  #L192772.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L192778.  v2:= v2 + 1;
  #L19277c.  goto L192762;
  #L19277e.  v1:= instanceof @variable v5 @type ^`byte`[] @kind boolean;
  #L192782.  if v1 == 0 then goto L1927a8;
  #L192786.  v5:= (`byte`[]) v5 @kind object;
  #L19278a.  v1:= length @variable v5;
  #L19278c.  if v2 >= v1 then goto L1927d2;
  #L192790.  v3:= v5[v2] @kind byte;
  #L192794.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L19279a.  v3:= temp @kind object;
  #L19279c.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1927a2.  v2:= v2 + 1;
  #L1927a6.  goto L19278c;
  #L1927a8.  v1:= instanceof @variable v5 @type ^`char`[] @kind boolean;
  #L1927ac.  if v1 == 0 then goto L1927d2;
  #L1927b0.  v5:= (`char`[]) v5 @kind object;
  #L1927b4.  v1:= length @variable v5;
  #L1927b6.  if v2 >= v1 then goto L1927d2;
  #L1927ba.  v3:= v5[v2] @kind char;
  #L1927be.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1927c4.  v3:= temp @kind object;
  #L1927c6.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1927cc.  v2:= v2 + 1;
  #L1927d0.  goto L1927b6;
  #L1927d2.  return v0 @kind object;
}
procedure `java.net.HttpURLConnection` `createConnection`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.createConnection:()Ljava/net/HttpURLConnection;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L192570.  v0:= v3.`com.github.kevinsawicki.http.HttpRequest.httpProxyHost` @type ^`java.lang.String` @kind object;
  #L192574.  if v0 == 0 then goto L192592;
  #L192578.  v0:= `@@com.github.kevinsawicki.http.HttpRequest.CONNECTION_FACTORY` @type ^`com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` @kind object;
  #L19257c.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.url` @type ^`java.net.URL` @kind object;
  #L192580.  call temp:= `createProxy`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.createProxy:()Ljava/net/Proxy;` @kind direct;
  #L192586.  v2:= temp @kind object;
  #L192588.  call temp:= `create`(v0, v1, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$ConnectionFactory;.create:(Ljava/net/URL;Ljava/net/Proxy;)Ljava/net/HttpURLConnection;` @kind interface;
  #L19258e.  v0:= temp @kind object;
  #L192590.  goto L1925a2;
  #L192592.  v0:= `@@com.github.kevinsawicki.http.HttpRequest.CONNECTION_FACTORY` @type ^`com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` @kind object;
  #L192596.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.url` @type ^`java.net.URL` @kind object;
  #L19259a.  call temp:= `create`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$ConnectionFactory;.create:(Ljava/net/URL;)Ljava/net/HttpURLConnection;` @kind interface;
  #L1925a0.  v0:= temp @kind object;
  #L1925a2.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.requestMethod` @type ^`java.lang.String` @kind object;
  #L1925a6.  call `setRequestMethod`(v0, v1) @signature `Ljava/net/HttpURLConnection;.setRequestMethod:(Ljava/lang/String;)V` @kind virtual;
  #L1925ac.  return v0 @kind object;
  #L1925ae.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1925b0.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L1925b4.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1925ba.  throw v1;
  catch `java.io.IOException` @[L192570..L1925ac] goto L1925ae;
}
procedure `java.net.Proxy` `createProxy`(`com.github.kevinsawicki.http.HttpRequest` v5 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.createProxy:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L192608.  v0:= new `java.net.Proxy`;
  #L19260c.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L192610.  v2:= new `java.net.InetSocketAddress`;
  #L192614.  v3:= v5.`com.github.kevinsawicki.http.HttpRequest.httpProxyHost` @type ^`java.lang.String` @kind object;
  #L192618.  v4:= v5.`com.github.kevinsawicki.http.HttpRequest.httpProxyPort` @type ^`int`;
  #L19261c.  call `<init>`(v2, v3, v4) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L192622.  call `<init>`(v0, v1, v2) @signature `Ljava/net/Proxy;.<init>:(Ljava/net/Proxy$Type;Ljava/net/SocketAddress;)V` @kind direct;
  #L192628.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `createSocketFactory`(`javax.net.ssl.TrustManager`[] v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.createSocketFactory:([Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L192968.  v0:= "TLS" @kind object;
  #L19296c.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L192972.  v0:= temp @kind object;
  #L192974.  v1:= 0I;
  #L192976.  v2:= new `java.security.SecureRandom`;
  #L19297a.  call `<init>`(v2) @signature `Ljava/security/SecureRandom;.<init>:()V` @kind direct;
  #L192980.  call `init`(v0, v1, v3, v2) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L192986.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L19298a.  v1:= 20I;
  #L19298e.  if v3 >= v1 then goto L19299e;
  #L192992.  v3:= new `com.github.kevinsawicki.http.TLSSocketFactory`;
  #L192996.  call `<init>`(v3, v0) @signature `Lcom/github/kevinsawicki/http/TLSSocketFactory;.<init>:(Ljavax/net/ssl/SSLContext;)V` @kind direct;
  #L19299c.  return v3 @kind object;
  #L19299e.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1929a4.  v3:= temp @kind object;
  #L1929a6.  return v3 @kind object;
  #L1929a8.  v3:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1929aa.  v0:= new `java.io.IOException`;
  #L1929ae.  v1:= "Security exception configuring SSL context" @kind object;
  #L1929b2.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1929b8.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1929be.  v3:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L1929c2.  call `<init>`(v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1929c8.  throw v3;
  catch `java.security.GeneralSecurityException` @[L192968..L1929a6] goto L1929a8;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `delete`(`java.lang.CharSequence` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.delete:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L190a7c.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L190a80.  v1:= "DELETE" @kind object;
  #L190a84.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/lang/CharSequence;Ljava/lang/String;)V` @kind direct;
  #L190a8a.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `delete`(`java.lang.CharSequence` v0 @kind object, `java.util.Map` v1 @kind object, `boolean` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.delete:(Ljava/lang/CharSequence;Ljava/util/Map;Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L190acc.  call temp:= `append`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;Ljava/util/Map;)Ljava/lang/String;` @kind static;
  #L190ad2.  v0:= temp @kind object;
  #L190ad4.  if v2 == 0 then goto L190ae0;
  #L190ad8.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L190ade.  v0:= temp @kind object;
  #L190ae0.  call temp:= `delete`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.delete:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L190ae6.  v0:= temp @kind object;
  #L190ae8.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `delete`(`java.lang.CharSequence` v0 @kind object, `boolean` v1 , `java.lang.Object`[] v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.delete:(Ljava/lang/CharSequence;Z[Ljava/lang/Object;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L190a9c.  call temp:= `append`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L190aa2.  v0:= temp @kind object;
  #L190aa4.  if v1 == 0 then goto L190ab0;
  #L190aa8.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L190aae.  v0:= temp @kind object;
  #L190ab0.  call temp:= `delete`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.delete:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L190ab6.  v0:= temp @kind object;
  #L190ab8.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `delete`(`java.net.URL` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.delete:(Ljava/net/URL;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L190afc.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L190b00.  v1:= "DELETE" @kind object;
  #L190b04.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L190b0a.  return v0 @kind object;
}
procedure `java.lang.String` `encode`(`java.lang.CharSequence` v7 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L191f68.  v0:= new `java.net.URL`;
  #L191f6c.  call temp:= `toString`(v7) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L191f72.  v7:= temp @kind object;
  #L191f74.  call `<init>`(v0, v7) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L191f7a.  call temp:= `getHost`(v0) @signature `Ljava/net/URL;.getHost:()Ljava/lang/String;` @kind virtual;
  #L191f80.  v7:= temp @kind object;
  #L191f82.  call temp:= `getPort`(v0) @signature `Ljava/net/URL;.getPort:()I` @kind virtual;
  #L191f88.  v1:= temp;
  #L191f8a.  v2:= -1I;
  #L191f8c.  if v1 == v2 then goto L191fc4;
  #L191f90.  v2:= new `java.lang.StringBuilder`;
  #L191f94.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L191f9a.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L191fa0.  v7:= 58I;
  #L191fa4.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L191faa.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L191fb0.  v7:= temp @kind object;
  #L191fb2.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L191fb8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L191fbe.  v7:= temp @kind object;
  #L191fc0.  v3:= v7 @kind object;
  #L191fc2.  goto L191fc6;
  #L191fc4.  v3:= v7 @kind object;
  #L191fc6.  v7:= new `java.net.URI`;
  #L191fca.  call temp:= `getProtocol`(v0) @signature `Ljava/net/URL;.getProtocol:()Ljava/lang/String;` @kind virtual;
  #L191fd0.  v2:= temp @kind object;
  #L191fd2.  call temp:= `getPath`(v0) @signature `Ljava/net/URL;.getPath:()Ljava/lang/String;` @kind virtual;
  #L191fd8.  v4:= temp @kind object;
  #L191fda.  call temp:= `getQuery`(v0) @signature `Ljava/net/URL;.getQuery:()Ljava/lang/String;` @kind virtual;
  #L191fe0.  v5:= temp @kind object;
  #L191fe2.  v6:= 0I;
  #L191fe4.  v1:= v7 @kind object;
  #L191fe6.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L191fec.  call temp:= `toASCIIString`(v7) @signature `Ljava/net/URI;.toASCIIString:()Ljava/lang/String;` @kind virtual;
  #L191ff2.  v7:= temp @kind object;
  #L191ff4.  v0:= 63I;
  #L191ff8.  call temp:= `indexOf`(v7, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L191ffe.  v0:= temp;
  #L192000.  if v0 <= 0 then goto L192054;
  #L192004.  v0:= v0 + 1;
  #L192008.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19200e.  v1:= temp;
  #L192010.  if v0 >= v1 then goto L192054;
  #L192014.  v1:= new `java.lang.StringBuilder`;
  #L192018.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19201e.  v2:= 0I;
  #L192020.  call temp:= `substring`(v7, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L192026.  v2:= temp @kind object;
  #L192028.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19202e.  call temp:= `substring`(v7, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L192034.  v7:= temp @kind object;
  #L192036.  v0:= "+" @kind object;
  #L19203a.  v2:= "%2B" @kind object;
  #L19203e.  call temp:= `replace`(v7, v0, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L192044.  v7:= temp @kind object;
  #L192046.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19204c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L192052.  v7:= temp @kind object;
  #L192054.  return v7 @kind object;
  #L192056.  v7:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L192058.  v0:= new `java.io.IOException`;
  #L19205c.  v1:= "Parsing URI failed" @kind object;
  #L192060.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192066.  call temp:= `initCause`(v0, v7) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L19206c.  v7:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L192070.  call `<init>`(v7, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L192076.  throw v7;
  #L192078.  v7:= Exception @type ^`java.io.IOException` @kind object;
  #L19207a.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19207e.  call `<init>`(v0, v7) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L192084.  throw v0;
  catch `java.io.IOException` @[L191f68..L191f7a] goto L192078;
  catch `java.net.URISyntaxException` @[L191fc6..L192054] goto L192056;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `get`(`java.lang.CharSequence` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.get:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L190ce8.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L190cec.  v1:= "GET" @kind object;
  #L190cf0.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/lang/CharSequence;Ljava/lang/String;)V` @kind direct;
  #L190cf6.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `get`(`java.lang.CharSequence` v0 @kind object, `java.util.Map` v1 @kind object, `boolean` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.get:(Ljava/lang/CharSequence;Ljava/util/Map;Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L190d38.  call temp:= `append`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;Ljava/util/Map;)Ljava/lang/String;` @kind static;
  #L190d3e.  v0:= temp @kind object;
  #L190d40.  if v2 == 0 then goto L190d4c;
  #L190d44.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L190d4a.  v0:= temp @kind object;
  #L190d4c.  call temp:= `get`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.get:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L190d52.  v0:= temp @kind object;
  #L190d54.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `get`(`java.lang.CharSequence` v0 @kind object, `boolean` v1 , `java.lang.Object`[] v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.get:(Ljava/lang/CharSequence;Z[Ljava/lang/Object;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L190d08.  call temp:= `append`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L190d0e.  v0:= temp @kind object;
  #L190d10.  if v1 == 0 then goto L190d1c;
  #L190d14.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L190d1a.  v0:= temp @kind object;
  #L190d1c.  call temp:= `get`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.get:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L190d22.  v0:= temp @kind object;
  #L190d24.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `get`(`java.net.URL` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.get:(Ljava/net/URL;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L190d68.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L190d6c.  v1:= "GET" @kind object;
  #L190d70.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L190d76.  return v0 @kind object;
}
procedure `javax.net.ssl.TrustManager`[] `getNoopTrustManagers`() @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getNoopTrustManagers:()[Ljavax/net/ssl/TrustManager;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1929ec.  v0:= 1I;
  #L1929ee.  v0:= new `javax.net.ssl.TrustManager`[v0];
  #L1929f2.  v1:= new `com.github.kevinsawicki.http.HttpRequest$1`;
  #L1929f6.  call `<init>`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$1;.<init>:()V` @kind direct;
  #L1929fc.  v2:= 0I;
  #L1929fe.  v0[v2]:= v1 @kind object;
  #L192a02.  return v0 @kind object;
}
procedure `javax.net.ssl.TrustManager`[] `getPinnedTrustManagers`() @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getPinnedTrustManagers:()[Ljavax/net/ssl/TrustManager;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L192a14.  v0:= `@@com.github.kevinsawicki.http.HttpRequest.PINNED_CERTS` @type ^`java.util.ArrayList` @kind object;
  #L192a18.  if v0 == 0 then goto L192ac6;
  #L192a1c.  call temp:= `getDefaultType`() @signature `Ljava/security/KeyStore;.getDefaultType:()Ljava/lang/String;` @kind static;
  #L192a22.  v0:= temp @kind object;
  #L192a24.  call temp:= `getInstance`(v0) @signature `Ljava/security/KeyStore;.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;` @kind static;
  #L192a2a.  v0:= temp @kind object;
  #L192a2c.  v1:= 0I;
  #L192a2e.  call `load`(v0, v1, v1) @signature `Ljava/security/KeyStore;.load:(Ljava/io/InputStream;[C)V` @kind virtual;
  #L192a34.  v1:= 0I;
  #L192a36.  v2:= `@@com.github.kevinsawicki.http.HttpRequest.PINNED_CERTS` @type ^`java.util.ArrayList` @kind object;
  #L192a3a.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L192a40.  v2:= temp;
  #L192a42.  if v1 >= v2 then goto L192a84;
  #L192a46.  v2:= new `java.lang.StringBuilder`;
  #L192a4a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L192a50.  v3:= "CA" @kind object;
  #L192a54.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a5a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a60.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L192a66.  v2:= temp @kind object;
  #L192a68.  v3:= `@@com.github.kevinsawicki.http.HttpRequest.PINNED_CERTS` @type ^`java.util.ArrayList` @kind object;
  #L192a6c.  call temp:= `get`(v3, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L192a72.  v3:= temp @kind object;
  #L192a74.  v3:= (`java.security.cert.Certificate`) v3 @kind object;
  #L192a78.  call `setCertificateEntry`(v0, v2, v3) @signature `Ljava/security/KeyStore;.setCertificateEntry:(Ljava/lang/String;Ljava/security/cert/Certificate;)V` @kind virtual;
  #L192a7e.  v1:= v1 + 1;
  #L192a82.  goto L192a36;
  #L192a84.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L192a8a.  v1:= temp @kind object;
  #L192a8c.  call temp:= `getInstance`(v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L192a92.  v1:= temp @kind object;
  #L192a94.  call `init`(v1, v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L192a9a.  call temp:= `getTrustManagers`(v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L192aa0.  v0:= temp @kind object;
  #L192aa2.  return v0 @kind object;
  #L192aa4.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L192aa6.  v1:= new `java.io.IOException`;
  #L192aaa.  v2:= "Security exception configuring SSL trust managers" @kind object;
  #L192aae.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192ab4.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L192aba.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L192abe.  call `<init>`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L192ac4.  throw v0;
  #L192ac6.  v0:= new `java.io.IOException`;
  #L192aca.  v1:= "You must add at least 1 certificate in order to pin to certificates" @kind object;
  #L192ace.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192ad4.  throw v0;
  #L192ad6.  return @kind void;
  catch `java.security.GeneralSecurityException` @[L192a1c..L192aa2] goto L192aa4;
}
procedure `javax.net.ssl.HostnameVerifier` `getTrustedVerifier`() @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getTrustedVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L19294c.  v0:= new `com.github.kevinsawicki.http.HttpRequest$2`;
  #L192950.  call `<init>`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$2;.<init>:()V` @kind direct;
  #L192956.  return v0 @kind object;
}
procedure `java.lang.String` `getValidCharset`(`java.lang.String` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getValidCharset:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1921ac.  if v1 == 0 then goto L1921be;
  #L1921b0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1921b6.  v0:= temp;
  #L1921b8.  if v0 <= 0 then goto L1921be;
  #L1921bc.  return v1 @kind object;
  #L1921be.  v1:= "UTF-8" @kind object;
  #L1921c2.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `head`(`java.lang.CharSequence` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.head:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L190d88.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L190d8c.  v1:= "HEAD" @kind object;
  #L190d90.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/lang/CharSequence;Ljava/lang/String;)V` @kind direct;
  #L190d96.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `head`(`java.lang.CharSequence` v0 @kind object, `java.util.Map` v1 @kind object, `boolean` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.head:(Ljava/lang/CharSequence;Ljava/util/Map;Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L190dd8.  call temp:= `append`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;Ljava/util/Map;)Ljava/lang/String;` @kind static;
  #L190dde.  v0:= temp @kind object;
  #L190de0.  if v2 == 0 then goto L190dec;
  #L190de4.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L190dea.  v0:= temp @kind object;
  #L190dec.  call temp:= `head`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.head:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L190df2.  v0:= temp @kind object;
  #L190df4.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `head`(`java.lang.CharSequence` v0 @kind object, `boolean` v1 , `java.lang.Object`[] v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.head:(Ljava/lang/CharSequence;Z[Ljava/lang/Object;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L190da8.  call temp:= `append`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L190dae.  v0:= temp @kind object;
  #L190db0.  if v1 == 0 then goto L190dbc;
  #L190db4.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L190dba.  v0:= temp @kind object;
  #L190dbc.  call temp:= `head`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.head:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L190dc2.  v0:= temp @kind object;
  #L190dc4.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `head`(`java.net.URL` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.head:(Ljava/net/URL;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L190e08.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L190e0c.  v1:= "HEAD" @kind object;
  #L190e10.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L190e16.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `incrementTotalSize`(`com.github.kevinsawicki.http.HttpRequest` v5 @kind this, `long` v6 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.incrementTotalSize:(J)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L190f50.  v0:= v5.`com.github.kevinsawicki.http.HttpRequest.totalSize` @type ^`long` @kind wide;
  #L190f54.  v2:= -1L;
  #L190f58.  v4:= lcmp(v0, v2);
  #L190f5c.  if v4 != 0 then goto L190f68;
  #L190f60.  v0:= 0L;
  #L190f64.  v5.`com.github.kevinsawicki.http.HttpRequest.totalSize` @type ^`long` := v0 @kind wide;
  #L190f68.  v0:= v5.`com.github.kevinsawicki.http.HttpRequest.totalSize` @type ^`long` @kind wide;
  #L190f6c.  v0:= v0 + v6 @kind long;
  #L190f6e.  v5.`com.github.kevinsawicki.http.HttpRequest.totalSize` @type ^`long` := v0 @kind wide;
  #L190f72.  return v5 @kind object;
}
procedure `void` `keepAlive`(`boolean` v1 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.keepAlive:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L192d90.  v0:= "http.keepAlive" @kind object;
  #L192d94.  call temp:= `toString`(v1) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L192d9a.  v1:= temp @kind object;
  #L192d9c.  call temp:= `setProperty`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L192da2.  return @kind void;
}
procedure `void` `maxConnections`(`int` v1 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.maxConnections:(I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L192db4.  v0:= "http.maxConnections" @kind object;
  #L192db8.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L192dbe.  v1:= temp @kind object;
  #L192dc0.  call temp:= `setProperty`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L192dc6.  return @kind void;
}
procedure `void` `nonProxyHosts`(`java.lang.String`[] v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.nonProxyHosts:([Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L192dd8.  if v4 == 0 then goto L192e30;
  #L192ddc.  v0:= length @variable v4;
  #L192dde.  if v0 <= 0 then goto L192e30;
  #L192de2.  v0:= new `java.lang.StringBuilder`;
  #L192de6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L192dec.  v1:= length @variable v4;
  #L192dee.  v1:= v1 + -1;
  #L192df2.  v2:= 0I;
  #L192df4.  if v2 >= v1 then goto L192e12;
  #L192df8.  v3:= v4[v2] @kind object;
  #L192dfc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192e02.  v3:= 124I;
  #L192e06.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L192e0c.  v2:= v2 + 1;
  #L192e10.  goto L192df4;
  #L192e12.  v4:= v4[v1] @kind object;
  #L192e16.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192e1c.  v4:= "http.nonProxyHosts" @kind object;
  #L192e20.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L192e26.  v0:= temp @kind object;
  #L192e28.  call temp:= `setProperty`(v4, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L192e2e.  goto L192e3c;
  #L192e30.  v4:= "http.nonProxyHosts" @kind object;
  #L192e34.  v0:= 0I;
  #L192e36.  call temp:= `setProperty`(v4, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L192e3c.  return @kind void;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `options`(`java.lang.CharSequence` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.options:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L190ff4.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L190ff8.  v1:= "OPTIONS" @kind object;
  #L190ffc.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/lang/CharSequence;Ljava/lang/String;)V` @kind direct;
  #L191002.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `options`(`java.net.URL` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.options:(Ljava/net/URL;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L191014.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L191018.  v1:= "OPTIONS" @kind object;
  #L19101c.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L191022.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `patch`(`java.lang.CharSequence` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.patch:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L191230.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L191234.  v1:= "PATCH" @kind object;
  #L191238.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/lang/CharSequence;Ljava/lang/String;)V` @kind direct;
  #L19123e.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `patch`(`java.lang.CharSequence` v0 @kind object, `java.util.Map` v1 @kind object, `boolean` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.patch:(Ljava/lang/CharSequence;Ljava/util/Map;Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L191280.  call temp:= `append`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;Ljava/util/Map;)Ljava/lang/String;` @kind static;
  #L191286.  v0:= temp @kind object;
  #L191288.  if v2 == 0 then goto L191294;
  #L19128c.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L191292.  v0:= temp @kind object;
  #L191294.  call temp:= `patch`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.patch:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L19129a.  v0:= temp @kind object;
  #L19129c.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `patch`(`java.lang.CharSequence` v0 @kind object, `boolean` v1 , `java.lang.Object`[] v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.patch:(Ljava/lang/CharSequence;Z[Ljava/lang/Object;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L191250.  call temp:= `append`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L191256.  v0:= temp @kind object;
  #L191258.  if v1 == 0 then goto L191264;
  #L19125c.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L191262.  v0:= temp @kind object;
  #L191264.  call temp:= `patch`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.patch:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L19126a.  v0:= temp @kind object;
  #L19126c.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `patch`(`java.net.URL` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.patch:(Ljava/net/URL;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1912b0.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L1912b4.  v1:= "PATCH" @kind object;
  #L1912b8.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L1912be.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `post`(`java.lang.CharSequence` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.post:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1912d0.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L1912d4.  v1:= "POST" @kind object;
  #L1912d8.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/lang/CharSequence;Ljava/lang/String;)V` @kind direct;
  #L1912de.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `post`(`java.lang.CharSequence` v0 @kind object, `java.util.Map` v1 @kind object, `boolean` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.post:(Ljava/lang/CharSequence;Ljava/util/Map;Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L191320.  call temp:= `append`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;Ljava/util/Map;)Ljava/lang/String;` @kind static;
  #L191326.  v0:= temp @kind object;
  #L191328.  if v2 == 0 then goto L191334;
  #L19132c.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L191332.  v0:= temp @kind object;
  #L191334.  call temp:= `post`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.post:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L19133a.  v0:= temp @kind object;
  #L19133c.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `post`(`java.lang.CharSequence` v0 @kind object, `boolean` v1 , `java.lang.Object`[] v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.post:(Ljava/lang/CharSequence;Z[Ljava/lang/Object;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1912f0.  call temp:= `append`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1912f6.  v0:= temp @kind object;
  #L1912f8.  if v1 == 0 then goto L191304;
  #L1912fc.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L191302.  v0:= temp @kind object;
  #L191304.  call temp:= `post`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.post:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L19130a.  v0:= temp @kind object;
  #L19130c.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `post`(`java.net.URL` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.post:(Ljava/net/URL;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L191350.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L191354.  v1:= "POST" @kind object;
  #L191358.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L19135e.  return v0 @kind object;
}
procedure `void` `proxyHost`(`java.lang.String` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.proxyHost:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L192e50.  v0:= "http.proxyHost" @kind object;
  #L192e54.  call temp:= `setProperty`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L192e5a.  v0:= "https.proxyHost" @kind object;
  #L192e5e.  call temp:= `setProperty`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L192e64.  return @kind void;
}
procedure `void` `proxyPort`(`int` v1 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.proxyPort:(I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L192e78.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L192e7e.  v1:= temp @kind object;
  #L192e80.  v0:= "http.proxyPort" @kind object;
  #L192e84.  call temp:= `setProperty`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L192e8a.  v0:= "https.proxyPort" @kind object;
  #L192e8e.  call temp:= `setProperty`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L192e94.  return @kind void;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `put`(`java.lang.CharSequence` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.put:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L191420.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L191424.  v1:= "PUT" @kind object;
  #L191428.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/lang/CharSequence;Ljava/lang/String;)V` @kind direct;
  #L19142e.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `put`(`java.lang.CharSequence` v0 @kind object, `java.util.Map` v1 @kind object, `boolean` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.put:(Ljava/lang/CharSequence;Ljava/util/Map;Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L191470.  call temp:= `append`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;Ljava/util/Map;)Ljava/lang/String;` @kind static;
  #L191476.  v0:= temp @kind object;
  #L191478.  if v2 == 0 then goto L191484;
  #L19147c.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L191482.  v0:= temp @kind object;
  #L191484.  call temp:= `put`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.put:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L19148a.  v0:= temp @kind object;
  #L19148c.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `put`(`java.lang.CharSequence` v0 @kind object, `boolean` v1 , `java.lang.Object`[] v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.put:(Ljava/lang/CharSequence;Z[Ljava/lang/Object;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L191440.  call temp:= `append`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.append:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L191446.  v0:= temp @kind object;
  #L191448.  if v1 == 0 then goto L191454;
  #L19144c.  call temp:= `encode`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.encode:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L191452.  v0:= temp @kind object;
  #L191454.  call temp:= `put`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.put:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind static;
  #L19145a.  v0:= temp @kind object;
  #L19145c.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `put`(`java.net.URL` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.put:(Ljava/net/URL;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1914a0.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L1914a4.  v1:= "PUT" @kind object;
  #L1914a8.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L1914ae.  return v0 @kind object;
}
procedure `void` `setConnectionFactory`(`com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` v0 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setConnectionFactory:(Lcom/github/kevinsawicki/http/HttpRequest$ConnectionFactory;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L192ea8.  if v0 != 0 then goto L192eb6;
  #L192eac.  v0:= `@@com.github.kevinsawicki.http.HttpRequest$ConnectionFactory.DEFAULT` @type ^`com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` @kind object;
  #L192eb0.  `@@com.github.kevinsawicki.http.HttpRequest.CONNECTION_FACTORY` @type ^`com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` := v0 @kind object;
  #L192eb4.  goto L192eba;
  #L192eb6.  `@@com.github.kevinsawicki.http.HttpRequest.CONNECTION_FACTORY` @type ^`com.github.kevinsawicki.http.HttpRequest$ConnectionFactory` := v0 @kind object;
  #L192eba.  return @kind void;
}
procedure `java.lang.String` `setProperty`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1922cc.  if v2 == 0 then goto L1922dc;
  #L1922d0.  v0:= new `com.github.kevinsawicki.http.HttpRequest$3`;
  #L1922d4.  call `<init>`(v0, v1, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$3;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1922da.  goto L1922e6;
  #L1922dc.  v0:= new `com.github.kevinsawicki.http.HttpRequest$4`;
  #L1922e0.  call `<init>`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$4;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1922e6.  call temp:= `doPrivileged`(v0) @signature `Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;` @kind static;
  #L1922ec.  v1:= temp @kind object;
  #L1922ee.  v1:= (`java.lang.String`) v1 @kind object;
  #L1922f2.  return v1 @kind object;
}
procedure `void` `setSSLCertMode`(`java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setSSLCertMode:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L192ecc.  v0:= "trustall" @kind object;
  #L192ed0.  if v2 != v0 then goto L192ef6;
  #L192ed4.  call temp:= `getNoopTrustManagers`() @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getNoopTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind static;
  #L192eda.  v0:= temp @kind object;
  #L192edc.  call temp:= `createSocketFactory`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.createSocketFactory:([Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L192ee2.  v0:= temp @kind object;
  #L192ee4.  `@@com.github.kevinsawicki.http.HttpRequest.SOCKET_FACTORY` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L192ee8.  call temp:= `getTrustedVerifier`() @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getTrustedVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind static;
  #L192eee.  v0:= temp @kind object;
  #L192ef0.  `@@com.github.kevinsawicki.http.HttpRequest.HOSTNAME_VERIFIER` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L192ef4.  goto L192f22;
  #L192ef6.  v0:= "pinned" @kind object;
  #L192efa.  v1:= 0I;
  #L192efc.  if v2 != v0 then goto L192f1a;
  #L192f00.  call temp:= `getPinnedTrustManagers`() @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getPinnedTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind static;
  #L192f06.  v0:= temp @kind object;
  #L192f08.  call temp:= `createSocketFactory`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.createSocketFactory:([Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L192f0e.  v0:= temp @kind object;
  #L192f10.  `@@com.github.kevinsawicki.http.HttpRequest.SOCKET_FACTORY` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L192f14.  `@@com.github.kevinsawicki.http.HttpRequest.HOSTNAME_VERIFIER` @type ^`javax.net.ssl.HostnameVerifier` := v1 @kind object;
  #L192f18.  goto L192f22;
  #L192f1a.  `@@com.github.kevinsawicki.http.HttpRequest.SOCKET_FACTORY` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L192f1e.  `@@com.github.kevinsawicki.http.HttpRequest.HOSTNAME_VERIFIER` @type ^`javax.net.ssl.HostnameVerifier` := v1 @kind object;
  #L192f22.  `@@com.github.kevinsawicki.http.HttpRequest.CURRENT_CERT_MODE` @type ^`java.lang.String` := v2 @kind object;
  #L192f26.  return @kind void;
  #L192f28.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L192f2a.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L192f2e.  call `<init>`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L192f34.  throw v0;
  catch `java.io.IOException` @[L192ecc..L192f26] goto L192f28;
}
procedure `void` `setupSecurity`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.setupSecurity:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L192f58.  call temp:= `getConnection`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L192f5e.  v0:= temp @kind object;
  #L192f60.  v1:= instanceof @variable v0 @type ^`javax.net.ssl.HttpsURLConnection` @kind boolean;
  #L192f64.  if v1 != 0 then goto L192f6a;
  #L192f68.  return @kind void;
  #L192f6a.  v1:= `@@com.github.kevinsawicki.http.HttpRequest.SOCKET_FACTORY` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L192f6e.  if v1 == 0 then goto L192f7e;
  #L192f72.  v2:= v0 @kind object;
  #L192f74.  v2:= (`javax.net.ssl.HttpsURLConnection`) v2 @kind object;
  #L192f78.  call `setSSLSocketFactory`(v2, v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.setSSLSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)V` @kind virtual;
  #L192f7e.  v1:= `@@com.github.kevinsawicki.http.HttpRequest.HOSTNAME_VERIFIER` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L192f82.  if v1 == 0 then goto L192f90;
  #L192f86.  v0:= (`javax.net.ssl.HttpsURLConnection`) v0 @kind object;
  #L192f8a.  call `setHostnameVerifier`(v0, v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.setHostnameVerifier:(Ljavax/net/ssl/HostnameVerifier;)V` @kind virtual;
  #L192f90.  return @kind void;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `trace`(`java.lang.CharSequence` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.trace:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19180c.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L191810.  v1:= "TRACE" @kind object;
  #L191814.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/lang/CharSequence;Ljava/lang/String;)V` @kind direct;
  #L19181a.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `trace`(`java.net.URL` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.trace:(Ljava/net/URL;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19182c.  v0:= new `com.github.kevinsawicki.http.HttpRequest`;
  #L191830.  v1:= "TRACE" @kind object;
  #L191834.  call `<init>`(v0, v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L19183a.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `accept`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.accept:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190648.  v0:= "Accept" @kind object;
  #L19064c.  call temp:= `header`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190652.  v2:= temp @kind object;
  #L190654.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `acceptCharset`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.acceptCharset:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190668.  v0:= "Accept-Charset" @kind object;
  #L19066c.  call temp:= `header`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190672.  v2:= temp @kind object;
  #L190674.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `acceptCharset`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String`[] v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.acceptCharset:([Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L190688.  v0:= "Accept-Charset" @kind object;
  #L19068c.  v1:= ", " @kind object;
  #L190690.  call temp:= `join`(v1, v3) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L190696.  v3:= temp @kind object;
  #L190698.  call temp:= `header`(v2, v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19069e.  v3:= temp @kind object;
  #L1906a0.  return v3 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `acceptEncoding`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.acceptEncoding:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1906b4.  v0:= "Accept-Encoding" @kind object;
  #L1906b8.  call temp:= `header`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1906be.  v2:= temp @kind object;
  #L1906c0.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `acceptGzipEncoding`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.acceptGzipEncoding:()Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1906d4.  v0:= "gzip" @kind object;
  #L1906d8.  call temp:= `acceptEncoding`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.acceptEncoding:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1906de.  v0:= temp @kind object;
  #L1906e0.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `acceptJson`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.acceptJson:()Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1906f4.  v0:= "application/json" @kind object;
  #L1906f8.  call temp:= `accept`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.accept:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1906fe.  v0:= temp @kind object;
  #L190700.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `authorization`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.authorization:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190714.  v0:= "Authorization" @kind object;
  #L190718.  call temp:= `header`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19071e.  v2:= temp @kind object;
  #L190720.  return v2 @kind object;
}
procedure `boolean` `badRequest`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.badRequest:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1904a4.  call temp:= `code`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @kind virtual;
  #L1904aa.  v0:= temp;
  #L1904ac.  v1:= 400I;
  #L1904b0.  if v1 != v0 then goto L1904b8;
  #L1904b4.  v0:= 1I;
  #L1904b6.  goto L1904ba;
  #L1904b8.  v0:= 0I;
  #L1904ba.  return v0;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `basic`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.basic:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L190734.  v0:= new `java.lang.StringBuilder`;
  #L190738.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19073e.  v1:= "Basic " @kind object;
  #L190742.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L190748.  v1:= new `java.lang.StringBuilder`;
  #L19074c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L190752.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L190758.  v3:= 58I;
  #L19075c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L190762.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L190768.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19076e.  v3:= temp @kind object;
  #L190770.  call temp:= `encode`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$Base64;.encode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L190776.  v3:= temp @kind object;
  #L190778.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19077e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L190784.  v3:= temp @kind object;
  #L190786.  call temp:= `authorization`(v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.authorization:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19078c.  v3:= temp @kind object;
  #L19078e.  return v3 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `body`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.util.concurrent.atomic.AtomicReference` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.body:(Ljava/util/concurrent/atomic/AtomicReference;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1907a0.  call temp:= `byteStream`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.byteStream:()Ljava/io/ByteArrayOutputStream;` @kind virtual;
  #L1907a6.  v0:= temp @kind object;
  #L1907a8.  call temp:= `buffer`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.buffer:()Ljava/io/BufferedInputStream;` @kind virtual;
  #L1907ae.  v1:= temp @kind object;
  #L1907b0.  call temp:= `copy`(v2, v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1907b6.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L1907bc.  v0:= temp @kind object;
  #L1907be.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L1907c4.  v0:= temp @kind object;
  #L1907c6.  call `set`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L1907cc.  return v2 @kind object;
  #L1907ce.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L1907d0.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L1907d4.  call `<init>`(v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1907da.  throw v0;
  catch `java.io.IOException` @[L1907a8..L1907cc] goto L1907ce;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `body`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.body:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L1907fc.  call temp:= `body`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.body:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L190802.  v2:= temp @kind object;
  #L190804.  call `set`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L19080a.  return v0 @kind object;
}
procedure `java.lang.String` `body`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.body:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191e48.  call temp:= `charset`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.charset:()Ljava/lang/String;` @kind virtual;
  #L191e4e.  v0:= temp @kind object;
  #L191e50.  call temp:= `body`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.body:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L191e56.  v0:= temp @kind object;
  #L191e58.  return v0 @kind object;
}
procedure `java.lang.String` `body`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.body:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L191e6c.  call temp:= `byteStream`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.byteStream:()Ljava/io/ByteArrayOutputStream;` @kind virtual;
  #L191e72.  v0:= temp @kind object;
  #L191e74.  call temp:= `buffer`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.buffer:()Ljava/io/BufferedInputStream;` @kind virtual;
  #L191e7a.  v1:= temp @kind object;
  #L191e7c.  call temp:= `copy`(v2, v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191e82.  call temp:= `getValidCharset`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getValidCharset:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L191e88.  v3:= temp @kind object;
  #L191e8a.  call temp:= `toString`(v0, v3) @signature `Ljava/io/ByteArrayOutputStream;.toString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L191e90.  v3:= temp @kind object;
  #L191e92.  return v3 @kind object;
  #L191e94.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L191e96.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L191e9a.  call `<init>`(v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191ea0.  throw v0;
  catch `java.io.IOException` @[L191e74..L191e92] goto L191e94;
}
procedure `java.io.BufferedInputStream` `buffer`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.buffer:()Ljava/io/BufferedInputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L191a60.  v0:= new `java.io.BufferedInputStream`;
  #L191a64.  call temp:= `stream`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.stream:()Ljava/io/InputStream;` @kind virtual;
  #L191a6a.  v1:= temp @kind object;
  #L191a6c.  v2:= v3.`com.github.kevinsawicki.http.HttpRequest.bufferSize` @type ^`int`;
  #L191a70.  call `<init>`(v0, v1, v2) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;I)V` @kind direct;
  #L191a76.  return v0 @kind object;
}
procedure `int` `bufferSize`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.bufferSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19199c.  v0:= v1.`com.github.kevinsawicki.http.HttpRequest.bufferSize` @type ^`int`;
  #L1919a0.  return v0;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `bufferSize`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `int` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.bufferSize:(I)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19081c.  v0:= 1I;
  #L19081e.  if v2 < v0 then goto L190828;
  #L190822.  v1.`com.github.kevinsawicki.http.HttpRequest.bufferSize` @type ^`int` := v2;
  #L190826.  return v1 @kind object;
  #L190828.  v2:= new `java.lang.IllegalArgumentException`;
  #L19082c.  v0:= "Size must be greater than zero" @kind object;
  #L190830.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L190836.  throw v2;
}
procedure `java.io.BufferedReader` `bufferedReader`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.bufferedReader:()Ljava/io/BufferedReader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191a88.  call temp:= `charset`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.charset:()Ljava/lang/String;` @kind virtual;
  #L191a8e.  v0:= temp @kind object;
  #L191a90.  call temp:= `bufferedReader`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.bufferedReader:(Ljava/lang/String;)Ljava/io/BufferedReader;` @kind virtual;
  #L191a96.  v0:= temp @kind object;
  #L191a98.  return v0 @kind object;
}
procedure `java.io.BufferedReader` `bufferedReader`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.bufferedReader:(Ljava/lang/String;)Ljava/io/BufferedReader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L191aac.  v0:= new `java.io.BufferedReader`;
  #L191ab0.  call temp:= `reader`(v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.reader:(Ljava/lang/String;)Ljava/io/InputStreamReader;` @kind virtual;
  #L191ab6.  v3:= temp @kind object;
  #L191ab8.  v1:= v2.`com.github.kevinsawicki.http.HttpRequest.bufferSize` @type ^`int`;
  #L191abc.  call `<init>`(v0, v3, v1) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;I)V` @kind direct;
  #L191ac2.  return v0 @kind object;
}
procedure `java.io.ByteArrayOutputStream` `byteStream`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.byteStream:()Ljava/io/ByteArrayOutputStream;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L191ad4.  call temp:= `contentLength`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentLength:()I` @kind virtual;
  #L191ada.  v0:= temp;
  #L191adc.  if v0 <= 0 then goto L191aec;
  #L191ae0.  v1:= new `java.io.ByteArrayOutputStream`;
  #L191ae4.  call `<init>`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L191aea.  return v1 @kind object;
  #L191aec.  v0:= new `java.io.ByteArrayOutputStream`;
  #L191af0.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L191af6.  return v0 @kind object;
}
procedure `byte`[] `bytes`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.bytes:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1905f8.  call temp:= `byteStream`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.byteStream:()Ljava/io/ByteArrayOutputStream;` @kind virtual;
  #L1905fe.  v0:= temp @kind object;
  #L190600.  call temp:= `buffer`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.buffer:()Ljava/io/BufferedInputStream;` @kind virtual;
  #L190606.  v1:= temp @kind object;
  #L190608.  call temp:= `copy`(v2, v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19060e.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L190614.  v0:= temp @kind object;
  #L190616.  return v0 @kind object;
  #L190618.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L19061a.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19061e.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L190624.  throw v1;
  catch `java.io.IOException` @[L190600..L19060e] goto L190618;
}
procedure `java.lang.String` `cacheControl`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.cacheControl:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191ec4.  v0:= "Cache-Control" @kind object;
  #L191ec8.  call temp:= `header`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L191ece.  v0:= temp @kind object;
  #L191ed0.  return v0 @kind object;
}
procedure `java.lang.String` `charset`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.charset:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L191ee4.  v0:= "Content-Type" @kind object;
  #L191ee8.  v1:= "charset" @kind object;
  #L191eec.  call temp:= `parameter`(v2, v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.parameter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L191ef2.  v0:= temp @kind object;
  #L191ef4.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `chunk`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `int` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.chunk:(I)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190848.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L19084e.  v0:= temp @kind object;
  #L190850.  call `setChunkedStreamingMode`(v0, v2) @signature `Ljava/net/HttpURLConnection;.setChunkedStreamingMode:(I)V` @kind virtual;
  #L190856.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `closeOutput`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.closeOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L190868.  v0:= 0I;
  #L19086a.  call temp:= `progress`(v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.progress:(Lcom/github/kevinsawicki/http/HttpRequest$UploadProgress;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190870.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L190874.  if v1 != 0 then goto L19087a;
  #L190878.  return v3 @kind object;
  #L19087a.  v2:= v3.`com.github.kevinsawicki.http.HttpRequest.multipart` @type ^`boolean` @kind boolean;
  #L19087e.  if v2 == 0 then goto L19088c;
  #L190882.  v2:= "\r\n--00content0boundary00--\r\n" @kind object;
  #L190886.  call temp:= `write`(v1, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;` @kind virtual;
  #L19088c.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` @kind boolean;
  #L190890.  if v1 == 0 then goto L1908a0;
  #L190894.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L190898.  call `close`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.close:()V` @kind virtual;
  #L19089e.  goto L1908aa;
  #L1908a0.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L1908a4.  call `close`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.close:()V` @kind virtual;
  #L1908aa.  v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` := v0 @kind object;
  #L1908ae.  return v3 @kind object;
  catch `java.io.IOException` @[L190894..L19089e] goto L1908aa;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `closeOutputQuietly`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.closeOutputQuietly:()Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1908d0.  call temp:= `closeOutput`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.closeOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1908d6.  v0:= temp @kind object;
  #L1908d8.  return v0 @kind object;
  #L1908da.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1908dc.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L1908e0.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1908e6.  throw v1;
  catch `java.io.IOException` @[L1908d0..L1908d8] goto L1908da;
}
procedure `int` `code`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1919b4.  call temp:= `closeOutput`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.closeOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1919ba.  call temp:= `getConnection`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L1919c0.  v0:= temp @kind object;
  #L1919c2.  call temp:= `getResponseCode`(v0) @signature `Ljava/net/HttpURLConnection;.getResponseCode:()I` @kind virtual;
  #L1919c8.  v0:= temp;
  #L1919ca.  return v0;
  #L1919cc.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1919ce.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L1919d2.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1919d8.  throw v1;
  catch `java.io.IOException` @[L1919b4..L1919ca] goto L1919cc;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `code`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.util.concurrent.atomic.AtomicInteger` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:(Ljava/util/concurrent/atomic/AtomicInteger;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190908.  call temp:= `code`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @kind virtual;
  #L19090e.  v0:= temp;
  #L190910.  call `set`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.set:(I)V` @kind virtual;
  #L190916.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `connectTimeout`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `int` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.connectTimeout:(I)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190928.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L19092e.  v0:= temp @kind object;
  #L190930.  call `setConnectTimeout`(v0, v2) @signature `Ljava/net/HttpURLConnection;.setConnectTimeout:(I)V` @kind virtual;
  #L190936.  return v1 @kind object;
}
procedure `java.lang.String` `contentEncoding`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentEncoding:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191f08.  v0:= "Content-Encoding" @kind object;
  #L191f0c.  call temp:= `header`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L191f12.  v0:= temp @kind object;
  #L191f14.  return v0 @kind object;
}
procedure `int` `contentLength`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1919fc.  v0:= "Content-Length" @kind object;
  #L191a00.  call temp:= `intHeader`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.intHeader:(Ljava/lang/String;)I` @kind virtual;
  #L191a06.  v0:= temp;
  #L191a08.  return v0;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `contentLength`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `int` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentLength:(I)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190948.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L19094e.  v0:= temp @kind object;
  #L190950.  call `setFixedLengthStreamingMode`(v0, v2) @signature `Ljava/net/HttpURLConnection;.setFixedLengthStreamingMode:(I)V` @kind virtual;
  #L190956.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `contentLength`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentLength:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L190968.  call temp:= `parseInt`(v1) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L19096e.  v1:= temp;
  #L190970.  call temp:= `contentLength`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentLength:(I)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190976.  v1:= temp @kind object;
  #L190978.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `contentType`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentType:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19098c.  v0:= 0I;
  #L19098e.  call temp:= `contentType`(v1, v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentType:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190994.  v2:= temp @kind object;
  #L190996.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `contentType`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentType:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1909a8.  if v4 == 0 then goto L1909ee;
  #L1909ac.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1909b2.  v0:= temp;
  #L1909b4.  if v0 <= 0 then goto L1909ee;
  #L1909b8.  v0:= "Content-Type" @kind object;
  #L1909bc.  v1:= new `java.lang.StringBuilder`;
  #L1909c0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1909c6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1909cc.  v3:= "; charset=" @kind object;
  #L1909d0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1909d6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1909dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1909e2.  v3:= temp @kind object;
  #L1909e4.  call temp:= `header`(v2, v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1909ea.  v3:= temp @kind object;
  #L1909ec.  return v3 @kind object;
  #L1909ee.  v4:= "Content-Type" @kind object;
  #L1909f2.  call temp:= `header`(v2, v4, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1909f8.  v3:= temp @kind object;
  #L1909fa.  return v3 @kind object;
}
procedure `java.lang.String` `contentType`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191f28.  v0:= "Content-Type" @kind object;
  #L191f2c.  call temp:= `header`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L191f32.  v0:= temp @kind object;
  #L191f34.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `copy`(`com.github.kevinsawicki.http.HttpRequest` v7 @kind this, `java.io.InputStream` v8 @kind object, `java.io.OutputStream` v9 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L190a0c.  v6:= new `com.github.kevinsawicki.http.HttpRequest$8`;
  #L190a10.  v3:= v7.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` @kind boolean;
  #L190a14.  v0:= v6 @kind object;
  #L190a16.  v1:= v7 @kind object;
  #L190a18.  v2:= v8 @kind object;
  #L190a1a.  v4:= v8 @kind object;
  #L190a1c.  v5:= v9 @kind object;
  #L190a1e.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/kevinsawicki/http/HttpRequest$8;.<init>:(Lcom/github/kevinsawicki/http/HttpRequest;Ljava/io/Closeable;ZLjava/io/InputStream;Ljava/io/OutputStream;)V` @kind direct;
  #L190a24.  call temp:= `call`(v6) @signature `Lcom/github/kevinsawicki/http/HttpRequest$8;.call:()Ljava/lang/Object;` @kind virtual;
  #L190a2a.  v8:= temp @kind object;
  #L190a2c.  v8:= (`com.github.kevinsawicki.http.HttpRequest`) v8 @kind object;
  #L190a30.  return v8 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `copy`(`com.github.kevinsawicki.http.HttpRequest` v7 @kind this, `java.io.Reader` v8 @kind object, `java.io.Writer` v9 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.copy:(Ljava/io/Reader;Ljava/io/Writer;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L190a44.  v6:= new `com.github.kevinsawicki.http.HttpRequest$9`;
  #L190a48.  v3:= v7.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` @kind boolean;
  #L190a4c.  v0:= v6 @kind object;
  #L190a4e.  v1:= v7 @kind object;
  #L190a50.  v2:= v8 @kind object;
  #L190a52.  v4:= v8 @kind object;
  #L190a54.  v5:= v9 @kind object;
  #L190a56.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/kevinsawicki/http/HttpRequest$9;.<init>:(Lcom/github/kevinsawicki/http/HttpRequest;Ljava/io/Closeable;ZLjava/io/Reader;Ljava/io/Writer;)V` @kind direct;
  #L190a5c.  call temp:= `call`(v6) @signature `Lcom/github/kevinsawicki/http/HttpRequest$9;.call:()Ljava/lang/Object;` @kind virtual;
  #L190a62.  v8:= temp @kind object;
  #L190a64.  v8:= (`com.github.kevinsawicki.http.HttpRequest`) v8 @kind object;
  #L190a68.  return v8 @kind object;
}
procedure `boolean` `created`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.created:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1904cc.  call temp:= `code`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @kind virtual;
  #L1904d2.  v0:= temp;
  #L1904d4.  v1:= 201I;
  #L1904d8.  if v1 != v0 then goto L1904e0;
  #L1904dc.  v0:= 1I;
  #L1904de.  goto L1904e2;
  #L1904e0.  v0:= 0I;
  #L1904e2.  return v0;
}
procedure `long` `date`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.date:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192b40.  v0:= "Date" @kind object;
  #L192b44.  call temp:= `dateHeader`(v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.dateHeader:(Ljava/lang/String;)J` @kind virtual;
  #L192b4a.  v0:= temp @kind wide;
  #L192b4c.  return v0 @kind wide;
}
procedure `long` `dateHeader`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.dateHeader:(Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192b60.  v0:= -1L;
  #L192b64.  call temp:= `dateHeader`(v2, v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.dateHeader:(Ljava/lang/String;J)J` @kind virtual;
  #L192b6a.  v0:= temp @kind wide;
  #L192b6c.  return v0 @kind wide;
}
procedure `long` `dateHeader`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `long` v3 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.dateHeader:(Ljava/lang/String;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192b80.  call temp:= `closeOutputQuietly`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.closeOutputQuietly:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L192b86.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L192b8c.  v0:= temp @kind object;
  #L192b8e.  call temp:= `getHeaderFieldDate`(v0, v2, v3) @signature `Ljava/net/HttpURLConnection;.getHeaderFieldDate:(Ljava/lang/String;J)J` @kind virtual;
  #L192b94.  v2:= temp @kind wide;
  #L192b96.  return v2 @kind wide;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `disconnect`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.disconnect:()Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190b1c.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L190b22.  v0:= temp @kind object;
  #L190b24.  call `disconnect`(v0) @signature `Ljava/net/HttpURLConnection;.disconnect:()V` @kind virtual;
  #L190b2a.  return v1 @kind object;
}
procedure `java.lang.String` `eTag`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.eTag:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191f48.  v0:= "ETag" @kind object;
  #L191f4c.  call temp:= `header`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L191f52.  v0:= temp @kind object;
  #L191f54.  return v0 @kind object;
}
procedure `long` `expires`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.expires:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192ba8.  v0:= "Expires" @kind object;
  #L192bac.  call temp:= `dateHeader`(v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.dateHeader:(Ljava/lang/String;)J` @kind virtual;
  #L192bb2.  v0:= temp @kind wide;
  #L192bb4.  return v0 @kind wide;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `followRedirects`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `boolean` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.followRedirects:(Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190b3c.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L190b42.  v0:= temp @kind object;
  #L190b44.  call `setInstanceFollowRedirects`(v0, v2) @signature `Ljava/net/HttpURLConnection;.setInstanceFollowRedirects:(Z)V` @kind virtual;
  #L190b4a.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `form`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190b5c.  v0:= "UTF-8" @kind object;
  #L190b60.  call temp:= `form`(v1, v2, v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190b66.  v2:= temp @kind object;
  #L190b68.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `form`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L190b7c.  v0:= v3.`com.github.kevinsawicki.http.HttpRequest.form` @type ^`boolean` @kind boolean;
  #L190b80.  v1:= 1I;
  #L190b82.  v0:= v0 ^~ v1 @kind int;
  #L190b84.  if v0 == 0 then goto L190b96;
  #L190b88.  v2:= "application/x-www-form-urlencoded" @kind object;
  #L190b8c.  call temp:= `contentType`(v3, v2, v6) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentType:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190b92.  v3.`com.github.kevinsawicki.http.HttpRequest.form` @type ^`boolean` := v1 @kind boolean;
  #L190b96.  call temp:= `getValidCharset`(v6) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getValidCharset:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L190b9c.  v6:= temp @kind object;
  #L190b9e.  call temp:= `openOutput`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.openOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190ba4.  if v0 != 0 then goto L190bb6;
  #L190ba8.  v0:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L190bac.  v1:= 38I;
  #L190bb0.  call `write`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(I)V` @kind virtual;
  #L190bb6.  v0:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L190bba.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L190bc0.  v4:= temp @kind object;
  #L190bc2.  call temp:= `encode`(v4, v6) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L190bc8.  v4:= temp @kind object;
  #L190bca.  call temp:= `write`(v0, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;` @kind virtual;
  #L190bd0.  v4:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L190bd4.  v0:= 61I;
  #L190bd8.  call `write`(v4, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(I)V` @kind virtual;
  #L190bde.  if v5 == 0 then goto L190bfc;
  #L190be2.  v4:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L190be6.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L190bec.  v5:= temp @kind object;
  #L190bee.  call temp:= `encode`(v5, v6) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L190bf4.  v5:= temp @kind object;
  #L190bf6.  call temp:= `write`(v4, v5) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;` @kind virtual;
  #L190bfc.  return v3 @kind object;
  #L190bfe.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L190c00.  v5:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L190c04.  call `<init>`(v5, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L190c0a.  throw v5;
  catch `java.io.IOException` @[L190b9e..L190bfc] goto L190bfe;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `form`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/util/Map$Entry;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190c2c.  v0:= "UTF-8" @kind object;
  #L190c30.  call temp:= `form`(v1, v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/util/Map$Entry;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190c36.  v2:= temp @kind object;
  #L190c38.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `form`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.util.Map$Entry` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/util/Map$Entry;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190c4c.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L190c52.  v0:= temp @kind object;
  #L190c54.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L190c5a.  v2:= temp @kind object;
  #L190c5c.  call temp:= `form`(v1, v0, v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190c62.  v2:= temp @kind object;
  #L190c64.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `form`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/util/Map;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190c78.  v0:= "UTF-8" @kind object;
  #L190c7c.  call temp:= `form`(v1, v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/util/Map;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190c82.  v2:= temp @kind object;
  #L190c84.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `form`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.util.Map` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/util/Map;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190c98.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L190c9e.  v0:= temp;
  #L190ca0.  if v0 != 0 then goto L190cd4;
  #L190ca4.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L190caa.  v2:= temp @kind object;
  #L190cac.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L190cb2.  v2:= temp @kind object;
  #L190cb4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L190cba.  v0:= temp;
  #L190cbc.  if v0 == 0 then goto L190cd4;
  #L190cc0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L190cc6.  v0:= temp @kind object;
  #L190cc8.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L190ccc.  call temp:= `form`(v1, v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.form:(Ljava/util/Map$Entry;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190cd2.  goto L190cb4;
  #L190cd4.  return v1 @kind object;
}
procedure `java.net.HttpURLConnection` `getConnection`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1925dc.  v0:= v1.`com.github.kevinsawicki.http.HttpRequest.connection` @type ^`java.net.HttpURLConnection` @kind object;
  #L1925e0.  if v0 != 0 then goto L1925f0;
  #L1925e4.  call temp:= `createConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.createConnection:()Ljava/net/HttpURLConnection;` @kind direct;
  #L1925ea.  v0:= temp @kind object;
  #L1925ec.  v1.`com.github.kevinsawicki.http.HttpRequest.connection` @type ^`java.net.HttpURLConnection` := v0 @kind object;
  #L1925f0.  v0:= v1.`com.github.kevinsawicki.http.HttpRequest.connection` @type ^`java.net.HttpURLConnection` @kind object;
  #L1925f4.  return v0 @kind object;
}
procedure `java.lang.String` `getParam`(`com.github.kevinsawicki.http.HttpRequest` v8 @kind this, `java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getParam:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1920b4.  v0:= 0I;
  #L1920b6.  if v9 == 0 then goto L192198;
  #L1920ba.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1920c0.  v1:= temp;
  #L1920c2.  if v1 != 0 then goto L1920c8;
  #L1920c6.  goto L192198;
  #L1920c8.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1920ce.  v1:= temp;
  #L1920d0.  v2:= 59I;
  #L1920d4.  call temp:= `indexOf`(v9, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1920da.  v3:= temp;
  #L1920dc.  v4:= 1I;
  #L1920de.  v3:= v3 + v4 @kind int;
  #L1920e0.  if v3 == 0 then goto L192196;
  #L1920e4.  if v3 != v1 then goto L1920ea;
  #L1920e8.  goto L192196;
  #L1920ea.  call temp:= `indexOf`(v9, v2, v3) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L1920f0.  v5:= temp;
  #L1920f2.  v6:= -1I;
  #L1920f4.  if v5 != v6 then goto L1920fa;
  #L1920f8.  v5:= v1;
  #L1920fa.  if v3 >= v5 then goto L192194;
  #L1920fe.  v7:= 61I;
  #L192102.  call temp:= `indexOf`(v9, v7, v3) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L192108.  v7:= temp;
  #L19210a.  if v7 == v6 then goto L192180;
  #L19210e.  if v7 >= v5 then goto L192180;
  #L192112.  call temp:= `substring`(v9, v3, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L192118.  v3:= temp @kind object;
  #L19211a.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L192120.  v3:= temp @kind object;
  #L192122.  call temp:= `equals`(v10, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L192128.  v3:= temp;
  #L19212a.  if v3 == 0 then goto L192180;
  #L19212e.  v7:= v7 + 1;
  #L192132.  call temp:= `substring`(v9, v7, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L192138.  v3:= temp @kind object;
  #L19213a.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L192140.  v3:= temp @kind object;
  #L192142.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L192148.  v7:= temp;
  #L19214a.  if v7 == 0 then goto L192180;
  #L19214e.  v9:= 2I;
  #L192150.  if v7 <= v9 then goto L19217e;
  #L192154.  v9:= 0I;
  #L192156.  call temp:= `charAt`(v3, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19215c.  v9:= temp;
  #L19215e.  v10:= 34I;
  #L192162.  if v10 != v9 then goto L19217e;
  #L192166.  v7:= v7 - v4 @kind int;
  #L192168.  call temp:= `charAt`(v3, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19216e.  v9:= temp;
  #L192170.  if v10 != v9 then goto L19217e;
  #L192174.  call temp:= `substring`(v3, v4, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19217a.  v9:= temp @kind object;
  #L19217c.  return v9 @kind object;
  #L19217e.  return v3 @kind object;
  #L192180.  v3:= v5 + 1;
  #L192184.  call temp:= `indexOf`(v9, v2, v3) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19218a.  v5:= temp;
  #L19218c.  if v5 != v6 then goto L1920fa;
  #L192190.  v5:= v1;
  #L192192.  goto L1920fa;
  #L192194.  return v0 @kind object;
  #L192196.  return v0 @kind object;
  #L192198.  return v0 @kind object;
}
procedure `java.util.Map` `getParams`(`com.github.kevinsawicki.http.HttpRequest` v11 @kind this, `java.lang.String` v12 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getParams:(Ljava/lang/String;)Ljava/util/Map;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1927e4.  if v12 == 0 then goto L1928e6;
  #L1927e8.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1927ee.  v0:= temp;
  #L1927f0.  if v0 != 0 then goto L1927f8;
  #L1927f4.  goto L1928e6;
  #L1927f8.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1927fe.  v0:= temp;
  #L192800.  v1:= 59I;
  #L192804.  call temp:= `indexOf`(v12, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19280a.  v2:= temp;
  #L19280c.  v3:= 1I;
  #L19280e.  v2:= v2 + v3 @kind int;
  #L192810.  if v2 == 0 then goto L1928dc;
  #L192814.  if v2 != v0 then goto L19281a;
  #L192818.  goto L1928dc;
  #L19281a.  call temp:= `indexOf`(v12, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L192820.  v4:= temp;
  #L192822.  v5:= -1I;
  #L192824.  if v4 != v5 then goto L19282a;
  #L192828.  v4:= v0;
  #L19282a.  v6:= new `java.util.LinkedHashMap`;
  #L19282e.  call `<init>`(v6) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L192834.  if v2 >= v4 then goto L1928da;
  #L192838.  v7:= 61I;
  #L19283c.  call temp:= `indexOf`(v12, v7, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L192842.  v7:= temp;
  #L192844.  if v7 == v5 then goto L1928c6;
  #L192848.  if v7 >= v4 then goto L1928c6;
  #L19284c.  call temp:= `substring`(v12, v2, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L192852.  v2:= temp @kind object;
  #L192854.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L19285a.  v2:= temp @kind object;
  #L19285c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L192862.  v8:= temp;
  #L192864.  if v8 <= 0 then goto L1928c6;
  #L192868.  v7:= v7 + 1;
  #L19286c.  call temp:= `substring`(v12, v7, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L192872.  v7:= temp @kind object;
  #L192874.  call temp:= `trim`(v7) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L19287a.  v7:= temp @kind object;
  #L19287c.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L192882.  v8:= temp;
  #L192884.  if v8 == 0 then goto L1928c6;
  #L192888.  v9:= 2I;
  #L19288a.  if v8 <= v9 then goto L1928c0;
  #L19288e.  v9:= 0I;
  #L192890.  call temp:= `charAt`(v7, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L192896.  v9:= temp;
  #L192898.  v10:= 34I;
  #L19289c.  if v10 != v9 then goto L1928c0;
  #L1928a0.  v8:= v8 + -1;
  #L1928a4.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1928aa.  v9:= temp;
  #L1928ac.  if v10 != v9 then goto L1928c0;
  #L1928b0.  call temp:= `substring`(v7, v3, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1928b6.  v7:= temp @kind object;
  #L1928b8.  call temp:= `put`(v6, v2, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1928be.  goto L1928c6;
  #L1928c0.  call temp:= `put`(v6, v2, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1928c6.  v2:= v4 + 1;
  #L1928ca.  call temp:= `indexOf`(v12, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L1928d0.  v4:= temp;
  #L1928d2.  if v4 != v5 then goto L192834;
  #L1928d6.  v4:= v0;
  #L1928d8.  goto L192834;
  #L1928da.  return v6 @kind object;
  #L1928dc.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L1928e2.  v12:= temp @kind object;
  #L1928e4.  return v12 @kind object;
  #L1928e6.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L1928ec.  v12:= temp @kind object;
  #L1928ee.  return v12 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `header`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Number` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/Number;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L190e28.  if v2 == 0 then goto L190e36;
  #L190e2c.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L190e32.  v2:= temp @kind object;
  #L190e34.  goto L190e38;
  #L190e36.  v2:= 0I;
  #L190e38.  call temp:= `header`(v0, v1, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190e3e.  v1:= temp @kind object;
  #L190e40.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `header`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190e54.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L190e5a.  v0:= temp @kind object;
  #L190e5c.  call `setRequestProperty`(v0, v2, v3) @signature `Ljava/net/HttpURLConnection;.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L190e62.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `header`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/util/Map$Entry;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190e74.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L190e7a.  v0:= temp @kind object;
  #L190e7c.  v0:= (`java.lang.String`) v0 @kind object;
  #L190e80.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L190e86.  v2:= temp @kind object;
  #L190e88.  v2:= (`java.lang.String`) v2 @kind object;
  #L190e8c.  call temp:= `header`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190e92.  v2:= temp @kind object;
  #L190e94.  return v2 @kind object;
}
procedure `java.lang.String` `header`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1921d4.  call temp:= `closeOutputQuietly`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.closeOutputQuietly:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1921da.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L1921e0.  v0:= temp @kind object;
  #L1921e2.  call temp:= `getHeaderField`(v0, v2) @signature `Ljava/net/HttpURLConnection;.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1921e8.  v2:= temp @kind object;
  #L1921ea.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `headers`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.headers:(Ljava/util/Map;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190ea8.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L190eae.  v0:= temp;
  #L190eb0.  if v0 != 0 then goto L190ee4;
  #L190eb4.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L190eba.  v2:= temp @kind object;
  #L190ebc.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L190ec2.  v2:= temp @kind object;
  #L190ec4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L190eca.  v0:= temp;
  #L190ecc.  if v0 == 0 then goto L190ee4;
  #L190ed0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L190ed6.  v0:= temp @kind object;
  #L190ed8.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L190edc.  call temp:= `header`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/util/Map$Entry;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190ee2.  goto L190ec4;
  #L190ee4.  return v1 @kind object;
}
procedure `java.util.Map` `headers`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.headers:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192900.  call temp:= `closeOutputQuietly`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.closeOutputQuietly:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L192906.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L19290c.  v0:= temp @kind object;
  #L19290e.  call temp:= `getHeaderFields`(v0) @signature `Ljava/net/HttpURLConnection;.getHeaderFields:()Ljava/util/Map;` @kind virtual;
  #L192914.  v0:= temp @kind object;
  #L192916.  return v0 @kind object;
}
procedure `java.lang.String`[] `headers`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.headers:(Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192504.  call temp:= `headers`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.headers:()Ljava/util/Map;` @kind virtual;
  #L19250a.  v0:= temp @kind object;
  #L19250c.  if v0 == 0 then goto L19255a;
  #L192510.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L192516.  v1:= temp;
  #L192518.  if v1 == 0 then goto L19251e;
  #L19251c.  goto L19255a;
  #L19251e.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L192524.  v3:= temp @kind object;
  #L192526.  v3:= (`java.util.List`) v3 @kind object;
  #L19252a.  if v3 == 0 then goto L192554;
  #L19252e.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L192534.  v0:= temp;
  #L192536.  if v0 != 0 then goto L192554;
  #L19253a.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L192540.  v0:= temp;
  #L192542.  v0:= new `java.lang.String`[v0];
  #L192546.  call temp:= `toArray`(v3, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L19254c.  v3:= temp @kind object;
  #L19254e.  v3:= (`java.lang.String`[]) v3 @kind object;
  #L192552.  return v3 @kind object;
  #L192554.  v3:= `@@com.github.kevinsawicki.http.HttpRequest.EMPTY_STRINGS` @type ^`java.lang.String`[] @kind object;
  #L192558.  return v3 @kind object;
  #L19255a.  v3:= `@@com.github.kevinsawicki.http.HttpRequest.EMPTY_STRINGS` @type ^`java.lang.String`[] @kind object;
  #L19255e.  return v3 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `ifModifiedSince`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `long` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.ifModifiedSince:(J)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190ef8.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L190efe.  v0:= temp @kind object;
  #L190f00.  call `setIfModifiedSince`(v0, v2) @signature `Ljava/net/HttpURLConnection;.setIfModifiedSince:(J)V` @kind virtual;
  #L190f06.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `ifNoneMatch`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.ifNoneMatch:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190f18.  v0:= "If-None-Match" @kind object;
  #L190f1c.  call temp:= `header`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L190f22.  v2:= temp @kind object;
  #L190f24.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `ignoreCloseExceptions`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.ignoreCloseExceptions:(Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L190f38.  v0.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` := v1 @kind boolean;
  #L190f3c.  return v0 @kind object;
}
procedure `boolean` `ignoreCloseExceptions`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.ignoreCloseExceptions:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1904f4.  v0:= v1.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` @kind boolean;
  #L1904f8.  return v0;
}
procedure `int` `intHeader`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.intHeader:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191a1c.  v0:= -1I;
  #L191a1e.  call temp:= `intHeader`(v1, v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.intHeader:(Ljava/lang/String;I)I` @kind virtual;
  #L191a24.  v2:= temp;
  #L191a26.  return v2;
}
procedure `int` `intHeader`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.intHeader:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191a38.  call temp:= `closeOutputQuietly`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.closeOutputQuietly:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191a3e.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L191a44.  v0:= temp @kind object;
  #L191a46.  call temp:= `getHeaderFieldInt`(v0, v2, v3) @signature `Ljava/net/HttpURLConnection;.getHeaderFieldInt:(Ljava/lang/String;I)I` @kind virtual;
  #L191a4c.  v2:= temp;
  #L191a4e.  return v2;
}
procedure `boolean` `isBodyEmpty`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.isBodyEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19050c.  call temp:= `contentLength`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentLength:()I` @kind virtual;
  #L190512.  v0:= temp;
  #L190514.  if v0 != 0 then goto L19051c;
  #L190518.  v0:= 1I;
  #L19051a.  goto L19051e;
  #L19051c.  v0:= 0I;
  #L19051e.  return v0;
}
procedure `long` `lastModified`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.lastModified:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192bc8.  v0:= "Last-Modified" @kind object;
  #L192bcc.  call temp:= `dateHeader`(v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.dateHeader:(Ljava/lang/String;)J` @kind virtual;
  #L192bd2.  v0:= temp @kind wide;
  #L192bd4.  return v0 @kind wide;
}
procedure `java.lang.String` `location`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.location:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1921fc.  v0:= "Location" @kind object;
  #L192200.  call temp:= `header`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L192206.  v0:= temp @kind object;
  #L192208.  return v0 @kind object;
}
procedure `java.lang.String` `message`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19221c.  call temp:= `closeOutput`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.closeOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L192222.  call temp:= `getConnection`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L192228.  v0:= temp @kind object;
  #L19222a.  call temp:= `getResponseMessage`(v0) @signature `Ljava/net/HttpURLConnection;.getResponseMessage:()Ljava/lang/String;` @kind virtual;
  #L192230.  v0:= temp @kind object;
  #L192232.  return v0 @kind object;
  #L192234.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L192236.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19223a.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L192240.  throw v1;
  catch `java.io.IOException` @[L19221c..L192232] goto L192234;
}
procedure `java.lang.String` `method`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.method:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192264.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L19226a.  v0:= temp @kind object;
  #L19226c.  call temp:= `getRequestMethod`(v0) @signature `Ljava/net/HttpURLConnection;.getRequestMethod:()Ljava/lang/String;` @kind virtual;
  #L192272.  v0:= temp @kind object;
  #L192274.  return v0 @kind object;
}
procedure `boolean` `noContent`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.noContent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L190530.  call temp:= `code`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @kind virtual;
  #L190536.  v0:= temp;
  #L190538.  v1:= 204I;
  #L19053c.  if v1 != v0 then goto L190544;
  #L190540.  v0:= 1I;
  #L190542.  goto L190546;
  #L190544.  v0:= 0I;
  #L190546.  return v0;
}
procedure `boolean` `notFound`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.notFound:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L190558.  call temp:= `code`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @kind virtual;
  #L19055e.  v0:= temp;
  #L190560.  v1:= 404I;
  #L190564.  if v1 != v0 then goto L19056c;
  #L190568.  v0:= 1I;
  #L19056a.  goto L19056e;
  #L19056c.  v0:= 0I;
  #L19056e.  return v0;
}
procedure `boolean` `notModified`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.notModified:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L190580.  call temp:= `code`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @kind virtual;
  #L190586.  v0:= temp;
  #L190588.  v1:= 304I;
  #L19058c.  if v1 != v0 then goto L190594;
  #L190590.  v0:= 1I;
  #L190592.  goto L190596;
  #L190594.  v0:= 0I;
  #L190596.  return v0;
}
procedure `boolean` `ok`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.ok:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1905a8.  call temp:= `code`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @kind virtual;
  #L1905ae.  v0:= temp;
  #L1905b0.  v1:= 200I;
  #L1905b4.  if v1 != v0 then goto L1905bc;
  #L1905b8.  v0:= 1I;
  #L1905ba.  goto L1905be;
  #L1905bc.  v0:= 0I;
  #L1905be.  return v0;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `openOutput`(`com.github.kevinsawicki.http.HttpRequest` v4 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.openOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L190f84.  v0:= v4.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L190f88.  if v0 == 0 then goto L190f8e;
  #L190f8c.  return v4 @kind object;
  #L190f8e.  call temp:= `getConnection`(v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L190f94.  v0:= temp @kind object;
  #L190f96.  v1:= 1I;
  #L190f98.  call `setDoOutput`(v0, v1) @signature `Ljava/net/HttpURLConnection;.setDoOutput:(Z)V` @kind virtual;
  #L190f9e.  call temp:= `getConnection`(v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L190fa4.  v0:= temp @kind object;
  #L190fa6.  v1:= "Content-Type" @kind object;
  #L190faa.  call temp:= `getRequestProperty`(v0, v1) @signature `Ljava/net/HttpURLConnection;.getRequestProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L190fb0.  v0:= temp @kind object;
  #L190fb2.  v1:= "charset" @kind object;
  #L190fb6.  call temp:= `getParam`(v4, v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getParam:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L190fbc.  v0:= temp @kind object;
  #L190fbe.  v1:= new `com.github.kevinsawicki.http.HttpRequest$RequestOutputStream`;
  #L190fc2.  call temp:= `getConnection`(v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L190fc8.  v2:= temp @kind object;
  #L190fca.  call temp:= `getOutputStream`(v2) @signature `Ljava/net/HttpURLConnection;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L190fd0.  v2:= temp @kind object;
  #L190fd2.  v3:= v4.`com.github.kevinsawicki.http.HttpRequest.bufferSize` @type ^`int`;
  #L190fd6.  call `<init>`(v1, v2, v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;I)V` @kind direct;
  #L190fdc.  v4.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` := v1 @kind object;
  #L190fe0.  return v4 @kind object;
}
procedure `java.lang.String` `parameter`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.parameter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L192288.  call temp:= `header`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19228e.  v1:= temp @kind object;
  #L192290.  call temp:= `getParam`(v0, v1, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getParam:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L192296.  v1:= temp @kind object;
  #L192298.  return v1 @kind object;
}
procedure `java.util.Map` `parameters`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.parameters:(Ljava/lang/String;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;

  #L192928.  call temp:= `header`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19292e.  v1:= temp @kind object;
  #L192930.  call temp:= `getParams`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getParams:(Ljava/lang/String;)Ljava/util/Map;` @kind virtual;
  #L192936.  v1:= temp @kind object;
  #L192938.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/io/File;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191034.  v0:= 0I;
  #L191036.  call temp:= `part`(v1, v2, v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19103c.  v2:= temp @kind object;
  #L19103e.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `java.io.InputStream` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/io/InputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191050.  v0:= 0I;
  #L191052.  call temp:= `part`(v1, v2, v0, v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191058.  v2:= temp @kind object;
  #L19105a.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Number` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/Number;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19106c.  v0:= 0I;
  #L19106e.  call temp:= `part`(v1, v2, v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Number;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191074.  v2:= temp @kind object;
  #L191076.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191088.  v0:= 0I;
  #L19108a.  call temp:= `part`(v1, v2, v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191090.  v2:= temp @kind object;
  #L191092.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.io.File` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1910a4.  v0:= 0I;
  #L1910a6.  call temp:= `part`(v1, v2, v3, v0, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1910ac.  v2:= temp @kind object;
  #L1910ae.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Number` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Number;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L1910c0.  if v3 == 0 then goto L1910ce;
  #L1910c4.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1910ca.  v3:= temp @kind object;
  #L1910cc.  goto L1910d0;
  #L1910ce.  v3:= 0I;
  #L1910d0.  call temp:= `part`(v0, v1, v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1910d6.  v1:= temp @kind object;
  #L1910d8.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1910ec.  v0:= 0I;
  #L1910ee.  call temp:= `part`(v1, v2, v3, v0, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1910f4.  v2:= temp @kind object;
  #L1910f6.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `java.io.File` v7 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L191108.  v0:= new `java.io.BufferedInputStream`;
  #L19110c.  v1:= new `java.io.FileInputStream`;
  #L191110.  call `<init>`(v1, v7) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L191116.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L19111c.  call temp:= `length`(v7) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L191122.  v1:= temp @kind wide;
  #L191124.  call temp:= `incrementTotalSize`(v3, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.incrementTotalSize:(J)Lcom/github/kevinsawicki/http/HttpRequest;` @kind direct;
  #L19112a.  call temp:= `part`(v3, v4, v5, v6, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191130.  v4:= temp @kind object;
  #L191132.  return v4 @kind object;
  #L191134.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L191136.  v5:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19113a.  call `<init>`(v5, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191140.  throw v5;
  catch `java.io.IOException` @[L191108..L19112a] goto L191134;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.io.InputStream` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L191164.  call temp:= `startPart`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.startPart:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19116a.  call temp:= `writePartHeader`(v0, v1, v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.writePartHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191170.  v1:= v0.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L191174.  call temp:= `copy`(v0, v4, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19117a.  return v0 @kind object;
  #L19117c.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L19117e.  v2:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L191182.  call `<init>`(v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191188.  throw v2;
  catch `java.io.IOException` @[L191164..L19117a] goto L19117c;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `part`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.part:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L1911ac.  call temp:= `startPart`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.startPart:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1911b2.  call temp:= `writePartHeader`(v0, v1, v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.writePartHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1911b8.  v1:= v0.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L1911bc.  call temp:= `write`(v1, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;` @kind virtual;
  #L1911c2.  return v0 @kind object;
  #L1911c4.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1911c6.  v2:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L1911ca.  call `<init>`(v2, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1911d0.  throw v2;
  catch `java.io.IOException` @[L1911ac..L1911c2] goto L1911c4;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `partHeader`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.partHeader:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1911f4.  call temp:= `send`(v1, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1911fa.  v2:= temp @kind object;
  #L1911fc.  v0:= ": " @kind object;
  #L191200.  call temp:= `send`(v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191206.  v2:= temp @kind object;
  #L191208.  call temp:= `send`(v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19120e.  v2:= temp @kind object;
  #L191210.  v3:= "\r\n" @kind object;
  #L191214.  call temp:= `send`(v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19121a.  v2:= temp @kind object;
  #L19121c.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `progress`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `com.github.kevinsawicki.http.HttpRequest$UploadProgress` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.progress:(Lcom/github/kevinsawicki/http/HttpRequest$UploadProgress;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L191370.  if v1 != 0 then goto L19137e;
  #L191374.  v1:= `@@com.github.kevinsawicki.http.HttpRequest$UploadProgress.DEFAULT` @type ^`com.github.kevinsawicki.http.HttpRequest$UploadProgress` @kind object;
  #L191378.  v0.`com.github.kevinsawicki.http.HttpRequest.progress` @type ^`com.github.kevinsawicki.http.HttpRequest$UploadProgress` := v1 @kind object;
  #L19137c.  goto L191382;
  #L19137e.  v0.`com.github.kevinsawicki.http.HttpRequest.progress` @type ^`com.github.kevinsawicki.http.HttpRequest$UploadProgress` := v1 @kind object;
  #L191382.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `proxyAuthorization`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.proxyAuthorization:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191394.  v0:= "Proxy-Authorization" @kind object;
  #L191398.  call temp:= `header`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19139e.  v2:= temp @kind object;
  #L1913a0.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `proxyBasic`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.proxyBasic:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1913b4.  v0:= new `java.lang.StringBuilder`;
  #L1913b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1913be.  v1:= "Basic " @kind object;
  #L1913c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1913c8.  v1:= new `java.lang.StringBuilder`;
  #L1913cc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1913d2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1913d8.  v3:= 58I;
  #L1913dc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1913e2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1913e8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1913ee.  v3:= temp @kind object;
  #L1913f0.  call temp:= `encode`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$Base64;.encode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1913f6.  v3:= temp @kind object;
  #L1913f8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1913fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L191404.  v3:= temp @kind object;
  #L191406.  call temp:= `proxyAuthorization`(v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.proxyAuthorization:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19140c.  v3:= temp @kind object;
  #L19140e.  return v3 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `readTimeout`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `int` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.readTimeout:(I)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1914c0.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L1914c6.  v0:= temp @kind object;
  #L1914c8.  call `setReadTimeout`(v0, v2) @signature `Ljava/net/HttpURLConnection;.setReadTimeout:(I)V` @kind virtual;
  #L1914ce.  return v1 @kind object;
}
procedure `java.io.InputStreamReader` `reader`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.reader:()Ljava/io/InputStreamReader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191c00.  call temp:= `charset`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.charset:()Ljava/lang/String;` @kind virtual;
  #L191c06.  v0:= temp @kind object;
  #L191c08.  call temp:= `reader`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.reader:(Ljava/lang/String;)Ljava/io/InputStreamReader;` @kind virtual;
  #L191c0e.  v0:= temp @kind object;
  #L191c10.  return v0 @kind object;
}
procedure `java.io.InputStreamReader` `reader`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.reader:(Ljava/lang/String;)Ljava/io/InputStreamReader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L191c24.  v0:= new `java.io.InputStreamReader`;
  #L191c28.  call temp:= `stream`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.stream:()Ljava/io/InputStream;` @kind virtual;
  #L191c2e.  v1:= temp @kind object;
  #L191c30.  call temp:= `getValidCharset`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getValidCharset:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L191c36.  v3:= temp @kind object;
  #L191c38.  call `<init>`(v0, v1, v3) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V` @kind direct;
  #L191c3e.  return v0 @kind object;
  #L191c40.  v3:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L191c42.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L191c46.  call `<init>`(v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191c4c.  throw v0;
  catch `java.io.UnsupportedEncodingException` @[L191c24..L191c3e] goto L191c40;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `receive`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.io.File` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.receive:(Ljava/io/File;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1914e0.  v0:= new `java.io.BufferedOutputStream`;
  #L1914e4.  v1:= new `java.io.FileOutputStream`;
  #L1914e8.  call `<init>`(v1, v3) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L1914ee.  v3:= v2.`com.github.kevinsawicki.http.HttpRequest.bufferSize` @type ^`int`;
  #L1914f2.  call `<init>`(v0, v1, v3) @signature `Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;I)V` @kind direct;
  #L1914f8.  v3:= new `com.github.kevinsawicki.http.HttpRequest$5`;
  #L1914fc.  v1:= v2.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` @kind boolean;
  #L191500.  call `<init>`(v3, v2, v0, v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$5;.<init>:(Lcom/github/kevinsawicki/http/HttpRequest;Ljava/io/Closeable;ZLjava/io/OutputStream;)V` @kind direct;
  #L191506.  call temp:= `call`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$5;.call:()Ljava/lang/Object;` @kind virtual;
  #L19150c.  v3:= temp @kind object;
  #L19150e.  v3:= (`com.github.kevinsawicki.http.HttpRequest`) v3 @kind object;
  #L191512.  return v3 @kind object;
  #L191514.  v3:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L191516.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19151a.  call `<init>`(v0, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191520.  throw v0;
  catch `java.io.FileNotFoundException` @[L1914e0..L1914f8] goto L191514;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `receive`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.receive:(Ljava/io/OutputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191544.  call temp:= `buffer`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.buffer:()Ljava/io/BufferedInputStream;` @kind virtual;
  #L19154a.  v0:= temp @kind object;
  #L19154c.  call temp:= `copy`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191552.  v2:= temp @kind object;
  #L191554.  return v2 @kind object;
  #L191556.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L191558.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19155c.  call `<init>`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191562.  throw v0;
  catch `java.io.IOException` @[L191544..L191554] goto L191556;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `receive`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `java.io.PrintStream` v1 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.receive:(Ljava/io/PrintStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L191584.  call temp:= `receive`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.receive:(Ljava/io/OutputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19158a.  v1:= temp @kind object;
  #L19158c.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `receive`(`com.github.kevinsawicki.http.HttpRequest` v7 @kind this, `java.io.Writer` v8 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.receive:(Ljava/io/Writer;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1915a0.  call temp:= `bufferedReader`(v7) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.bufferedReader:()Ljava/io/BufferedReader;` @kind virtual;
  #L1915a6.  v4:= temp @kind object;
  #L1915a8.  v6:= new `com.github.kevinsawicki.http.HttpRequest$7`;
  #L1915ac.  v3:= v7.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` @kind boolean;
  #L1915b0.  v0:= v6 @kind object;
  #L1915b2.  v1:= v7 @kind object;
  #L1915b4.  v2:= v4 @kind object;
  #L1915b6.  v5:= v8 @kind object;
  #L1915b8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/kevinsawicki/http/HttpRequest$7;.<init>:(Lcom/github/kevinsawicki/http/HttpRequest;Ljava/io/Closeable;ZLjava/io/BufferedReader;Ljava/io/Writer;)V` @kind direct;
  #L1915be.  call temp:= `call`(v6) @signature `Lcom/github/kevinsawicki/http/HttpRequest$7;.call:()Ljava/lang/Object;` @kind virtual;
  #L1915c4.  v8:= temp @kind object;
  #L1915c6.  v8:= (`com.github.kevinsawicki.http.HttpRequest`) v8 @kind object;
  #L1915ca.  return v8 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `receive`(`com.github.kevinsawicki.http.HttpRequest` v7 @kind this, `java.lang.Appendable` v8 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.receive:(Ljava/lang/Appendable;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1915dc.  call temp:= `bufferedReader`(v7) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.bufferedReader:()Ljava/io/BufferedReader;` @kind virtual;
  #L1915e2.  v4:= temp @kind object;
  #L1915e4.  v6:= new `com.github.kevinsawicki.http.HttpRequest$6`;
  #L1915e8.  v3:= v7.`com.github.kevinsawicki.http.HttpRequest.ignoreCloseExceptions` @type ^`boolean` @kind boolean;
  #L1915ec.  v0:= v6 @kind object;
  #L1915ee.  v1:= v7 @kind object;
  #L1915f0.  v2:= v4 @kind object;
  #L1915f2.  v5:= v8 @kind object;
  #L1915f4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/kevinsawicki/http/HttpRequest$6;.<init>:(Lcom/github/kevinsawicki/http/HttpRequest;Ljava/io/Closeable;ZLjava/io/BufferedReader;Ljava/lang/Appendable;)V` @kind direct;
  #L1915fa.  call temp:= `call`(v6) @signature `Lcom/github/kevinsawicki/http/HttpRequest$6;.call:()Ljava/lang/Object;` @kind virtual;
  #L191600.  v8:= temp @kind object;
  #L191602.  v8:= (`com.github.kevinsawicki.http.HttpRequest`) v8 @kind object;
  #L191606.  return v8 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `referer`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.referer:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191618.  v0:= "Referer" @kind object;
  #L19161c.  call temp:= `header`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191622.  v2:= temp @kind object;
  #L191624.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `send`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this, `java.io.File` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/io/File;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19166c.  v0:= new `java.io.BufferedInputStream`;
  #L191670.  v1:= new `java.io.FileInputStream`;
  #L191674.  call `<init>`(v1, v4) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L19167a.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L191680.  call temp:= `length`(v4) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L191686.  v1:= temp @kind wide;
  #L191688.  call temp:= `incrementTotalSize`(v3, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.incrementTotalSize:(J)Lcom/github/kevinsawicki/http/HttpRequest;` @kind direct;
  #L19168e.  call temp:= `send`(v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/io/InputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191694.  v4:= temp @kind object;
  #L191696.  return v4 @kind object;
  #L191698.  v4:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L19169a.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19169e.  call `<init>`(v0, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1916a4.  throw v0;
  catch `java.io.FileNotFoundException` @[L19166c..L19168e] goto L191698;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `send`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/io/InputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1916c8.  call temp:= `openOutput`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.openOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1916ce.  v0:= v1.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L1916d2.  call temp:= `copy`(v1, v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1916d8.  return v1 @kind object;
  #L1916da.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L1916dc.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L1916e0.  call `<init>`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1916e6.  throw v0;
  catch `java.io.IOException` @[L1916c8..L1916d8] goto L1916da;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `send`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this, `java.io.Reader` v4 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/io/Reader;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L191708.  call temp:= `openOutput`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.openOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19170e.  v0:= new `java.io.OutputStreamWriter`;
  #L191712.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L191716.  call temp:= `access$500`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.access$500:(Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;)Ljava/nio/charset/CharsetEncoder;` @kind static;
  #L19171c.  v2:= temp @kind object;
  #L19171e.  call temp:= `charset`(v2) @signature `Ljava/nio/charset/CharsetEncoder;.charset:()Ljava/nio/charset/Charset;` @kind virtual;
  #L191724.  v2:= temp @kind object;
  #L191726.  call `<init>`(v0, v1, v2) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L19172c.  v1:= new `com.github.kevinsawicki.http.HttpRequest$10`;
  #L191730.  call `<init>`(v1, v3, v0, v4, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$10;.<init>:(Lcom/github/kevinsawicki/http/HttpRequest;Ljava/io/Flushable;Ljava/io/Reader;Ljava/io/Writer;)V` @kind direct;
  #L191736.  call temp:= `call`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$10;.call:()Ljava/lang/Object;` @kind virtual;
  #L19173c.  v4:= temp @kind object;
  #L19173e.  v4:= (`com.github.kevinsawicki.http.HttpRequest`) v4 @kind object;
  #L191742.  return v4 @kind object;
  #L191744.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L191746.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L19174a.  call `<init>`(v0, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191750.  throw v0;
  catch `java.io.IOException` @[L191708..L19170e] goto L191744;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `send`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191774.  call temp:= `openOutput`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.openOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19177a.  v0:= v1.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L19177e.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L191784.  v2:= temp @kind object;
  #L191786.  call temp:= `write`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;` @kind virtual;
  #L19178c.  return v1 @kind object;
  #L19178e.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L191790.  v0:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L191794.  call `<init>`(v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L19179a.  throw v0;
  catch `java.io.IOException` @[L191774..L19178c] goto L19178e;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `send`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:([B)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L191638.  if v3 == 0 then goto L191646;
  #L19163c.  v0:= length @variable v3;
  #L19163e.  v0:= (`long`) v0 @kind i2l;
  #L191640.  call temp:= `incrementTotalSize`(v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.incrementTotalSize:(J)Lcom/github/kevinsawicki/http/HttpRequest;` @kind direct;
  #L191646.  v0:= new `java.io.ByteArrayInputStream`;
  #L19164a.  call `<init>`(v0, v3) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L191650.  call temp:= `send`(v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/io/InputStream;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191656.  v3:= temp @kind object;
  #L191658.  return v3 @kind object;
}
procedure `java.lang.String` `server`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.server:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1922ac.  v0:= "Server" @kind object;
  #L1922b0.  call temp:= `header`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1922b6.  v0:= temp @kind object;
  #L1922b8.  return v0 @kind object;
}
procedure `boolean` `serverError`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.serverError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1905d0.  call temp:= `code`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @kind virtual;
  #L1905d6.  v0:= temp;
  #L1905d8.  v1:= 500I;
  #L1905dc.  if v1 != v0 then goto L1905e4;
  #L1905e0.  v0:= 1I;
  #L1905e2.  goto L1905e6;
  #L1905e4.  v0:= 0I;
  #L1905e6.  return v0;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `startPart`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.startPart:()Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1917bc.  v0:= v2.`com.github.kevinsawicki.http.HttpRequest.multipart` @type ^`boolean` @kind boolean;
  #L1917c0.  if v0 != 0 then goto L1917ec;
  #L1917c4.  v0:= 1I;
  #L1917c6.  v2.`com.github.kevinsawicki.http.HttpRequest.multipart` @type ^`boolean` := v0 @kind boolean;
  #L1917ca.  v0:= "multipart/form-data; boundary=00content0boundary00" @kind object;
  #L1917ce.  call temp:= `contentType`(v2, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentType:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1917d4.  v0:= temp @kind object;
  #L1917d6.  call temp:= `openOutput`(v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.openOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1917dc.  v0:= v2.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L1917e0.  v1:= "--00content0boundary00\r\n" @kind object;
  #L1917e4.  call temp:= `write`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;` @kind virtual;
  #L1917ea.  goto L1917fa;
  #L1917ec.  v0:= v2.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L1917f0.  v1:= "\r\n--00content0boundary00\r\n" @kind object;
  #L1917f4.  call temp:= `write`(v0, v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.write:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;` @kind virtual;
  #L1917fa.  return v2 @kind object;
}
procedure `java.io.InputStream` `stream`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.stream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L191b08.  call temp:= `code`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.code:()I` @kind virtual;
  #L191b0e.  v0:= temp;
  #L191b10.  v1:= 400I;
  #L191b14.  if v0 >= v1 then goto L191b38;
  #L191b18.  call temp:= `getConnection`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L191b1e.  v0:= temp @kind object;
  #L191b20.  call temp:= `getInputStream`(v0) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L191b26.  v0:= temp @kind object;
  #L191b28.  goto L191b8a;
  #L191b2a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L191b2c.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L191b30.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191b36.  throw v1;
  #L191b38.  call temp:= `getConnection`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L191b3e.  v0:= temp @kind object;
  #L191b40.  call temp:= `getErrorStream`(v0) @signature `Ljava/net/HttpURLConnection;.getErrorStream:()Ljava/io/InputStream;` @kind virtual;
  #L191b46.  v0:= temp @kind object;
  #L191b48.  if v0 != 0 then goto L191b8a;
  #L191b4c.  call temp:= `getConnection`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L191b52.  v0:= temp @kind object;
  #L191b54.  call temp:= `getInputStream`(v0) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L191b5a.  v0:= temp @kind object;
  #L191b5c.  goto L191b8a;
  #L191b5e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L191b60.  call temp:= `contentLength`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentLength:()I` @kind virtual;
  #L191b66.  v1:= temp;
  #L191b68.  if v1 > 0 then goto L191b7e;
  #L191b6c.  v0:= new `java.io.ByteArrayInputStream`;
  #L191b70.  v1:= 0I;
  #L191b72.  v1:= new `byte`[v1];
  #L191b76.  call `<init>`(v0, v1) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L191b7c.  goto L191b8a;
  #L191b7e.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L191b82.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191b88.  throw v1;
  #L191b8a.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.uncompress` @type ^`boolean` @kind boolean;
  #L191b8e.  if v1 == 0 then goto L191bc6;
  #L191b92.  v1:= "gzip" @kind object;
  #L191b96.  call temp:= `contentEncoding`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.contentEncoding:()Ljava/lang/String;` @kind virtual;
  #L191b9c.  v2:= temp @kind object;
  #L191b9e.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L191ba4.  v1:= temp;
  #L191ba6.  if v1 != 0 then goto L191bac;
  #L191baa.  goto L191bc6;
  #L191bac.  v1:= new `java.util.zip.GZIPInputStream`;
  #L191bb0.  call `<init>`(v1, v0) @signature `Ljava/util/zip/GZIPInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L191bb6.  return v1 @kind object;
  #L191bb8.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L191bba.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L191bbe.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191bc4.  throw v1;
  #L191bc6.  return v0 @kind object;
  catch `java.io.IOException` @[L191b18..L191b28] goto L191b2a;
  catch `java.io.IOException` @[L191b4c..L191b5c] goto L191b5e;
  catch `java.io.IOException` @[L191bac..L191bb6] goto L191bb8;
}
procedure `java.lang.String` `toString`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192304.  v0:= new `java.lang.StringBuilder`;
  #L192308.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19230e.  call temp:= `method`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.method:()Ljava/lang/String;` @kind virtual;
  #L192314.  v1:= temp @kind object;
  #L192316.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19231c.  v1:= 32I;
  #L192320.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L192326.  call temp:= `url`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.url:()Ljava/net/URL;` @kind virtual;
  #L19232c.  v1:= temp @kind object;
  #L19232e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192334.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19233a.  v0:= temp @kind object;
  #L19233c.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `uncompress`(`com.github.kevinsawicki.http.HttpRequest` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.uncompress:(Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;

  #L19184c.  v0.`com.github.kevinsawicki.http.HttpRequest.uncompress` @type ^`boolean` := v1 @kind boolean;
  #L191850.  return v0 @kind object;
}
procedure `java.net.URL` `url`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.url:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19263c.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L192642.  v0:= temp @kind object;
  #L192644.  call temp:= `getURL`(v0) @signature `Ljava/net/HttpURLConnection;.getURL:()Ljava/net/URL;` @kind virtual;
  #L19264a.  v0:= temp @kind object;
  #L19264c.  return v0 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `useCaches`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `boolean` v2 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.useCaches:(Z)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191864.  call temp:= `getConnection`(v1) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.getConnection:()Ljava/net/HttpURLConnection;` @kind virtual;
  #L19186a.  v0:= temp @kind object;
  #L19186c.  call `setUseCaches`(v0, v2) @signature `Ljava/net/HttpURLConnection;.setUseCaches:(Z)V` @kind virtual;
  #L191872.  return v1 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `useProxy`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.useProxy:(Ljava/lang/String;I)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191884.  v0:= v1.`com.github.kevinsawicki.http.HttpRequest.connection` @type ^`java.net.HttpURLConnection` @kind object;
  #L191888.  if v0 != 0 then goto L191896;
  #L19188c.  v1.`com.github.kevinsawicki.http.HttpRequest.httpProxyHost` @type ^`java.lang.String` := v2 @kind object;
  #L191890.  v1.`com.github.kevinsawicki.http.HttpRequest.httpProxyPort` @type ^`int` := v3;
  #L191894.  return v1 @kind object;
  #L191896.  v2:= new `java.lang.IllegalStateException`;
  #L19189a.  v3:= "The connection has already been created. This method must be called before reading or writing to the request." @kind object;
  #L19189e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1918a4.  throw v2;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `userAgent`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.userAgent:(Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1918b8.  v0:= "User-Agent" @kind object;
  #L1918bc.  call temp:= `header`(v1, v0, v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.header:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1918c2.  v2:= temp @kind object;
  #L1918c4.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `writePartHeader`(`com.github.kevinsawicki.http.HttpRequest` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.writePartHeader:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1918d8.  v0:= 0I;
  #L1918da.  call temp:= `writePartHeader`(v1, v2, v3, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.writePartHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L1918e0.  v2:= temp @kind object;
  #L1918e2.  return v2 @kind object;
}
procedure `com.github.kevinsawicki.http.HttpRequest` `writePartHeader`(`com.github.kevinsawicki.http.HttpRequest` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.writePartHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1918f4.  v0:= new `java.lang.StringBuilder`;
  #L1918f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1918fe.  v1:= "form-data; name=\"" @kind object;
  #L191902.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L191908.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19190e.  if v4 == 0 then goto L191922;
  #L191912.  v3:= "\"; filename=\"" @kind object;
  #L191916.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19191c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L191922.  v3:= 34I;
  #L191926.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19192c.  v3:= "Content-Disposition" @kind object;
  #L191930.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L191936.  v4:= temp @kind object;
  #L191938.  call temp:= `partHeader`(v2, v3, v4) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.partHeader:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19193e.  if v5 == 0 then goto L19194c;
  #L191942.  v3:= "Content-Type" @kind object;
  #L191946.  call temp:= `partHeader`(v2, v3, v5) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.partHeader:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L19194c.  v3:= "\r\n" @kind object;
  #L191950.  call temp:= `send`(v2, v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.send:(Ljava/lang/CharSequence;)Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191956.  v3:= temp @kind object;
  #L191958.  return v3 @kind object;
}
procedure `java.io.OutputStreamWriter` `writer`(`com.github.kevinsawicki.http.HttpRequest` v3 @kind this) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.writer:()Ljava/io/OutputStreamWriter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L191c70.  call temp:= `openOutput`(v3) @signature `Lcom/github/kevinsawicki/http/HttpRequest;.openOutput:()Lcom/github/kevinsawicki/http/HttpRequest;` @kind virtual;
  #L191c76.  v0:= new `java.io.OutputStreamWriter`;
  #L191c7a.  v1:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L191c7e.  v2:= v3.`com.github.kevinsawicki.http.HttpRequest.output` @type ^`com.github.kevinsawicki.http.HttpRequest$RequestOutputStream` @kind object;
  #L191c82.  call temp:= `access$500`(v2) @signature `Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;.access$500:(Lcom/github/kevinsawicki/http/HttpRequest$RequestOutputStream;)Ljava/nio/charset/CharsetEncoder;` @kind static;
  #L191c88.  v2:= temp @kind object;
  #L191c8a.  call temp:= `charset`(v2) @signature `Ljava/nio/charset/CharsetEncoder;.charset:()Ljava/nio/charset/Charset;` @kind virtual;
  #L191c90.  v2:= temp @kind object;
  #L191c92.  call `<init>`(v0, v1, v2) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L191c98.  return v0 @kind object;
  #L191c9a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L191c9c.  v1:= new `com.github.kevinsawicki.http.HttpRequest$HttpRequestException`;
  #L191ca0.  call `<init>`(v1, v0) @signature `Lcom/github/kevinsawicki/http/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L191ca6.  throw v1;
  catch `java.io.IOException` @[L191c70..L191c98] goto L191c9a;
}
