record `okio.AsyncTimeout$1` @kind class @AccessFlag  extends `okio.Sink` @kind interface {
  `okio.AsyncTimeout` `okio.AsyncTimeout$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.Sink` `okio.AsyncTimeout$1.val$sink` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.AsyncTimeout$1` v0 @kind this, `okio.AsyncTimeout` v1 @kind object, `okio.Sink` v2 @kind object) @signature `Lokio/AsyncTimeout$1;.<init>:(Lokio/AsyncTimeout;Lokio/Sink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24af68.  v0.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` := v1 @kind object;
  #L24af6c.  v0.`okio.AsyncTimeout$1.val$sink` @type ^`okio.Sink` := v2 @kind object;
  #L24af70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24af76.  return @kind void;
}
procedure `void` `close`(`okio.AsyncTimeout$1` v3 @kind this) @signature `Lokio/AsyncTimeout$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24af88.  v0:= v3.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24af8c.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L24af92.  v0:= v3.`okio.AsyncTimeout$1.val$sink` @type ^`okio.Sink` @kind object;
  #L24af96.  call `close`(v0) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L24af9c.  v0:= 1I;
  #L24af9e.  v1:= v3.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24afa2.  call `exit`(v1, v0) @signature `Lokio/AsyncTimeout;.exit:(Z)V` @kind virtual;
  #L24afa8.  return @kind void;
  #L24afaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24afac.  goto L24afbe;
  #L24afae.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L24afb0.  v1:= v3.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24afb4.  call temp:= `exit`(v1, v0) @signature `Lokio/AsyncTimeout;.exit:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L24afba.  v0:= temp @kind object;
  #L24afbc.  throw v0;
  #L24afbe.  v1:= v3.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24afc2.  v2:= 0I;
  #L24afc4.  call `exit`(v1, v2) @signature `Lokio/AsyncTimeout;.exit:(Z)V` @kind virtual;
  #L24afca.  throw v0;
  catch `java.io.IOException` @[L24af92..L24af9c] goto L24afae;
  catch `java.lang.Throwable` @[L24af92..L24af9c] goto L24afaa;
  catch `java.lang.Throwable` @[L24afb0..L24afbe] goto L24afaa;
}
procedure `void` `flush`(`okio.AsyncTimeout$1` v3 @kind this) @signature `Lokio/AsyncTimeout$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24aff4.  v0:= v3.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24aff8.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L24affe.  v0:= v3.`okio.AsyncTimeout$1.val$sink` @type ^`okio.Sink` @kind object;
  #L24b002.  call `flush`(v0) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L24b008.  v0:= 1I;
  #L24b00a.  v1:= v3.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24b00e.  call `exit`(v1, v0) @signature `Lokio/AsyncTimeout;.exit:(Z)V` @kind virtual;
  #L24b014.  return @kind void;
  #L24b016.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24b018.  goto L24b02a;
  #L24b01a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L24b01c.  v1:= v3.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24b020.  call temp:= `exit`(v1, v0) @signature `Lokio/AsyncTimeout;.exit:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L24b026.  v0:= temp @kind object;
  #L24b028.  throw v0;
  #L24b02a.  v1:= v3.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24b02e.  v2:= 0I;
  #L24b030.  call `exit`(v1, v2) @signature `Lokio/AsyncTimeout;.exit:(Z)V` @kind virtual;
  #L24b036.  throw v0;
  catch `java.io.IOException` @[L24affe..L24b008] goto L24b01a;
  catch `java.lang.Throwable` @[L24affe..L24b008] goto L24b016;
  catch `java.lang.Throwable` @[L24b01c..L24b02a] goto L24b016;
}
procedure `okio.Timeout` `timeout`(`okio.AsyncTimeout$1` v1 @kind this) @signature `Lokio/AsyncTimeout$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24af50.  v0:= v1.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24af54.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.AsyncTimeout$1` v2 @kind this) @signature `Lokio/AsyncTimeout$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24af0c.  v0:= new `java.lang.StringBuilder`;
  #L24af10.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24af16.  v1:= "AsyncTimeout.sink(" @kind object;
  #L24af1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24af20.  v1:= v2.`okio.AsyncTimeout$1.val$sink` @type ^`okio.Sink` @kind object;
  #L24af24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24af2a.  v1:= ")" @kind object;
  #L24af2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24af34.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24af3a.  v0:= temp @kind object;
  #L24af3c.  return v0 @kind object;
}
procedure `void` `write`(`okio.AsyncTimeout$1` v6 @kind this, `okio.Buffer` v7 @kind object, `long` v8 ) @signature `Lokio/AsyncTimeout$1;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24b060.  v0:= v7.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24b064.  v2:= 0L;
  #L24b068.  v4:= v8 @kind wide;
  #L24b06a.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L24b070.  v0:= 0L;
  #L24b074.  v2:= lcmp(v8, v0);
  #L24b078.  if v2 <= 0 then goto L24b0f4;
  #L24b07c.  v2:= v7.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L24b080.  v3:= 65536L;
  #L24b086.  v5:= lcmp(v0, v3);
  #L24b08a.  if v5 >= 0 then goto L24b0ae;
  #L24b08e.  v3:= v2.`okio.Segment.limit` @type ^`int`;
  #L24b092.  v4:= v2.`okio.Segment.pos` @type ^`int`;
  #L24b096.  v3:= v3 - v4 @kind int;
  #L24b098.  v3:= (`long`) v3 @kind i2l;
  #L24b09a.  v0:= v0 + v3 @kind long;
  #L24b09c.  v3:= lcmp(v0, v8);
  #L24b0a0.  if v3 < 0 then goto L24b0a8;
  #L24b0a4.  v0:= v8 @kind wide;
  #L24b0a6.  goto L24b0ae;
  #L24b0a8.  v2:= v2.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L24b0ac.  goto L24b080;
  #L24b0ae.  v2:= 0I;
  #L24b0b0.  v3:= v6.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24b0b4.  call `enter`(v3) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L24b0ba.  v3:= v6.`okio.AsyncTimeout$1.val$sink` @type ^`okio.Sink` @kind object;
  #L24b0be.  call `write`(v3, v7, v0) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L24b0c4.  v8:= v8 - v0 @kind long;
  #L24b0c6.  v0:= 1I;
  #L24b0c8.  v1:= v6.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24b0cc.  call `exit`(v1, v0) @signature `Lokio/AsyncTimeout;.exit:(Z)V` @kind virtual;
  #L24b0d2.  goto L24b070;
  #L24b0d4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24b0d6.  goto L24b0e8;
  #L24b0d8.  v7:= Exception @type ^`java.io.IOException` @kind object;
  #L24b0da.  v8:= v6.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24b0de.  call temp:= `exit`(v8, v7) @signature `Lokio/AsyncTimeout;.exit:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L24b0e4.  v7:= temp @kind object;
  #L24b0e6.  throw v7;
  #L24b0e8.  v8:= v6.`okio.AsyncTimeout$1.this$0` @type ^`okio.AsyncTimeout` @kind object;
  #L24b0ec.  call `exit`(v8, v2) @signature `Lokio/AsyncTimeout;.exit:(Z)V` @kind virtual;
  #L24b0f2.  throw v7;
  #L24b0f4.  return @kind void;
  catch `java.io.IOException` @[L24b0ba..L24b0c4] goto L24b0d8;
  catch `java.lang.Throwable` @[L24b0ba..L24b0c4] goto L24b0d4;
  catch `java.lang.Throwable` @[L24b0da..L24b0e8] goto L24b0d4;
}
