record `okio.RealBufferedSource$1` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.RealBufferedSource` `okio.RealBufferedSource$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSource$1` v0 @kind this, `okio.RealBufferedSource` v1 @kind object) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2530fc.  v0.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` := v1 @kind object;
  #L253100.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L253106.  return @kind void;
}
procedure `int` `available`(`okio.RealBufferedSource$1` v4 @kind this) @signature `Lokio/RealBufferedSource$1;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L252f60.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L252f64.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L252f68.  if v0 != 0 then goto L252f8a;
  #L252f6c.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L252f70.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L252f74.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L252f78.  v2:= 2147483647L;
  #L252f7e.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L252f84.  v0:= temp @kind wide;
  #L252f86.  v0:= (`int`) v0 @kind l2i;
  #L252f88.  return v0;
  #L252f8a.  v0:= new `java.io.IOException`;
  #L252f8e.  v1:= "closed" @kind object;
  #L252f92.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252f98.  throw v0;
}
procedure `void` `close`(`okio.RealBufferedSource$1` v1 @kind this) @signature `Lokio/RealBufferedSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253118.  v0:= v1.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L25311c.  call `close`(v0) @signature `Lokio/RealBufferedSource;.close:()V` @kind virtual;
  #L253122.  return @kind void;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v5 @kind this) @signature `Lokio/RealBufferedSource$1;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L252fac.  v0:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L252fb0.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L252fb4.  if v0 != 0 then goto L253012;
  #L252fb8.  v0:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L252fbc.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L252fc0.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L252fc4.  v2:= 0L;
  #L252fc8.  v4:= lcmp(v0, v2);
  #L252fcc.  if v4 != 0 then goto L252ffc;
  #L252fd0.  v0:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L252fd4.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L252fd8.  v1:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L252fdc.  v1:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L252fe0.  v2:= 8192L;
  #L252fe4.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L252fea.  v0:= temp @kind wide;
  #L252fec.  v2:= -1L;
  #L252ff0.  v4:= lcmp(v0, v2);
  #L252ff4.  if v4 != 0 then goto L252ffc;
  #L252ff8.  v0:= -1I;
  #L252ffa.  return v0;
  #L252ffc.  v0:= v5.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L253000.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253004.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L25300a.  v0:= temp;
  #L25300c.  v0:= v0 ^& 255;
  #L253010.  return v0;
  #L253012.  v0:= new `java.io.IOException`;
  #L253016.  v1:= "closed" @kind object;
  #L25301a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253020.  throw v0;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/RealBufferedSource$1;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L253034.  v0:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L253038.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L25303c.  if v0 != 0 then goto L2530a4;
  #L253040.  v0:= length @variable v8;
  #L253042.  v1:= (`long`) v0 @kind i2l;
  #L253044.  v3:= (`long`) v9 @kind i2l;
  #L253046.  v5:= (`long`) v10 @kind i2l;
  #L253048.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L25304e.  v0:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L253052.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253056.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L25305a.  v2:= 0L;
  #L25305e.  v4:= lcmp(v0, v2);
  #L253062.  if v4 != 0 then goto L253092;
  #L253066.  v0:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L25306a.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L25306e.  v1:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L253072.  v1:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253076.  v2:= 8192L;
  #L25307a.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L253080.  v0:= temp @kind wide;
  #L253082.  v2:= -1L;
  #L253086.  v4:= lcmp(v0, v2);
  #L25308a.  if v4 != 0 then goto L253092;
  #L25308e.  v8:= -1I;
  #L253090.  return v8;
  #L253092.  v0:= v7.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L253096.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25309a.  call temp:= `read`(v0, v8, v9, v10) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L2530a0.  v8:= temp;
  #L2530a2.  return v8;
  #L2530a4.  v8:= new `java.io.IOException`;
  #L2530a8.  v9:= "closed" @kind object;
  #L2530ac.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2530b2.  throw v8;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource$1` v2 @kind this) @signature `Lokio/RealBufferedSource$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2530c4.  v0:= new `java.lang.StringBuilder`;
  #L2530c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2530ce.  v1:= v2.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L2530d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2530d8.  v1:= ".inputStream()" @kind object;
  #L2530dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2530e2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2530e8.  v0:= temp @kind object;
  #L2530ea.  return v0 @kind object;
}
