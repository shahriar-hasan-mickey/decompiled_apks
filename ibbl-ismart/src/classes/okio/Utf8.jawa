record `okio.Utf8` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okio.Utf8` v0 @kind this) @signature `Lokio/Utf8;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L255220.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L255226.  return @kind void;
}
procedure `long` `size`(`java.lang.String` v2 @kind object) @signature `Lokio/Utf8;.size:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L255074.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L25507a.  v0:= temp;
  #L25507c.  v1:= 0I;
  #L25507e.  call temp:= `size`(v2, v1, v0) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @kind static;
  #L255084.  v0:= temp @kind wide;
  #L255086.  return v0 @kind wide;
}
procedure `long` `size`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L255098.  if v9 == 0 then goto L2551fe;
  #L25509c.  if v10 < 0 then goto L2551d0;
  #L2550a0.  if v11 < v10 then goto L255192;
  #L2550a4.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2550aa.  v0:= temp;
  #L2550ac.  if v11 > v0 then goto L25514c;
  #L2550b0.  v0:= 0L;
  #L2550b4.  if v10 >= v11 then goto L25514a;
  #L2550b8.  call temp:= `charAt`(v9, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2550be.  v2:= temp;
  #L2550c0.  v3:= 128I;
  #L2550c4.  v4:= 1L;
  #L2550c8.  if v2 >= v3 then goto L2550d4;
  #L2550cc.  v0:= v0 + v4 @kind long;
  #L2550ce.  v10:= v10 + 1;
  #L2550d2.  goto L2550b4;
  #L2550d4.  v3:= 2048I;
  #L2550d8.  if v2 >= v3 then goto L2550e8;
  #L2550dc.  v2:= 2L;
  #L2550e0.  v0:= v0 + v2 @kind long;
  #L2550e2.  v10:= v10 + 1;
  #L2550e6.  goto L2550b4;
  #L2550e8.  v3:= 55296I;
  #L2550ee.  if v2 < v3 then goto L25513e;
  #L2550f2.  v3:= 57343I;
  #L2550f8.  if v2 <= v3 then goto L2550fe;
  #L2550fc.  goto L25513e;
  #L2550fe.  v6:= v10 + 1;
  #L255102.  if v6 >= v11 then goto L255110;
  #L255106.  call temp:= `charAt`(v9, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L25510c.  v7:= temp;
  #L25510e.  goto L255112;
  #L255110.  v7:= 0I;
  #L255112.  v8:= 56319I;
  #L255118.  if v2 > v8 then goto L255138;
  #L25511c.  v2:= 56320I;
  #L255122.  if v7 < v2 then goto L255138;
  #L255126.  if v7 <= v3 then goto L25512c;
  #L25512a.  goto L255138;
  #L25512c.  v2:= 4L;
  #L255130.  v0:= v0 + v2 @kind long;
  #L255132.  v10:= v10 + 2;
  #L255136.  goto L2550b4;
  #L255138.  v0:= v0 + v4 @kind long;
  #L25513a.  v10:= v6;
  #L25513c.  goto L2550b4;
  #L25513e.  v2:= 3L;
  #L255142.  v0:= v0 + v2 @kind long;
  #L255144.  v10:= v10 + 1;
  #L255148.  goto L2550b4;
  #L25514a.  return v0 @kind wide;
  #L25514c.  v10:= new `java.lang.IllegalArgumentException`;
  #L255150.  v0:= new `java.lang.StringBuilder`;
  #L255154.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25515a.  v1:= "endIndex > string.length: " @kind object;
  #L25515e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L255164.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L25516a.  v11:= " > " @kind object;
  #L25516e.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L255174.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L25517a.  v9:= temp;
  #L25517c.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L255182.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L255188.  v9:= temp @kind object;
  #L25518a.  call `<init>`(v10, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L255190.  throw v10;
  #L255192.  v9:= new `java.lang.IllegalArgumentException`;
  #L255196.  v0:= new `java.lang.StringBuilder`;
  #L25519a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2551a0.  v1:= "endIndex < beginIndex: " @kind object;
  #L2551a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2551aa.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2551b0.  v11:= " < " @kind object;
  #L2551b4.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2551ba.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2551c0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2551c6.  v10:= temp @kind object;
  #L2551c8.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2551ce.  throw v9;
  #L2551d0.  v9:= new `java.lang.IllegalArgumentException`;
  #L2551d4.  v11:= new `java.lang.StringBuilder`;
  #L2551d8.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2551de.  v0:= "beginIndex < 0: " @kind object;
  #L2551e2.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2551e8.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2551ee.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2551f4.  v10:= temp @kind object;
  #L2551f6.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2551fc.  throw v9;
  #L2551fe.  v9:= new `java.lang.IllegalArgumentException`;
  #L255202.  v10:= "string == null" @kind object;
  #L255206.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25520c.  throw v9;
  #L25520e.  return @kind void;
}
