record `okio.Base64` @kind class @AccessFlag FINAL {
}
global `byte`[] `@@okio.Base64.MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.Base64.URL_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Base64;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L24ba7c.  v0:= 64I;
  #L24ba80.  v1:= new `byte`[v0];
  #L24ba84.  goto L24baa0;
  #L24ba8a.  `@@okio.Base64.MAP` @type ^`byte`[] := v1 @kind object;
  #L24ba8e.  v0:= new `byte`[v0];
  #L24ba92.  goto L24bae8;
  #L24ba98.  `@@okio.Base64.URL_MAP` @type ^`byte`[] := v0 @kind object;
  #L24ba9c.  return @kind void;
  #L24ba9e.  
  #L24baa0.  v1:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L24bae7.  goto L24ba8a;
  #L24bae8.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L24bb2f.  goto L24ba98;
}
procedure `void` `<init>`(`okio.Base64` v0 @kind this) @signature `Lokio/Base64;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L24bb40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24bb46.  return @kind void;
}
procedure `byte`[] `decode`(`java.lang.String` v14 @kind object) @signature `Lokio/Base64;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L24b6e4.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24b6ea.  v0:= temp;
  #L24b6ec.  v1:= 9I;
  #L24b6f0.  v2:= 32I;
  #L24b6f4.  v3:= 13I;
  #L24b6f8.  v4:= 10I;
  #L24b6fc.  if v0 <= 0 then goto L24b72c;
  #L24b700.  v5:= v0 + -1;
  #L24b704.  call temp:= `charAt`(v14, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L24b70a.  v5:= temp;
  #L24b70c.  v6:= 61I;
  #L24b710.  if v5 == v6 then goto L24b726;
  #L24b714.  if v5 == v4 then goto L24b726;
  #L24b718.  if v5 == v3 then goto L24b726;
  #L24b71c.  if v5 == v2 then goto L24b726;
  #L24b720.  if v5 == v1 then goto L24b726;
  #L24b724.  goto L24b72c;
  #L24b726.  v0:= v0 + -1;
  #L24b72a.  goto L24b6ec;
  #L24b72c.  v5:= (`long`) v0 @kind i2l;
  #L24b72e.  v7:= 6L;
  #L24b732.  v5:= v5 * v7 @kind long;
  #L24b736.  v7:= 8L;
  #L24b73a.  v5:= v5 / v7 @kind long;
  #L24b73c.  v5:= (`int`) v5 @kind l2i;
  #L24b73e.  v5:= new `byte`[v5];
  #L24b742.  v6:= 0I;
  #L24b744.  v7:= 0I;
  #L24b746.  v8:= 0I;
  #L24b748.  v9:= 0I;
  #L24b74a.  v10:= 0I;
  #L24b74c.  v11:= 0I;
  #L24b74e.  if v7 >= v0 then goto L24b820;
  #L24b752.  call temp:= `charAt`(v14, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L24b758.  v12:= temp;
  #L24b75a.  v13:= 65I;
  #L24b75e.  if v12 < v13 then goto L24b770;
  #L24b762.  v13:= 90I;
  #L24b766.  if v12 > v13 then goto L24b770;
  #L24b76a.  v12:= v12 + -65;
  #L24b76e.  goto L24b7de;
  #L24b770.  v13:= 97I;
  #L24b774.  if v12 < v13 then goto L24b786;
  #L24b778.  v13:= 122I;
  #L24b77c.  if v12 > v13 then goto L24b786;
  #L24b780.  v12:= v12 + -71;
  #L24b784.  goto L24b7de;
  #L24b786.  v13:= 48I;
  #L24b78a.  if v12 < v13 then goto L24b79c;
  #L24b78e.  v13:= 57I;
  #L24b792.  if v12 > v13 then goto L24b79c;
  #L24b796.  v12:= v12 + 4;
  #L24b79a.  goto L24b7de;
  #L24b79c.  v13:= 43I;
  #L24b7a0.  if v12 == v13 then goto L24b7da;
  #L24b7a4.  v13:= 45I;
  #L24b7a8.  if v12 != v13 then goto L24b7ae;
  #L24b7ac.  goto L24b7da;
  #L24b7ae.  v13:= 47I;
  #L24b7b2.  if v12 == v13 then goto L24b7d4;
  #L24b7b6.  v13:= 95I;
  #L24b7ba.  if v12 != v13 then goto L24b7c0;
  #L24b7be.  goto L24b7d4;
  #L24b7c0.  if v12 == v4 then goto L24b81a;
  #L24b7c4.  if v12 == v3 then goto L24b81a;
  #L24b7c8.  if v12 == v2 then goto L24b81a;
  #L24b7cc.  if v12 != v1 then goto L24b7d2;
  #L24b7d0.  goto L24b81a;
  #L24b7d2.  return v11 @kind object;
  #L24b7d4.  v12:= 63I;
  #L24b7d8.  goto L24b7de;
  #L24b7da.  v12:= 62I;
  #L24b7de.  v9:= v9 ^< 6;
  #L24b7e2.  v11:= (`byte`) v12 @kind i2b;
  #L24b7e4.  v9:= v9 ^| v11 @kind int;
  #L24b7e6.  v8:= v8 + 1;
  #L24b7ea.  v11:= v8 %% 4;
  #L24b7ee.  if v11 != 0 then goto L24b81a;
  #L24b7f2.  v11:= v10 + 1;
  #L24b7f6.  v12:= v9 ^> 16;
  #L24b7fa.  v12:= (`byte`) v12 @kind i2b;
  #L24b7fc.  v5[v10]:= v12 @kind byte;
  #L24b800.  v10:= v11 + 1;
  #L24b804.  v12:= v9 ^> 8;
  #L24b808.  v12:= (`byte`) v12 @kind i2b;
  #L24b80a.  v5[v11]:= v12 @kind byte;
  #L24b80e.  v11:= v10 + 1;
  #L24b812.  v12:= (`byte`) v9 @kind i2b;
  #L24b814.  v5[v10]:= v12 @kind byte;
  #L24b818.  v10:= v11;
  #L24b81a.  v7:= v7 + 1;
  #L24b81e.  goto L24b74c;
  #L24b820.  v8:= v8 %% 4;
  #L24b824.  v14:= 1I;
  #L24b826.  if v8 != v14 then goto L24b82c;
  #L24b82a.  return v11 @kind object;
  #L24b82c.  v14:= 2I;
  #L24b82e.  if v8 != v14 then goto L24b848;
  #L24b832.  v14:= v9 ^< 12;
  #L24b836.  v0:= v10 + 1;
  #L24b83a.  v14:= v14 ^> 16;
  #L24b83e.  v14:= (`byte`) v14 @kind i2b;
  #L24b840.  v5[v10]:= v14 @kind byte;
  #L24b844.  v10:= v0;
  #L24b846.  goto L24b86e;
  #L24b848.  v14:= 3I;
  #L24b84a.  if v8 != v14 then goto L24b86e;
  #L24b84e.  v14:= v9 ^< 6;
  #L24b852.  v0:= v10 + 1;
  #L24b856.  v1:= v14 ^> 16;
  #L24b85a.  v1:= (`byte`) v1 @kind i2b;
  #L24b85c.  v5[v10]:= v1 @kind byte;
  #L24b860.  v10:= v0 + 1;
  #L24b864.  v14:= v14 ^> 8;
  #L24b868.  v14:= (`byte`) v14 @kind i2b;
  #L24b86a.  v5[v0]:= v14 @kind byte;
  #L24b86e.  v14:= length @variable v5;
  #L24b870.  if v10 != v14 then goto L24b876;
  #L24b874.  return v5 @kind object;
  #L24b876.  v14:= new `byte`[v10];
  #L24b87a.  call `arraycopy`(v5, v6, v14, v6, v10) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L24b880.  return v14 @kind object;
}
procedure `java.lang.String` `encode`(`byte`[] v1 @kind object) @signature `Lokio/Base64;.encode:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24b894.  v0:= `@@okio.Base64.MAP` @type ^`byte`[] @kind object;
  #L24b898.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L24b89e.  v1:= temp @kind object;
  #L24b8a0.  return v1 @kind object;
}
procedure `java.lang.String` `encode`(`byte`[] v8 @kind object, `byte`[] v9 @kind object) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L24b8b4.  v0:= length @variable v8;
  #L24b8b6.  v0:= v0 + 2;
  #L24b8ba.  v0:= v0 / 3;
  #L24b8be.  v0:= v0 * 4;
  #L24b8c2.  v0:= new `byte`[v0];
  #L24b8c6.  v1:= length @variable v8;
  #L24b8c8.  v2:= length @variable v8;
  #L24b8ca.  v2:= v2 %% 3;
  #L24b8ce.  v1:= v1 - v2 @kind int;
  #L24b8d0.  v2:= 0I;
  #L24b8d2.  v3:= 0I;
  #L24b8d4.  if v2 >= v1 then goto L24b95e;
  #L24b8d8.  v4:= v3 + 1;
  #L24b8dc.  v5:= v8[v2] @kind byte;
  #L24b8e0.  v5:= v5 ^& 255;
  #L24b8e4.  v5:= v5 ^> 2;
  #L24b8e8.  v5:= v9[v5] @kind byte;
  #L24b8ec.  v0[v3]:= v5 @kind byte;
  #L24b8f0.  v3:= v4 + 1;
  #L24b8f4.  v5:= v8[v2] @kind byte;
  #L24b8f8.  v5:= v5 ^& 3;
  #L24b8fc.  v5:= v5 ^< 4;
  #L24b900.  v6:= v2 + 1;
  #L24b904.  v7:= v8[v6] @kind byte;
  #L24b908.  v7:= v7 ^& 255;
  #L24b90c.  v7:= v7 ^> 4;
  #L24b910.  v5:= v5 ^| v7 @kind int;
  #L24b912.  v5:= v9[v5] @kind byte;
  #L24b916.  v0[v4]:= v5 @kind byte;
  #L24b91a.  v4:= v3 + 1;
  #L24b91e.  v5:= v8[v6] @kind byte;
  #L24b922.  v5:= v5 ^& 15;
  #L24b926.  v5:= v5 ^< 2;
  #L24b92a.  v6:= v2 + 2;
  #L24b92e.  v7:= v8[v6] @kind byte;
  #L24b932.  v7:= v7 ^& 255;
  #L24b936.  v7:= v7 ^> 6;
  #L24b93a.  v5:= v5 ^| v7 @kind int;
  #L24b93c.  v5:= v9[v5] @kind byte;
  #L24b940.  v0[v3]:= v5 @kind byte;
  #L24b944.  v3:= v4 + 1;
  #L24b948.  v5:= v8[v6] @kind byte;
  #L24b94c.  v5:= v5 ^& 63;
  #L24b950.  v5:= v9[v5] @kind byte;
  #L24b954.  v0[v4]:= v5 @kind byte;
  #L24b958.  v2:= v2 + 3;
  #L24b95c.  goto L24b8d4;
  #L24b95e.  v2:= length @variable v8;
  #L24b960.  v2:= v2 %% 3;
  #L24b964.  v4:= 61I;
  #L24b968.  goto L24ba2c;
  #L24b96e.  goto L24ba0c;
  #L24b970.  v2:= v3 + 1;
  #L24b974.  v5:= v8[v1] @kind byte;
  #L24b978.  v5:= v5 ^& 255;
  #L24b97c.  v5:= v5 ^> 2;
  #L24b980.  v5:= v9[v5] @kind byte;
  #L24b984.  v0[v3]:= v5 @kind byte;
  #L24b988.  v3:= v2 + 1;
  #L24b98c.  v5:= v8[v1] @kind byte;
  #L24b990.  v5:= v5 ^& 3;
  #L24b994.  v5:= v5 ^< 4;
  #L24b998.  v1:= v1 + 1;
  #L24b99c.  v6:= v8[v1] @kind byte;
  #L24b9a0.  v6:= v6 ^& 255;
  #L24b9a4.  v6:= v6 ^> 4;
  #L24b9a8.  v5:= v5 ^| v6 @kind int;
  #L24b9aa.  v5:= v9[v5] @kind byte;
  #L24b9ae.  v0[v2]:= v5 @kind byte;
  #L24b9b2.  v2:= v3 + 1;
  #L24b9b6.  v8:= v8[v1] @kind byte;
  #L24b9ba.  v8:= v8 ^& 15;
  #L24b9be.  v8:= v8 ^< 2;
  #L24b9c2.  v8:= v9[v8] @kind byte;
  #L24b9c6.  v0[v3]:= v8 @kind byte;
  #L24b9ca.  v0[v2]:= v4 @kind byte;
  #L24b9ce.  goto L24ba0c;
  #L24b9d0.  v2:= v3 + 1;
  #L24b9d4.  v5:= v8[v1] @kind byte;
  #L24b9d8.  v5:= v5 ^& 255;
  #L24b9dc.  v5:= v5 ^> 2;
  #L24b9e0.  v5:= v9[v5] @kind byte;
  #L24b9e4.  v0[v3]:= v5 @kind byte;
  #L24b9e8.  v3:= v2 + 1;
  #L24b9ec.  v8:= v8[v1] @kind byte;
  #L24b9f0.  v8:= v8 ^& 3;
  #L24b9f4.  v8:= v8 ^< 4;
  #L24b9f8.  v8:= v9[v8] @kind byte;
  #L24b9fc.  v0[v2]:= v8 @kind byte;
  #L24ba00.  v8:= v3 + 1;
  #L24ba04.  v0[v3]:= v4 @kind byte;
  #L24ba08.  v0[v8]:= v4 @kind byte;
  #L24ba0c.  v8:= new `java.lang.String`;
  #L24ba10.  v9:= "US-ASCII" @kind object;
  #L24ba14.  call `<init>`(v8, v0, v9) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L24ba1a.  return v8 @kind object;
  #L24ba1c.  v8:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L24ba1e.  v9:= new `java.lang.AssertionError`;
  #L24ba22.  call `<init>`(v9, v8) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L24ba28.  throw v9;
  #L24ba2a.  return @kind void;
  #L24ba2c.  switch v2
                  | 1 => goto L24b9d0
                  | 2 => goto L24b970
                  | else => goto L24b96e;
  catch `java.io.UnsupportedEncodingException` @[L24ba0c..L24ba1a] goto L24ba1c;
}
procedure `java.lang.String` `encodeUrl`(`byte`[] v1 @kind object) @signature `Lokio/Base64;.encodeUrl:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24ba5c.  v0:= `@@okio.Base64.URL_MAP` @type ^`byte`[] @kind object;
  #L24ba60.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L24ba66.  v1:= temp @kind object;
  #L24ba68.  return v1 @kind object;
}
