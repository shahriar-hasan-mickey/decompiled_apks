record `okio.Buffer$2` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.Buffer` `okio.Buffer$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Buffer$2` v0 @kind this, `okio.Buffer` v1 @kind object) @signature `Lokio/Buffer$2;.<init>:(Lokio/Buffer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24bcd0.  v0.`okio.Buffer$2.this$0` @type ^`okio.Buffer` := v1 @kind object;
  #L24bcd4.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L24bcda.  return @kind void;
}
procedure `int` `available`(`okio.Buffer$2` v4 @kind this) @signature `Lokio/Buffer$2;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24bc10.  v0:= v4.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L24bc14.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24bc18.  v2:= 2147483647L;
  #L24bc1e.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L24bc24.  v0:= temp @kind wide;
  #L24bc26.  v0:= (`int`) v0 @kind l2i;
  #L24bc28.  return v0;
}
procedure `void` `close`(`okio.Buffer$2` v0 @kind this) @signature `Lokio/Buffer$2;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L24bcec.  return @kind void;
}
procedure `int` `read`(`okio.Buffer$2` v5 @kind this) @signature `Lokio/Buffer$2;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24bc3c.  v0:= v5.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L24bc40.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24bc44.  v2:= 0L;
  #L24bc48.  v4:= lcmp(v0, v2);
  #L24bc4c.  if v4 <= 0 then goto L24bc62;
  #L24bc50.  v0:= v5.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L24bc54.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L24bc5a.  v0:= temp;
  #L24bc5c.  v0:= v0 ^& 255;
  #L24bc60.  return v0;
  #L24bc62.  v0:= -1I;
  #L24bc64.  return v0;
}
procedure `int` `read`(`okio.Buffer$2` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/Buffer$2;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24bc78.  v0:= v1.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L24bc7c.  call temp:= `read`(v0, v2, v3, v4) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L24bc82.  v2:= temp;
  #L24bc84.  return v2;
}
procedure `java.lang.String` `toString`(`okio.Buffer$2` v2 @kind this) @signature `Lokio/Buffer$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24bc98.  v0:= new `java.lang.StringBuilder`;
  #L24bc9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24bca2.  v1:= v2.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L24bca6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24bcac.  v1:= ".inputStream()" @kind object;
  #L24bcb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24bcb6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24bcbc.  v0:= temp @kind object;
  #L24bcbe.  return v0 @kind object;
}
