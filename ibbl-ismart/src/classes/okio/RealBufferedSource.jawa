record `okio.RealBufferedSource` @kind class @AccessFlag FINAL extends `okio.BufferedSource` @kind interface {
  `okio.Buffer` `okio.RealBufferedSource.buffer` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.RealBufferedSource.closed` @AccessFlag ;
  `okio.Source` `okio.RealBufferedSource.source` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okio.RealBufferedSource` v1 @kind this, `okio.Source` v2 @kind object) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L253f68.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L253f6e.  v0:= new `okio.Buffer`;
  #L253f72.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L253f78.  v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L253f7c.  if v2 == 0 then goto L253f86;
  #L253f80.  v1.`okio.RealBufferedSource.source` @type ^`okio.Source` := v2 @kind object;
  #L253f84.  return @kind void;
  #L253f86.  v2:= new `java.lang.NullPointerException`;
  #L253f8a.  v0:= "source == null" @kind object;
  #L253f8e.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253f94.  throw v2;
}
procedure `okio.Buffer` `buffer`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.buffer:()Lokio/Buffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253e90.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253e94.  return v0 @kind object;
}
procedure `void` `close`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253fa8.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L253fac.  if v0 == 0 then goto L253fb2;
  #L253fb0.  return @kind void;
  #L253fb2.  v0:= 1I;
  #L253fb4.  v1.`okio.RealBufferedSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L253fb8.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253fbc.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L253fc2.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253fc6.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L253fcc.  return @kind void;
}
procedure `boolean` `exhausted`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.exhausted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L253134.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L253138.  if v0 != 0 then goto L253174;
  #L25313c.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253140.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L253146.  v0:= temp;
  #L253148.  if v0 == 0 then goto L253170;
  #L25314c.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253150.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253154.  v2:= 8192L;
  #L253158.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L25315e.  v0:= temp @kind wide;
  #L253160.  v2:= -1L;
  #L253164.  v4:= lcmp(v0, v2);
  #L253168.  if v4 != 0 then goto L253170;
  #L25316c.  v0:= 1I;
  #L25316e.  goto L253172;
  #L253170.  v0:= 0I;
  #L253172.  return v0;
  #L253174.  v0:= new `java.lang.IllegalStateException`;
  #L253178.  v1:= "closed" @kind object;
  #L25317c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253182.  throw v0;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 ) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L253910.  v2:= 0L;
  #L253914.  v4:= 9223372036854775807L;
  #L25391e.  v0:= v6 @kind object;
  #L253920.  v1:= v7;
  #L253922.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L253928.  v0:= temp @kind wide;
  #L25392a.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 , `long` v8 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25393c.  v4:= 9223372036854775807L;
  #L253946.  v0:= v6 @kind object;
  #L253948.  v1:= v7;
  #L25394a.  v2:= v8 @kind wide;
  #L25394c.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L253952.  v7:= temp @kind wide;
  #L253954.  return v7 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v9 @kind this, `byte` v10 , `long` v11 , `long` v13 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L253968.  v0:= v9.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L25396c.  if v0 != 0 then goto L253a22;
  #L253970.  v0:= 0L;
  #L253974.  v2:= lcmp(v11, v0);
  #L253978.  if v2 < 0 then goto L2539e8;
  #L25397c.  v0:= lcmp(v13, v11);
  #L253980.  if v0 < 0 then goto L2539e8;
  #L253984.  v7:= -1L;
  #L253988.  v0:= lcmp(v11, v13);
  #L25398c.  if v0 >= 0 then goto L2539e6;
  #L253990.  v1:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253994.  v2:= v10;
  #L253996.  v3:= v11 @kind wide;
  #L253998.  v5:= v13 @kind wide;
  #L25399a.  call temp:= `indexOf`(v1, v2, v3, v5) @signature `Lokio/Buffer;.indexOf:(BJJ)J` @kind virtual;
  #L2539a0.  v0:= temp @kind wide;
  #L2539a2.  v2:= lcmp(v0, v7);
  #L2539a6.  if v2 == 0 then goto L2539ac;
  #L2539aa.  return v0 @kind wide;
  #L2539ac.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2539b0.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L2539b4.  v2:= lcmp(v0, v13);
  #L2539b8.  if v2 >= 0 then goto L2539e4;
  #L2539bc.  v2:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L2539c0.  v3:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2539c4.  v4:= 8192L;
  #L2539c8.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2539ce.  v2:= temp @kind wide;
  #L2539d0.  v4:= lcmp(v2, v7);
  #L2539d4.  if v4 != 0 then goto L2539da;
  #L2539d8.  goto L2539e4;
  #L2539da.  call temp:= `max`(v11, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L2539e0.  v11:= temp @kind wide;
  #L2539e2.  goto L253984;
  #L2539e4.  return v7 @kind wide;
  #L2539e6.  return v7 @kind wide;
  #L2539e8.  v10:= new `java.lang.IllegalArgumentException`;
  #L2539ec.  v0:= 2I;
  #L2539ee.  v0:= new `java.lang.Object`[v0];
  #L2539f2.  v1:= 0I;
  #L2539f4.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2539fa.  v11:= temp @kind object;
  #L2539fc.  v0[v1]:= v11 @kind object;
  #L253a00.  v11:= 1I;
  #L253a02.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L253a08.  v12:= temp @kind object;
  #L253a0a.  v0[v11]:= v12 @kind object;
  #L253a0e.  v11:= "fromIndex=%s toIndex=%s" @kind object;
  #L253a12.  call temp:= `format`(v11, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L253a18.  v11:= temp @kind object;
  #L253a1a.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253a20.  throw v10;
  #L253a22.  v10:= new `java.lang.IllegalStateException`;
  #L253a26.  v11:= "closed" @kind object;
  #L253a2a.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253a30.  throw v10;
  #L253a32.  return @kind void;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253a44.  v0:= 0L;
  #L253a48.  call temp:= `indexOf`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L253a4e.  v0:= temp @kind wide;
  #L253a50.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L253a64.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L253a68.  if v0 != 0 then goto L253ac8;
  #L253a6c.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253a70.  call temp:= `indexOf`(v0, v9, v10) @signature `Lokio/Buffer;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L253a76.  v0:= temp @kind wide;
  #L253a78.  v2:= -1L;
  #L253a7c.  v4:= lcmp(v0, v2);
  #L253a80.  if v4 == 0 then goto L253a86;
  #L253a84.  return v0 @kind wide;
  #L253a86.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253a8a.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L253a8e.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253a92.  v5:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253a96.  v6:= 8192L;
  #L253a9a.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L253aa0.  v4:= temp @kind wide;
  #L253aa2.  v6:= lcmp(v4, v2);
  #L253aa6.  if v6 != 0 then goto L253aac;
  #L253aaa.  return v2 @kind wide;
  #L253aac.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L253ab2.  v2:= temp;
  #L253ab4.  v2:= (`long`) v2 @kind i2l;
  #L253ab6.  v0:= v0 - v2 @kind long;
  #L253ab8.  v2:= 1L;
  #L253abc.  v0:= v0 + v2 @kind long;
  #L253abe.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L253ac4.  v10:= temp @kind wide;
  #L253ac6.  goto L253a6c;
  #L253ac8.  v9:= new `java.lang.IllegalStateException`;
  #L253acc.  v10:= "closed" @kind object;
  #L253ad0.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253ad6.  throw v9;
  #L253ad8.  return @kind void;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253aec.  v0:= 0L;
  #L253af0.  call temp:= `indexOfElement`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L253af6.  v0:= temp @kind wide;
  #L253af8.  return v0 @kind wide;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L253b0c.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L253b10.  if v0 != 0 then goto L253b5e;
  #L253b14.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253b18.  call temp:= `indexOfElement`(v0, v9, v10) @signature `Lokio/Buffer;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L253b1e.  v0:= temp @kind wide;
  #L253b20.  v2:= -1L;
  #L253b24.  v4:= lcmp(v0, v2);
  #L253b28.  if v4 == 0 then goto L253b2e;
  #L253b2c.  return v0 @kind wide;
  #L253b2e.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253b32.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L253b36.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253b3a.  v5:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253b3e.  v6:= 8192L;
  #L253b42.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L253b48.  v4:= temp @kind wide;
  #L253b4a.  v6:= lcmp(v4, v2);
  #L253b4e.  if v6 != 0 then goto L253b54;
  #L253b52.  return v2 @kind wide;
  #L253b54.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L253b5a.  v10:= temp @kind wide;
  #L253b5c.  goto L253b14;
  #L253b5e.  v9:= new `java.lang.IllegalStateException`;
  #L253b62.  v10:= "closed" @kind object;
  #L253b66.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253b6c.  throw v9;
  #L253b6e.  return @kind void;
}
procedure `java.io.InputStream` `inputStream`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.inputStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2535d8.  v0:= new `okio.RealBufferedSource$1`;
  #L2535dc.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @kind direct;
  #L2535e2.  return v0 @kind object;
}
procedure `boolean` `isOpen`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253194.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L253198.  v0:= v0 ^~ 1;
  #L25319c.  return v0;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v6 @kind this, `long` v7 , `okio.ByteString` v9 @kind object) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2531b0.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2531b6.  v5:= temp;
  #L2531b8.  v4:= 0I;
  #L2531ba.  v0:= v6 @kind object;
  #L2531bc.  v1:= v7 @kind wide;
  #L2531be.  v3:= v9 @kind object;
  #L2531c0.  call temp:= `rangeEquals`(v0, v1, v3, v4, v5) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @kind virtual;
  #L2531c6.  v7:= temp;
  #L2531c8.  return v7;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v7 @kind this, `long` v8 , `okio.ByteString` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2531dc.  v0:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L2531e0.  if v0 != 0 then goto L253252;
  #L2531e4.  v0:= 0L;
  #L2531e8.  v2:= 0I;
  #L2531ea.  v3:= lcmp(v8, v0);
  #L2531ee.  if v3 < 0 then goto L253250;
  #L2531f2.  if v11 < 0 then goto L253250;
  #L2531f6.  if v12 < 0 then goto L253250;
  #L2531fa.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L253200.  v0:= temp;
  #L253202.  v0:= v0 - v11 @kind int;
  #L253204.  if v0 >= v12 then goto L25320a;
  #L253208.  goto L253250;
  #L25320a.  v0:= 0I;
  #L25320c.  if v0 >= v12 then goto L25324c;
  #L253210.  v3:= (`long`) v0 @kind i2l;
  #L253212.  v3:= v3 + v8 @kind long;
  #L253214.  v5:= 1L;
  #L253218.  v5:= v5 + v3 @kind long;
  #L25321a.  call temp:= `request`(v7, v5) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L253220.  v1:= temp;
  #L253222.  if v1 != 0 then goto L253228;
  #L253226.  return v2;
  #L253228.  v1:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25322c.  call temp:= `getByte`(v1, v3) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L253232.  v1:= temp;
  #L253234.  v3:= v11 + v0 @kind int;
  #L253238.  call temp:= `getByte`(v10, v3) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L25323e.  v3:= temp;
  #L253240.  if v1 == v3 then goto L253246;
  #L253244.  return v2;
  #L253246.  v0:= v0 + 1;
  #L25324a.  goto L25320c;
  #L25324c.  v8:= 1I;
  #L25324e.  return v8;
  #L253250.  return v2;
  #L253252.  v8:= new `java.lang.IllegalStateException`;
  #L253256.  v9:= "closed" @kind object;
  #L25325a.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253260.  throw v8;
  #L253262.  return @kind void;
}
procedure `int` `read`(`okio.RealBufferedSource` v5 @kind this, `java.nio.ByteBuffer` v6 @kind object) @signature `Lokio/RealBufferedSource;.read:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L253420.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253424.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L253428.  v2:= 0L;
  #L25342c.  v4:= lcmp(v0, v2);
  #L253430.  if v4 != 0 then goto L253458;
  #L253434.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253438.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25343c.  v2:= 8192L;
  #L253440.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L253446.  v0:= temp @kind wide;
  #L253448.  v2:= -1L;
  #L25344c.  v4:= lcmp(v0, v2);
  #L253450.  if v4 != 0 then goto L253458;
  #L253454.  v6:= -1I;
  #L253456.  return v6;
  #L253458.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25345c.  call temp:= `read`(v0, v6) @signature `Lokio/Buffer;.read:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L253462.  v6:= temp;
  #L253464.  return v6;
}
procedure `int` `read`(`okio.RealBufferedSource` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/RealBufferedSource;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253388.  v0:= length @variable v3;
  #L25338a.  v1:= 0I;
  #L25338c.  call temp:= `read`(v2, v3, v1, v0) @signature `Lokio/RealBufferedSource;.read:([BII)I` @kind virtual;
  #L253392.  v3:= temp;
  #L253394.  return v3;
}
procedure `int` `read`(`okio.RealBufferedSource` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2533a8.  v0:= length @variable v10;
  #L2533aa.  v1:= (`long`) v0 @kind i2l;
  #L2533ac.  v3:= (`long`) v11 @kind i2l;
  #L2533ae.  v7:= (`long`) v12 @kind i2l;
  #L2533b0.  v5:= v7 @kind wide;
  #L2533b2.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L2533b8.  v12:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2533bc.  v0:= v12.`okio.Buffer.size` @type ^`long` @kind wide;
  #L2533c0.  v2:= 0L;
  #L2533c4.  v12:= lcmp(v0, v2);
  #L2533c8.  if v12 != 0 then goto L2533f0;
  #L2533cc.  v12:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L2533d0.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2533d4.  v1:= 8192L;
  #L2533d8.  call temp:= `read`(v12, v0, v1) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2533de.  v0:= temp @kind wide;
  #L2533e0.  v2:= -1L;
  #L2533e4.  v12:= lcmp(v0, v2);
  #L2533e8.  if v12 != 0 then goto L2533f0;
  #L2533ec.  v10:= -1I;
  #L2533ee.  return v10;
  #L2533f0.  v12:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2533f4.  v0:= v12.`okio.Buffer.size` @type ^`long` @kind wide;
  #L2533f8.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2533fe.  v0:= temp @kind wide;
  #L253400.  v12:= (`int`) v0 @kind l2i;
  #L253402.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253406.  call temp:= `read`(v0, v10, v11, v12) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L25340c.  v10:= temp;
  #L25340e.  return v10;
}
procedure `long` `read`(`okio.RealBufferedSource` v5 @kind this, `okio.Buffer` v6 @kind object, `long` v7 ) @signature `Lokio/RealBufferedSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L253b80.  if v6 == 0 then goto L253c26;
  #L253b84.  v0:= 0L;
  #L253b88.  v2:= lcmp(v7, v0);
  #L253b8c.  if v2 < 0 then goto L253bf8;
  #L253b90.  v2:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L253b94.  if v2 != 0 then goto L253be8;
  #L253b98.  v2:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253b9c.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L253ba0.  v4:= lcmp(v2, v0);
  #L253ba4.  if v4 != 0 then goto L253bca;
  #L253ba8.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253bac.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253bb0.  v2:= 8192L;
  #L253bb4.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L253bba.  v0:= temp @kind wide;
  #L253bbc.  v2:= -1L;
  #L253bc0.  v4:= lcmp(v0, v2);
  #L253bc4.  if v4 != 0 then goto L253bca;
  #L253bc8.  return v2 @kind wide;
  #L253bca.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253bce.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L253bd2.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L253bd8.  v7:= temp @kind wide;
  #L253bda.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253bde.  call temp:= `read`(v0, v6, v7) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L253be4.  v6:= temp @kind wide;
  #L253be6.  return v6 @kind wide;
  #L253be8.  v6:= new `java.lang.IllegalStateException`;
  #L253bec.  v7:= "closed" @kind object;
  #L253bf0.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253bf6.  throw v6;
  #L253bf8.  v6:= new `java.lang.IllegalArgumentException`;
  #L253bfc.  v0:= new `java.lang.StringBuilder`;
  #L253c00.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L253c06.  v1:= "byteCount < 0: " @kind object;
  #L253c0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253c10.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L253c16.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L253c1c.  v7:= temp @kind object;
  #L253c1e.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253c24.  throw v6;
  #L253c26.  v6:= new `java.lang.IllegalArgumentException`;
  #L253c2a.  v7:= "sink == null" @kind object;
  #L253c2e.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253c34.  throw v6;
}
procedure `long` `readAll`(`okio.RealBufferedSource` v9 @kind this, `okio.Sink` v10 @kind object) @signature `Lokio/RealBufferedSource;.readAll:(Lokio/Sink;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L253c48.  if v10 == 0 then goto L253cca;
  #L253c4c.  v0:= 0L;
  #L253c50.  v2:= v0 @kind wide;
  #L253c52.  v4:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253c56.  v5:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253c5a.  v6:= 8192L;
  #L253c5e.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L253c64.  v4:= temp @kind wide;
  #L253c66.  v6:= -1L;
  #L253c6a.  v8:= lcmp(v4, v6);
  #L253c6e.  if v8 == 0 then goto L253c94;
  #L253c72.  v4:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253c76.  call temp:= `completeSegmentByteCount`(v4) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L253c7c.  v4:= temp @kind wide;
  #L253c7e.  v6:= lcmp(v4, v0);
  #L253c82.  if v6 <= 0 then goto L253c52;
  #L253c86.  v2:= v2 + v4 @kind long;
  #L253c88.  v6:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253c8c.  call `write`(v10, v6, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L253c92.  goto L253c52;
  #L253c94.  v4:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253c98.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L253c9e.  v4:= temp @kind wide;
  #L253ca0.  v6:= lcmp(v4, v0);
  #L253ca4.  if v6 <= 0 then goto L253cc8;
  #L253ca8.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253cac.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L253cb2.  v0:= temp @kind wide;
  #L253cb4.  v2:= v2 + v0 @kind long;
  #L253cb6.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253cba.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L253cc0.  v4:= temp @kind wide;
  #L253cc2.  call `write`(v10, v0, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L253cc8.  return v2 @kind wide;
  #L253cca.  v10:= new `java.lang.IllegalArgumentException`;
  #L253cce.  v0:= "sink == null" @kind object;
  #L253cd2.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253cd8.  throw v10;
  #L253cda.  return @kind void;
}
procedure `byte` `readByte`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253310.  v0:= 1L;
  #L253314.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L25331a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25331e.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L253324.  v0:= temp;
  #L253326.  return v0;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253338.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25333c.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253340.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L253346.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25334a.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L253350.  v0:= temp @kind object;
  #L253352.  return v0 @kind object;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteArray:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253364.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L25336a.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25336e.  call temp:= `readByteArray`(v0, v2) @signature `Lokio/Buffer;.readByteArray:(J)[B` @kind virtual;
  #L253374.  v2:= temp @kind object;
  #L253376.  return v2 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteString:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253ea8.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253eac.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253eb0.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L253eb6.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253eba.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L253ec0.  v0:= temp @kind object;
  #L253ec2.  return v0 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteString:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253ed4.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253eda.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253ede.  call temp:= `readByteString`(v0, v2) @signature `Lokio/Buffer;.readByteString:(J)Lokio/ByteString;` @kind virtual;
  #L253ee4.  v2:= temp @kind object;
  #L253ee6.  return v2 @kind object;
}
procedure `long` `readDecimalLong`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.readDecimalLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L253cec.  v0:= 1L;
  #L253cf0.  call `require`(v6, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253cf6.  v0:= 0I;
  #L253cf8.  v1:= 0I;
  #L253cfa.  v2:= v1 + 1;
  #L253cfe.  v3:= (`long`) v2 @kind i2l;
  #L253d00.  call temp:= `request`(v6, v3) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L253d06.  v3:= temp;
  #L253d08.  if v3 == 0 then goto L253d6c;
  #L253d0c.  v3:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253d10.  v4:= (`long`) v1 @kind i2l;
  #L253d12.  call temp:= `getByte`(v3, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L253d18.  v3:= temp;
  #L253d1a.  v4:= 48I;
  #L253d1e.  if v3 < v4 then goto L253d2a;
  #L253d22.  v4:= 57I;
  #L253d26.  if v3 <= v4 then goto L253d38;
  #L253d2a.  if v1 != 0 then goto L253d3c;
  #L253d2e.  v4:= 45I;
  #L253d32.  if v3 == v4 then goto L253d38;
  #L253d36.  goto L253d3c;
  #L253d38.  v1:= v2;
  #L253d3a.  goto L253cfa;
  #L253d3c.  if v1 == 0 then goto L253d42;
  #L253d40.  goto L253d6c;
  #L253d42.  v1:= new `java.lang.NumberFormatException`;
  #L253d46.  v2:= 1I;
  #L253d48.  v2:= new `java.lang.Object`[v2];
  #L253d4c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L253d52.  v3:= temp @kind object;
  #L253d54.  v2[v0]:= v3 @kind object;
  #L253d58.  v0:= "Expected leading [0-9] or '-' character but was %#x" @kind object;
  #L253d5c.  call temp:= `format`(v0, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L253d62.  v0:= temp @kind object;
  #L253d64.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253d6a.  throw v1;
  #L253d6c.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253d70.  call temp:= `readDecimalLong`(v0) @signature `Lokio/Buffer;.readDecimalLong:()J` @kind virtual;
  #L253d76.  v0:= temp @kind wide;
  #L253d78.  return v0 @kind wide;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokio/RealBufferedSource;.readFully:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25405c.  call `require`(v1, v3) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L254062.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L254066.  call `readFully`(v0, v2, v3) @signature `Lokio/Buffer;.readFully:(Lokio/Buffer;J)V` @kind virtual;
  #L25406c.  return @kind void;
  #L25406e.  v3:= Exception @type ^`java.io.EOFException` @kind object;
  #L254070.  v4:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L254074.  call temp:= `writeAll`(v2, v4) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L25407a.  throw v3;
  catch `java.io.EOFException` @[L25405c..L254062] goto L25406e;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v7 @kind this, `byte`[] v8 @kind object) @signature `Lokio/RealBufferedSource;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L253fe0.  v0:= length @variable v8;
  #L253fe2.  v0:= (`long`) v0 @kind i2l;
  #L253fe4.  call `require`(v7, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253fea.  v0:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253fee.  call `readFully`(v0, v8) @signature `Lokio/Buffer;.readFully:([B)V` @kind virtual;
  #L253ff4.  return @kind void;
  #L253ff6.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L253ff8.  v1:= 0I;
  #L253ffa.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253ffe.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L254002.  v4:= 0L;
  #L254006.  v6:= lcmp(v2, v4);
  #L25400a.  if v6 <= 0 then goto L254036;
  #L25400e.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L254012.  v3:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L254016.  v3:= (`int`) v3 @kind l2i;
  #L254018.  call temp:= `read`(v2, v8, v1, v3) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L25401e.  v2:= temp;
  #L254020.  v3:= -1I;
  #L254022.  if v2 == v3 then goto L25402a;
  #L254026.  v1:= v1 + v2 @kind int;
  #L254028.  goto L253ffa;
  #L25402a.  v8:= new `java.lang.AssertionError`;
  #L25402e.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L254034.  throw v8;
  #L254036.  throw v0;
  #L254038.  return @kind void;
  catch `java.io.EOFException` @[L253fe0..L253fea] goto L253ff6;
}
procedure `long` `readHexadecimalUnsignedLong`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.readHexadecimalUnsignedLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L253d8c.  v0:= 1L;
  #L253d90.  call `require`(v6, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253d96.  v0:= 0I;
  #L253d98.  v1:= 0I;
  #L253d9a.  v2:= v1 + 1;
  #L253d9e.  v3:= (`long`) v2 @kind i2l;
  #L253da0.  call temp:= `request`(v6, v3) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L253da6.  v3:= temp;
  #L253da8.  if v3 == 0 then goto L253e20;
  #L253dac.  v3:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253db0.  v4:= (`long`) v1 @kind i2l;
  #L253db2.  call temp:= `getByte`(v3, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L253db8.  v3:= temp;
  #L253dba.  v4:= 48I;
  #L253dbe.  if v3 < v4 then goto L253dca;
  #L253dc2.  v4:= 57I;
  #L253dc6.  if v3 <= v4 then goto L253dec;
  #L253dca.  v4:= 97I;
  #L253dce.  if v3 < v4 then goto L253dda;
  #L253dd2.  v4:= 102I;
  #L253dd6.  if v3 <= v4 then goto L253dec;
  #L253dda.  v4:= 65I;
  #L253dde.  if v3 < v4 then goto L253df0;
  #L253de2.  v4:= 70I;
  #L253de6.  if v3 <= v4 then goto L253dec;
  #L253dea.  goto L253df0;
  #L253dec.  v1:= v2;
  #L253dee.  goto L253d9a;
  #L253df0.  if v1 == 0 then goto L253df6;
  #L253df4.  goto L253e20;
  #L253df6.  v1:= new `java.lang.NumberFormatException`;
  #L253dfa.  v2:= 1I;
  #L253dfc.  v2:= new `java.lang.Object`[v2];
  #L253e00.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L253e06.  v3:= temp @kind object;
  #L253e08.  v2[v0]:= v3 @kind object;
  #L253e0c.  v0:= "Expected leading [0-9a-fA-F] character but was %#x" @kind object;
  #L253e10.  call temp:= `format`(v0, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L253e16.  v0:= temp @kind object;
  #L253e18.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253e1e.  throw v1;
  #L253e20.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253e24.  call temp:= `readHexadecimalUnsignedLong`(v0) @signature `Lokio/Buffer;.readHexadecimalUnsignedLong:()J` @kind virtual;
  #L253e2a.  v0:= temp @kind wide;
  #L253e2c.  return v0 @kind wide;
}
procedure `int` `readInt`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253478.  v0:= 4L;
  #L25347c.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253482.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253486.  call temp:= `readInt`(v0) @signature `Lokio/Buffer;.readInt:()I` @kind virtual;
  #L25348c.  v0:= temp;
  #L25348e.  return v0;
}
procedure `int` `readIntLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2534a0.  v0:= 4L;
  #L2534a4.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L2534aa.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2534ae.  call temp:= `readIntLe`(v0) @signature `Lokio/Buffer;.readIntLe:()I` @kind virtual;
  #L2534b4.  v0:= temp;
  #L2534b6.  return v0;
}
procedure `long` `readLong`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253e40.  v0:= 8L;
  #L253e44.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253e4a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253e4e.  call temp:= `readLong`(v0) @signature `Lokio/Buffer;.readLong:()J` @kind virtual;
  #L253e54.  v0:= temp @kind wide;
  #L253e56.  return v0 @kind wide;
}
procedure `long` `readLongLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLongLe:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253e68.  v0:= 8L;
  #L253e6c.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253e72.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253e76.  call temp:= `readLongLe`(v0) @signature `Lokio/Buffer;.readLongLe:()J` @kind virtual;
  #L253e7c.  v0:= temp @kind wide;
  #L253e7e.  return v0 @kind wide;
}
procedure `short` `readShort`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253f18.  v0:= 2L;
  #L253f1c.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253f22.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253f26.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L253f2c.  v0:= temp;
  #L253f2e.  return v0;
}
procedure `short` `readShortLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShortLe:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253f40.  v0:= 2L;
  #L253f44.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253f4a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253f4e.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L253f54.  v0:= temp;
  #L253f56.  return v0;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 , `java.nio.charset.Charset` v4 @kind object) @signature `Lokio/RealBufferedSource;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253634.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L25363a.  if v4 == 0 then goto L25364c;
  #L25363e.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253642.  call temp:= `readString`(v0, v2, v4) @signature `Lokio/Buffer;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L253648.  v2:= temp @kind object;
  #L25364a.  return v2 @kind object;
  #L25364c.  v2:= new `java.lang.IllegalArgumentException`;
  #L253650.  v3:= "charset == null" @kind object;
  #L253654.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25365a.  throw v2;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/RealBufferedSource;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2535f4.  if v3 == 0 then goto L253614;
  #L2535f8.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2535fc.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253600.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L253606.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25360a.  call temp:= `readString`(v0, v3) @signature `Lokio/Buffer;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L253610.  v3:= temp @kind object;
  #L253612.  return v3 @kind object;
  #L253614.  v3:= new `java.lang.IllegalArgumentException`;
  #L253618.  v0:= "charset == null" @kind object;
  #L25361c.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253622.  throw v3;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L25366c.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253670.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253674.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L25367a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25367e.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L253684.  v0:= temp @kind object;
  #L253686.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253698.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L25369e.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2536a2.  call temp:= `readUtf8`(v0, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L2536a8.  v2:= temp @kind object;
  #L2536aa.  return v2 @kind object;
}
procedure `int` `readUtf8CodePoint`(`okio.RealBufferedSource` v3 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8CodePoint:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2534c8.  v0:= 1L;
  #L2534cc.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L2534d2.  v0:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2534d6.  v1:= 0L;
  #L2534da.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L2534e0.  v0:= temp;
  #L2534e2.  v1:= v0 ^& 224;
  #L2534e6.  v2:= 192I;
  #L2534ea.  if v1 != v2 then goto L2534fa;
  #L2534ee.  v0:= 2L;
  #L2534f2.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L2534f8.  goto L253528;
  #L2534fa.  v1:= v0 ^& 240;
  #L2534fe.  v2:= 224I;
  #L253502.  if v1 != v2 then goto L253512;
  #L253506.  v0:= 3L;
  #L25350a.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253510.  goto L253528;
  #L253512.  v0:= v0 ^& 248;
  #L253516.  v1:= 240I;
  #L25351a.  if v0 != v1 then goto L253528;
  #L25351e.  v0:= 4L;
  #L253522.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L253528.  v0:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25352c.  call temp:= `readUtf8CodePoint`(v0) @signature `Lokio/Buffer;.readUtf8CodePoint:()I` @kind virtual;
  #L253532.  v0:= temp;
  #L253534.  return v0;
}
procedure `java.lang.String` `readUtf8Line`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8Line:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2536bc.  v0:= 10I;
  #L2536c0.  call temp:= `indexOf`(v5, v0) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L2536c6.  v0:= temp @kind wide;
  #L2536c8.  v2:= -1L;
  #L2536cc.  v4:= lcmp(v0, v2);
  #L2536d0.  if v4 != 0 then goto L2536fe;
  #L2536d4.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2536d8.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L2536dc.  v2:= 0L;
  #L2536e0.  v4:= lcmp(v0, v2);
  #L2536e4.  if v4 == 0 then goto L2536fa;
  #L2536e8.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2536ec.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L2536f0.  call temp:= `readUtf8`(v5, v0) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L2536f6.  v0:= temp @kind object;
  #L2536f8.  goto L2536fc;
  #L2536fa.  v0:= 0I;
  #L2536fc.  return v0 @kind object;
  #L2536fe.  v2:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253702.  call temp:= `readUtf8Line`(v2, v0) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L253708.  v0:= temp @kind object;
  #L25370a.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L25371c.  v0:= 9223372036854775807L;
  #L253726.  call temp:= `readUtf8LineStrict`(v2, v0) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @kind virtual;
  #L25372c.  v0:= temp @kind object;
  #L25372e.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v12 @kind this, `long` v13 ) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L253740.  v0:= 0L;
  #L253744.  v2:= lcmp(v13, v0);
  #L253748.  if v2 < 0 then goto L25388e;
  #L25374c.  v0:= 1L;
  #L253750.  v2:= 9223372036854775807L;
  #L25375a.  v4:= lcmp(v13, v2);
  #L25375e.  if v4 != 0 then goto L253766;
  #L253762.  v4:= v2 @kind wide;
  #L253764.  goto L25376a;
  #L253766.  v4:= v13 + v0 @kind long;
  #L25376a.  v7:= 10I;
  #L25376e.  v8:= 0L;
  #L253772.  v6:= v12 @kind object;
  #L253774.  v10:= v4 @kind wide;
  #L253776.  call temp:= `indexOf`(v6, v7, v8, v10) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L25377c.  v6:= temp @kind wide;
  #L25377e.  v8:= -1L;
  #L253782.  v10:= lcmp(v6, v8);
  #L253786.  if v10 == 0 then goto L253798;
  #L25378a.  v13:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25378e.  call temp:= `readUtf8Line`(v13, v6) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L253794.  v13:= temp @kind object;
  #L253796.  return v13 @kind object;
  #L253798.  v6:= lcmp(v4, v2);
  #L25379c.  if v6 >= 0 then goto L2537f4;
  #L2537a0.  call temp:= `request`(v12, v4) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L2537a6.  v2:= temp;
  #L2537a8.  if v2 == 0 then goto L2537f4;
  #L2537ac.  v2:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2537b0.  v6:= v4 - v0 @kind long;
  #L2537b4.  call temp:= `getByte`(v2, v6) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L2537ba.  v2:= temp;
  #L2537bc.  v3:= 13I;
  #L2537c0.  if v2 != v3 then goto L2537f4;
  #L2537c4.  v0:= v0 + v4 @kind long;
  #L2537c6.  call temp:= `request`(v12, v0) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L2537cc.  v0:= temp;
  #L2537ce.  if v0 == 0 then goto L2537f4;
  #L2537d2.  v0:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2537d6.  call temp:= `getByte`(v0, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L2537dc.  v0:= temp;
  #L2537de.  v1:= 10I;
  #L2537e2.  if v0 != v1 then goto L2537f4;
  #L2537e6.  v13:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2537ea.  call temp:= `readUtf8Line`(v13, v4) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L2537f0.  v13:= temp @kind object;
  #L2537f2.  return v13 @kind object;
  #L2537f4.  v6:= new `okio.Buffer`;
  #L2537f8.  call `<init>`(v6) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2537fe.  v0:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253802.  v2:= 0L;
  #L253806.  v4:= 32L;
  #L25380a.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L253810.  v7:= temp @kind wide;
  #L253812.  call temp:= `min`(v4, v7) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L253818.  v4:= temp @kind wide;
  #L25381a.  v1:= v6 @kind object;
  #L25381c.  call temp:= `copyTo`(v0, v1, v2, v4) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L253822.  v0:= new `java.io.EOFException`;
  #L253826.  v1:= new `java.lang.StringBuilder`;
  #L25382a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L253830.  v2:= "\\n not found: limit=" @kind object;
  #L253834.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25383a.  v2:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25383e.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L253844.  v2:= temp @kind wide;
  #L253846.  call temp:= `min`(v2, v13) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L25384c.  v13:= temp @kind wide;
  #L25384e.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L253854.  v13:= " content=" @kind object;
  #L253858.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25385e.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L253864.  v13:= temp @kind object;
  #L253866.  call temp:= `hex`(v13) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L25386c.  v13:= temp @kind object;
  #L25386e.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253874.  v13:= 8230I;
  #L253878.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L25387e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L253884.  v13:= temp @kind object;
  #L253886.  call `<init>`(v0, v13) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25388c.  throw v0;
  #L25388e.  v0:= new `java.lang.IllegalArgumentException`;
  #L253892.  v1:= new `java.lang.StringBuilder`;
  #L253896.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25389c.  v2:= "limit < 0: " @kind object;
  #L2538a0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2538a6.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2538ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2538b2.  v13:= temp @kind object;
  #L2538b4.  call `<init>`(v0, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2538ba.  throw v0;
}
procedure `boolean` `request`(`okio.RealBufferedSource` v5 @kind this, `long` v6 ) @signature `Lokio/RealBufferedSource;.request:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L253274.  v0:= 0L;
  #L253278.  v2:= lcmp(v6, v0);
  #L25327c.  if v2 < 0 then goto L2532d0;
  #L253280.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L253284.  if v0 != 0 then goto L2532c0;
  #L253288.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25328c.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L253290.  v2:= lcmp(v0, v6);
  #L253294.  if v2 >= 0 then goto L2532bc;
  #L253298.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L25329c.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2532a0.  v2:= 8192L;
  #L2532a4.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2532aa.  v0:= temp @kind wide;
  #L2532ac.  v2:= -1L;
  #L2532b0.  v4:= lcmp(v0, v2);
  #L2532b4.  if v4 != 0 then goto L253288;
  #L2532b8.  v6:= 0I;
  #L2532ba.  return v6;
  #L2532bc.  v6:= 1I;
  #L2532be.  return v6;
  #L2532c0.  v6:= new `java.lang.IllegalStateException`;
  #L2532c4.  v7:= "closed" @kind object;
  #L2532c8.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2532ce.  throw v6;
  #L2532d0.  v0:= new `java.lang.IllegalArgumentException`;
  #L2532d4.  v1:= new `java.lang.StringBuilder`;
  #L2532d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2532de.  v2:= "byteCount < 0: " @kind object;
  #L2532e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2532e8.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2532ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2532f4.  v6:= temp @kind object;
  #L2532f6.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2532fc.  throw v0;
  #L2532fe.  return @kind void;
}
procedure `void` `require`(`okio.RealBufferedSource` v0 @kind this, `long` v1 ) @signature `Lokio/RealBufferedSource;.require:(J)V` @AccessFlag PUBLIC {
    temp;

  #L25409c.  call temp:= `request`(v0, v1) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L2540a2.  v1:= temp;
  #L2540a4.  if v1 == 0 then goto L2540aa;
  #L2540a8.  return @kind void;
  #L2540aa.  v1:= new `java.io.EOFException`;
  #L2540ae.  call `<init>`(v1) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L2540b4.  throw v1;
}
procedure `int` `select`(`okio.RealBufferedSource` v7 @kind this, `okio.Options` v8 @kind object) @signature `Lokio/RealBufferedSource;.select:(Lokio/Options;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L253548.  v0:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L25354c.  if v0 != 0 then goto L2535b4;
  #L253550.  v0:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L253554.  call temp:= `selectPrefix`(v0, v8) @signature `Lokio/Buffer;.selectPrefix:(Lokio/Options;)I` @kind virtual;
  #L25355a.  v0:= temp;
  #L25355c.  v1:= -1I;
  #L25355e.  if v0 != v1 then goto L253564;
  #L253562.  return v1;
  #L253564.  v2:= v8.`okio.Options.byteStrings` @type ^`okio.ByteString`[] @kind object;
  #L253568.  v2:= v2[v0] @kind object;
  #L25356c.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L253572.  v2:= temp;
  #L253574.  v2:= (`long`) v2 @kind i2l;
  #L253576.  v4:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25357a.  v4:= v4.`okio.Buffer.size` @type ^`long` @kind wide;
  #L25357e.  v6:= lcmp(v2, v4);
  #L253582.  if v6 > 0 then goto L253592;
  #L253586.  v8:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25358a.  call `skip`(v8, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L253590.  return v0;
  #L253592.  v0:= v7.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253596.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25359a.  v3:= 8192L;
  #L25359e.  call temp:= `read`(v0, v2, v3) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2535a4.  v2:= temp @kind wide;
  #L2535a6.  v4:= -1L;
  #L2535aa.  v0:= lcmp(v2, v4);
  #L2535ae.  if v0 != 0 then goto L253550;
  #L2535b2.  return v1;
  #L2535b4.  v8:= new `java.lang.IllegalStateException`;
  #L2535b8.  v0:= "closed" @kind object;
  #L2535bc.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2535c2.  throw v8;
  #L2535c4.  return @kind void;
}
procedure `void` `skip`(`okio.RealBufferedSource` v5 @kind this, `long` v6 ) @signature `Lokio/RealBufferedSource;.skip:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2540c8.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L2540cc.  if v0 != 0 then goto L25413e;
  #L2540d0.  v0:= 0L;
  #L2540d4.  v2:= lcmp(v6, v0);
  #L2540d8.  if v2 <= 0 then goto L25413c;
  #L2540dc.  v2:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2540e0.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L2540e4.  v4:= lcmp(v2, v0);
  #L2540e8.  if v4 != 0 then goto L25411a;
  #L2540ec.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L2540f0.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2540f4.  v2:= 8192L;
  #L2540f8.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2540fe.  v0:= temp @kind wide;
  #L254100.  v2:= -1L;
  #L254104.  v4:= lcmp(v0, v2);
  #L254108.  if v4 == 0 then goto L25410e;
  #L25410c.  goto L25411a;
  #L25410e.  v6:= new `java.io.EOFException`;
  #L254112.  call `<init>`(v6) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L254118.  throw v6;
  #L25411a.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L25411e.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L254124.  v0:= temp @kind wide;
  #L254126.  call temp:= `min`(v6, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L25412c.  v0:= temp @kind wide;
  #L25412e.  v2:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L254132.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L254138.  v6:= v6 - v0 @kind long;
  #L25413a.  goto L2540d0;
  #L25413c.  return @kind void;
  #L25413e.  v6:= new `java.lang.IllegalStateException`;
  #L254142.  v7:= "closed" @kind object;
  #L254146.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25414c.  throw v6;
  #L25414e.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253ef8.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L253efc.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L253f02.  v0:= temp @kind object;
  #L253f04.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2538cc.  v0:= new `java.lang.StringBuilder`;
  #L2538d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2538d6.  v1:= "buffer(" @kind object;
  #L2538da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2538e0.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L2538e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2538ea.  v1:= ")" @kind object;
  #L2538ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2538f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2538fa.  v0:= temp @kind object;
  #L2538fc.  return v0 @kind object;
}
