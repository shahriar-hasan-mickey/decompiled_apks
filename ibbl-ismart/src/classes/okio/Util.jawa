record `okio.Util` @kind class @AccessFlag FINAL {
}
global `java.nio.charset.Charset` `@@okio.Util.UTF_8` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L25536c.  v0:= "UTF-8" @kind object;
  #L255370.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L255376.  v0:= temp @kind object;
  #L255378.  `@@okio.Util.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L25537c.  return @kind void;
}
procedure `void` `<init>`(`okio.Util` v0 @kind this) @signature `Lokio/Util;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L255390.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L255396.  return @kind void;
}
procedure `boolean` `arrayRangeEquals`(`byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lokio/Util;.arrayRangeEquals:([BI[BII)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L255238.  v0:= 0I;
  #L25523a.  v1:= 0I;
  #L25523c.  if v1 >= v8 then goto L25525c;
  #L255240.  v2:= v1 + v5 @kind int;
  #L255244.  v2:= v4[v2] @kind byte;
  #L255248.  v3:= v1 + v7 @kind int;
  #L25524c.  v3:= v6[v3] @kind byte;
  #L255250.  if v2 == v3 then goto L255256;
  #L255254.  return v0;
  #L255256.  v1:= v1 + 1;
  #L25525a.  goto L25523c;
  #L25525c.  v4:= 1I;
  #L25525e.  return v4;
}
procedure `void` `checkOffsetAndCount`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2553a8.  v0:= v7 ^| v9 @kind long;
  #L2553ac.  v2:= 0L;
  #L2553b0.  v4:= lcmp(v0, v2);
  #L2553b4.  if v4 < 0 then goto L2553ce;
  #L2553b8.  v0:= lcmp(v7, v5);
  #L2553bc.  if v0 > 0 then goto L2553ce;
  #L2553c0.  v0:= v5 - v7 @kind long;
  #L2553c4.  v2:= lcmp(v0, v9);
  #L2553c8.  if v2 < 0 then goto L2553ce;
  #L2553cc.  return @kind void;
  #L2553ce.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2553d2.  v1:= 3I;
  #L2553d4.  v1:= new `java.lang.Object`[v1];
  #L2553d8.  v2:= 0I;
  #L2553da.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2553e0.  v5:= temp @kind object;
  #L2553e2.  v1[v2]:= v5 @kind object;
  #L2553e6.  v5:= 1I;
  #L2553e8.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2553ee.  v6:= temp @kind object;
  #L2553f0.  v1[v5]:= v6 @kind object;
  #L2553f4.  v5:= 2I;
  #L2553f6.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2553fc.  v6:= temp @kind object;
  #L2553fe.  v1[v5]:= v6 @kind object;
  #L255402.  v5:= "size=%s offset=%s byteCount=%s" @kind object;
  #L255406.  call temp:= `format`(v5, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L25540c.  v5:= temp @kind object;
  #L25540e.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L255414.  throw v0;
}
procedure `int` `reverseBytesInt`(`int` v2 ) @signature `Lokio/Util;.reverseBytesInt:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L255270.  v0:= -16777216I;
  #L255274.  v0:= v0 ^& v2 @kind int;
  #L255276.  v0:= v0 ^>> 24;
  #L25527a.  v1:= 16711680I;
  #L25527e.  v1:= v1 ^& v2 @kind int;
  #L255280.  v1:= v1 ^>> 8;
  #L255284.  v0:= v0 ^| v1 @kind int;
  #L255286.  v1:= 65280I;
  #L25528c.  v1:= v1 ^& v2 @kind int;
  #L25528e.  v1:= v1 ^< 8;
  #L255292.  v0:= v0 ^| v1 @kind int;
  #L255294.  v2:= v2 ^& 255;
  #L255298.  v2:= v2 ^< 24;
  #L25529c.  v2:= v2 ^| v0 @kind int;
  #L25529e.  return v2;
}
procedure `long` `reverseBytesLong`(`long` v8 ) @signature `Lokio/Util;.reverseBytesLong:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2552b0.  v0:= -72057594037927936L;
  #L2552b4.  v0:= v0 ^& v8 @kind long;
  #L2552b6.  v2:= 56I;
  #L2552ba.  v0:= v0 ^>> v2 @kind long;
  #L2552bc.  v3:= 71776119061217280L;
  #L2552c0.  v3:= v3 ^& v8 @kind long;
  #L2552c2.  v5:= 40I;
  #L2552c6.  v3:= v3 ^>> v5 @kind long;
  #L2552c8.  v0:= v0 ^| v3 @kind long;
  #L2552ca.  v3:= 280375465082880L;
  #L2552d4.  v3:= v3 ^& v8 @kind long;
  #L2552d6.  v6:= 24I;
  #L2552da.  v3:= v3 ^>> v6 @kind long;
  #L2552dc.  v0:= v0 ^| v3 @kind long;
  #L2552de.  v3:= 1095216660480L;
  #L2552e8.  v3:= v3 ^& v8 @kind long;
  #L2552ea.  v7:= 8I;
  #L2552ee.  v3:= v3 ^>> v7 @kind long;
  #L2552f0.  v0:= v0 ^| v3 @kind long;
  #L2552f2.  v3:= 4278190080L;
  #L2552fc.  v3:= v3 ^& v8 @kind long;
  #L2552fe.  v3:= v3 ^< v7 @kind long;
  #L255300.  v0:= v0 ^| v3 @kind long;
  #L255302.  v3:= 16711680L;
  #L255308.  v3:= v3 ^& v8 @kind long;
  #L25530a.  v3:= v3 ^< v6 @kind long;
  #L25530c.  v0:= v0 ^| v3 @kind long;
  #L25530e.  v3:= 65280L;
  #L255314.  v3:= v3 ^& v8 @kind long;
  #L255316.  v3:= v3 ^< v5 @kind long;
  #L255318.  v0:= v0 ^| v3 @kind long;
  #L25531a.  v3:= 255L;
  #L25531e.  v8:= v8 ^& v3 @kind long;
  #L255320.  v8:= v8 ^< v2 @kind long;
  #L255322.  v8:= v8 ^| v0 @kind long;
  #L255324.  return v8 @kind wide;
}
procedure `short` `reverseBytesShort`(`short` v1 ) @signature `Lokio/Util;.reverseBytesShort:(S)S` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L255338.  v0:= 65535I;
  #L25533e.  v1:= v1 ^& v0 @kind int;
  #L255340.  v0:= 65280I;
  #L255346.  v0:= v0 ^& v1 @kind int;
  #L255348.  v0:= v0 ^>> 8;
  #L25534c.  v1:= v1 ^& 255;
  #L255350.  v1:= v1 ^< 8;
  #L255354.  v1:= v1 ^| v0 @kind int;
  #L255356.  v1:= (`short`) v1 @kind i2s;
  #L255358.  return v1;
}
procedure `void` `sneakyRethrow`(`java.lang.Throwable` v0 @kind object) @signature `Lokio/Util;.sneakyRethrow:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L255428.  call `sneakyThrow2`(v0) @signature `Lokio/Util;.sneakyThrow2:(Ljava/lang/Throwable;)V` @kind static;
  #L25542e.  return @kind void;
}
procedure `void` `sneakyThrow2`(`java.lang.Throwable` v0 @kind object) @signature `Lokio/Util;.sneakyThrow2:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L255440.  throw v0;
}
