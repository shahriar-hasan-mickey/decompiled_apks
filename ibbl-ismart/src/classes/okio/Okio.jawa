record `okio.Okio` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@okio.Okio.logger` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Okio;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2521b0.  v0:= constclass @type ^`okio.Okio` @kind object;
  #L2521b4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2521ba.  v0:= temp @kind object;
  #L2521bc.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2521c2.  v0:= temp @kind object;
  #L2521c4.  `@@okio.Okio.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L2521c8.  return @kind void;
}
procedure `void` `<init>`(`okio.Okio` v0 @kind this) @signature `Lokio/Okio;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2521dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2521e2.  return @kind void;
}
procedure `okio.Sink` `appendingSink`(`java.io.File` v2 @kind object) @signature `Lokio/Okio;.appendingSink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L251ee0.  if v2 == 0 then goto L251efa;
  #L251ee4.  v0:= new `java.io.FileOutputStream`;
  #L251ee8.  v1:= 1I;
  #L251eea.  call `<init>`(v0, v2, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L251ef0.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L251ef6.  v2:= temp @kind object;
  #L251ef8.  return v2 @kind object;
  #L251efa.  v2:= new `java.lang.IllegalArgumentException`;
  #L251efe.  v0:= "file == null" @kind object;
  #L251f02.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251f08.  throw v2;
}
procedure `okio.Sink` `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L251f1c.  v0:= new `okio.Okio$3`;
  #L251f20.  call `<init>`(v0) @signature `Lokio/Okio$3;.<init>:()V` @kind direct;
  #L251f26.  return v0 @kind object;
}
procedure `okio.BufferedSink` `buffer`(`okio.Sink` v1 @kind object) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L251ea8.  v0:= new `okio.RealBufferedSink`;
  #L251eac.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L251eb2.  return v0 @kind object;
}
procedure `okio.BufferedSource` `buffer`(`okio.Source` v1 @kind object) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L251ec4.  v0:= new `okio.RealBufferedSource`;
  #L251ec8.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L251ece.  return v0 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v1 @kind object) @signature `Lokio/Okio;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L251e44.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L251e4a.  v0:= temp @kind object;
  #L251e4c.  if v0 == 0 then goto L251e78;
  #L251e50.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L251e56.  v0:= temp @kind object;
  #L251e58.  if v0 == 0 then goto L251e78;
  #L251e5c.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L251e62.  v1:= temp @kind object;
  #L251e64.  v0:= "getsockname failed" @kind object;
  #L251e68.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L251e6e.  v1:= temp;
  #L251e70.  if v1 == 0 then goto L251e78;
  #L251e74.  v1:= 1I;
  #L251e76.  goto L251e7a;
  #L251e78.  v1:= 0I;
  #L251e7a.  return v1;
}
procedure `okio.Sink` `sink`(`java.io.File` v1 @kind object) @signature `Lokio/Okio;.sink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L251f38.  if v1 == 0 then goto L251f50;
  #L251f3c.  v0:= new `java.io.FileOutputStream`;
  #L251f40.  call `<init>`(v0, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L251f46.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L251f4c.  v1:= temp @kind object;
  #L251f4e.  return v1 @kind object;
  #L251f50.  v1:= new `java.lang.IllegalArgumentException`;
  #L251f54.  v0:= "file == null" @kind object;
  #L251f58.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251f5e.  throw v1;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v1 @kind object) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L251f70.  v0:= new `okio.Timeout`;
  #L251f74.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L251f7a.  call temp:= `sink`(v1, v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L251f80.  v1:= temp @kind object;
  #L251f82.  return v1 @kind object;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v1 @kind object, `okio.Timeout` v2 @kind object) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L251f94.  if v1 == 0 then goto L251fb8;
  #L251f98.  if v2 == 0 then goto L251fa8;
  #L251f9c.  v0:= new `okio.Okio$1`;
  #L251fa0.  call `<init>`(v0, v2, v1) @signature `Lokio/Okio$1;.<init>:(Lokio/Timeout;Ljava/io/OutputStream;)V` @kind direct;
  #L251fa6.  return v0 @kind object;
  #L251fa8.  v1:= new `java.lang.IllegalArgumentException`;
  #L251fac.  v2:= "timeout == null" @kind object;
  #L251fb0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251fb6.  throw v1;
  #L251fb8.  v1:= new `java.lang.IllegalArgumentException`;
  #L251fbc.  v2:= "out == null" @kind object;
  #L251fc0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L251fc6.  throw v1;
}
procedure `okio.Sink` `sink`(`java.net.Socket` v1 @kind object) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L251fd8.  if v1 == 0 then goto L25201a;
  #L251fdc.  call temp:= `getOutputStream`(v1) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L251fe2.  v0:= temp @kind object;
  #L251fe4.  if v0 == 0 then goto L25200a;
  #L251fe8.  call temp:= `timeout`(v1) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L251fee.  v0:= temp @kind object;
  #L251ff0.  call temp:= `getOutputStream`(v1) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L251ff6.  v1:= temp @kind object;
  #L251ff8.  call temp:= `sink`(v1, v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L251ffe.  v1:= temp @kind object;
  #L252000.  call temp:= `sink`(v0, v1) @signature `Lokio/AsyncTimeout;.sink:(Lokio/Sink;)Lokio/Sink;` @kind virtual;
  #L252006.  v1:= temp @kind object;
  #L252008.  return v1 @kind object;
  #L25200a.  v1:= new `java.io.IOException`;
  #L25200e.  v0:= "socket's output stream == null" @kind object;
  #L252012.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252018.  throw v1;
  #L25201a.  v1:= new `java.lang.IllegalArgumentException`;
  #L25201e.  v0:= "socket == null" @kind object;
  #L252022.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252028.  throw v1;
}
procedure `okio.Sink` `sink`(`java.nio.file.Path` v0 @kind object, `java.nio.file.OpenOption`[] v1 @kind object) @signature `Lokio/Okio;.sink:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L25203c.  if v0 == 0 then goto L252052;
  #L252040.  call temp:= `newOutputStream`(v0, v1) @signature `Ljava/nio/file/Files;.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;` @kind static;
  #L252046.  v0:= temp @kind object;
  #L252048.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L25204e.  v0:= temp @kind object;
  #L252050.  return v0 @kind object;
  #L252052.  v0:= new `java.lang.IllegalArgumentException`;
  #L252056.  v1:= "path == null" @kind object;
  #L25205a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252060.  throw v0;
}
procedure `okio.Source` `source`(`java.io.File` v1 @kind object) @signature `Lokio/Okio;.source:(Ljava/io/File;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L252074.  if v1 == 0 then goto L25208c;
  #L252078.  v0:= new `java.io.FileInputStream`;
  #L25207c.  call `<init>`(v0, v1) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L252082.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L252088.  v1:= temp @kind object;
  #L25208a.  return v1 @kind object;
  #L25208c.  v1:= new `java.lang.IllegalArgumentException`;
  #L252090.  v0:= "file == null" @kind object;
  #L252094.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25209a.  throw v1;
}
procedure `okio.Source` `source`(`java.io.InputStream` v1 @kind object) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2520ac.  v0:= new `okio.Timeout`;
  #L2520b0.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L2520b6.  call temp:= `source`(v1, v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L2520bc.  v1:= temp @kind object;
  #L2520be.  return v1 @kind object;
}
procedure `okio.Source` `source`(`java.io.InputStream` v1 @kind object, `okio.Timeout` v2 @kind object) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2520d0.  if v1 == 0 then goto L2520f4;
  #L2520d4.  if v2 == 0 then goto L2520e4;
  #L2520d8.  v0:= new `okio.Okio$2`;
  #L2520dc.  call `<init>`(v0, v2, v1) @signature `Lokio/Okio$2;.<init>:(Lokio/Timeout;Ljava/io/InputStream;)V` @kind direct;
  #L2520e2.  return v0 @kind object;
  #L2520e4.  v1:= new `java.lang.IllegalArgumentException`;
  #L2520e8.  v2:= "timeout == null" @kind object;
  #L2520ec.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2520f2.  throw v1;
  #L2520f4.  v1:= new `java.lang.IllegalArgumentException`;
  #L2520f8.  v2:= "in == null" @kind object;
  #L2520fc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252102.  throw v1;
}
procedure `okio.Source` `source`(`java.net.Socket` v1 @kind object) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L252114.  if v1 == 0 then goto L252156;
  #L252118.  call temp:= `getInputStream`(v1) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L25211e.  v0:= temp @kind object;
  #L252120.  if v0 == 0 then goto L252146;
  #L252124.  call temp:= `timeout`(v1) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L25212a.  v0:= temp @kind object;
  #L25212c.  call temp:= `getInputStream`(v1) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L252132.  v1:= temp @kind object;
  #L252134.  call temp:= `source`(v1, v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L25213a.  v1:= temp @kind object;
  #L25213c.  call temp:= `source`(v0, v1) @signature `Lokio/AsyncTimeout;.source:(Lokio/Source;)Lokio/Source;` @kind virtual;
  #L252142.  v1:= temp @kind object;
  #L252144.  return v1 @kind object;
  #L252146.  v1:= new `java.io.IOException`;
  #L25214a.  v0:= "socket's input stream == null" @kind object;
  #L25214e.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252154.  throw v1;
  #L252156.  v1:= new `java.lang.IllegalArgumentException`;
  #L25215a.  v0:= "socket == null" @kind object;
  #L25215e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252164.  throw v1;
}
procedure `okio.Source` `source`(`java.nio.file.Path` v0 @kind object, `java.nio.file.OpenOption`[] v1 @kind object) @signature `Lokio/Okio;.source:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L252178.  if v0 == 0 then goto L25218e;
  #L25217c.  call temp:= `newInputStream`(v0, v1) @signature `Ljava/nio/file/Files;.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;` @kind static;
  #L252182.  v0:= temp @kind object;
  #L252184.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L25218a.  v0:= temp @kind object;
  #L25218c.  return v0 @kind object;
  #L25218e.  v0:= new `java.lang.IllegalArgumentException`;
  #L252192.  v1:= "path == null" @kind object;
  #L252196.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25219c.  throw v0;
}
procedure `okio.AsyncTimeout` `timeout`(`java.net.Socket` v1 @kind object) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L251e8c.  v0:= new `okio.Okio$4`;
  #L251e90.  call `<init>`(v0, v1) @signature `Lokio/Okio$4;.<init>:(Ljava/net/Socket;)V` @kind direct;
  #L251e96.  return v0 @kind object;
}
