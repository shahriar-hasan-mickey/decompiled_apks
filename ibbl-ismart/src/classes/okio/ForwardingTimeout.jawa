record `okio.ForwardingTimeout` @kind class @AccessFlag PUBLIC extends `okio.Timeout` @kind class {
  `okio.Timeout` `okio.ForwardingTimeout.delegate` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okio.ForwardingTimeout` v1 @kind this, `okio.Timeout` v2 @kind object) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L250aec.  call `<init>`(v1) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L250af2.  if v2 == 0 then goto L250afc;
  #L250af6.  v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` := v2 @kind object;
  #L250afa.  return @kind void;
  #L250afc.  v2:= new `java.lang.IllegalArgumentException`;
  #L250b00.  v0:= "delegate == null" @kind object;
  #L250b04.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L250b0a.  throw v2;
}
procedure `okio.Timeout` `clearDeadline`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.clearDeadline:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L250a54.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L250a58.  call temp:= `clearDeadline`(v0) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L250a5e.  v0:= temp @kind object;
  #L250a60.  return v0 @kind object;
}
procedure `okio.Timeout` `clearTimeout`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.clearTimeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L250a74.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L250a78.  call temp:= `clearTimeout`(v0) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #L250a7e.  v0:= temp @kind object;
  #L250a80.  return v0 @kind object;
}
procedure `long` `deadlineNanoTime`(`okio.ForwardingTimeout` v2 @kind this) @signature `Lokio/ForwardingTimeout;.deadlineNanoTime:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2509e8.  v0:= v2.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L2509ec.  call temp:= `deadlineNanoTime`(v0) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L2509f2.  v0:= temp @kind wide;
  #L2509f4.  return v0 @kind wide;
}
procedure `okio.Timeout` `deadlineNanoTime`(`okio.ForwardingTimeout` v1 @kind this, `long` v2 ) @signature `Lokio/ForwardingTimeout;.deadlineNanoTime:(J)Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L250a94.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L250a98.  call temp:= `deadlineNanoTime`(v0, v2) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L250a9e.  v2:= temp @kind object;
  #L250aa0.  return v2 @kind object;
}
procedure `okio.Timeout` `delegate`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.delegate:()Lokio/Timeout;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L250ab4.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L250ab8.  return v0 @kind object;
}
procedure `boolean` `hasDeadline`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.hasDeadline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2509c8.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L2509cc.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L2509d2.  v0:= temp;
  #L2509d4.  return v0;
}
procedure `okio.ForwardingTimeout` `setDelegate`(`okio.ForwardingTimeout` v1 @kind this, `okio.Timeout` v2 @kind object) @signature `Lokio/ForwardingTimeout;.setDelegate:(Lokio/Timeout;)Lokio/ForwardingTimeout;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L250a28.  if v2 == 0 then goto L250a32;
  #L250a2c.  v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` := v2 @kind object;
  #L250a30.  return v1 @kind object;
  #L250a32.  v2:= new `java.lang.IllegalArgumentException`;
  #L250a36.  v0:= "delegate == null" @kind object;
  #L250a3a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L250a40.  throw v2;
}
procedure `void` `throwIfReached`(`okio.ForwardingTimeout` v1 @kind this) @signature `Lokio/ForwardingTimeout;.throwIfReached:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L250b1c.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L250b20.  call `throwIfReached`(v0) @signature `Lokio/Timeout;.throwIfReached:()V` @kind virtual;
  #L250b26.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.ForwardingTimeout` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lokio/ForwardingTimeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L250acc.  v0:= v1.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L250ad0.  call temp:= `timeout`(v0, v2, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L250ad6.  v2:= temp @kind object;
  #L250ad8.  return v2 @kind object;
}
procedure `long` `timeoutNanos`(`okio.ForwardingTimeout` v2 @kind this) @signature `Lokio/ForwardingTimeout;.timeoutNanos:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L250a08.  v0:= v2.`okio.ForwardingTimeout.delegate` @type ^`okio.Timeout` @kind object;
  #L250a0c.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L250a12.  v0:= temp @kind wide;
  #L250a14.  return v0 @kind wide;
}
