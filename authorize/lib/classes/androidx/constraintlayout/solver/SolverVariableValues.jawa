record `androidx.constraintlayout.solver.SolverVariableValues` @kind class @AccessFlag PUBLIC extends `androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables` @kind interface {
  `int` `androidx.constraintlayout.solver.SolverVariableValues.HASH_SIZE` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.solver.SolverVariableValues.NONE` @AccessFlag PRIVATE_FINAL;
  `int` `androidx.constraintlayout.solver.SolverVariableValues.SIZE` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.solver.SolverVariableValues.head` @AccessFlag ;
  `int`[] `androidx.constraintlayout.solver.SolverVariableValues.keys` @AccessFlag ;
  `androidx.constraintlayout.solver.Cache` `androidx.constraintlayout.solver.SolverVariableValues.mCache` @AccessFlag PROTECTED_FINAL;
  `int` `androidx.constraintlayout.solver.SolverVariableValues.mCount` @AccessFlag ;
  `androidx.constraintlayout.solver.ArrayRow` `androidx.constraintlayout.solver.SolverVariableValues.mRow` @AccessFlag PRIVATE_FINAL;
  `int`[] `androidx.constraintlayout.solver.SolverVariableValues.next` @AccessFlag ;
  `int`[] `androidx.constraintlayout.solver.SolverVariableValues.nextKeys` @AccessFlag ;
  `int`[] `androidx.constraintlayout.solver.SolverVariableValues.previous` @AccessFlag ;
  `float`[] `androidx.constraintlayout.solver.SolverVariableValues.values` @AccessFlag ;
  `int`[] `androidx.constraintlayout.solver.SolverVariableValues.variables` @AccessFlag ;
}
global `boolean` `@@androidx.constraintlayout.solver.SolverVariableValues.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@androidx.constraintlayout.solver.SolverVariableValues.HASH` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@androidx.constraintlayout.solver.SolverVariableValues.epsilon` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.constraintlayout.solver.SolverVariableValues` v3 @kind this, `androidx.constraintlayout.solver.ArrayRow` v4 @kind object @name `row`, `androidx.constraintlayout.solver.Cache` v5 @kind object @name `cache`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.<init>:(Landroidx/constraintlayout/solver/ArrayRow;Landroidx/constraintlayout/solver/Cache;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addToHashMap`(`androidx.constraintlayout.solver.SolverVariableValues` v5 @kind this, `androidx.constraintlayout.solver.SolverVariable` v6 @kind object @name `variable`, `int` v7 @name `index`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.addToHashMap:(Landroidx/constraintlayout/solver/SolverVariable;I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addVariable`(`androidx.constraintlayout.solver.SolverVariableValues` v2 @kind this, `int` v3 @name `index`, `androidx.constraintlayout.solver.SolverVariable` v4 @kind object @name `variable`, `float` v5 @name `value`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.addVariable:(ILandroidx/constraintlayout/solver/SolverVariable;F)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `displayHash`(`androidx.constraintlayout.solver.SolverVariableValues` v7 @kind this) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.displayHash:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `findEmptySlot`(`androidx.constraintlayout.solver.SolverVariableValues` v3 @kind this) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.findEmptySlot:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `increaseSize`(`androidx.constraintlayout.solver.SolverVariableValues` v4 @kind this) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.increaseSize:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `insertVariable`(`androidx.constraintlayout.solver.SolverVariableValues` v4 @kind this, `int` v5 @name `index`, `androidx.constraintlayout.solver.SolverVariable` v6 @kind object @name `variable`, `float` v7 @name `value`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.insertVariable:(ILandroidx/constraintlayout/solver/SolverVariable;F)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeFromHashMap`(`androidx.constraintlayout.solver.SolverVariableValues` v7 @kind this, `androidx.constraintlayout.solver.SolverVariable` v8 @kind object @name `variable`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.removeFromHashMap:(Landroidx/constraintlayout/solver/SolverVariable;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `add`(`androidx.constraintlayout.solver.SolverVariableValues` v5 @kind this, `androidx.constraintlayout.solver.SolverVariable` v6 @kind object @name `v`, `float` v7 @name `value`, `boolean` v8 @name `removeFromDefinition`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.add:(Landroidx/constraintlayout/solver/SolverVariable;FZ)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clear`(`androidx.constraintlayout.solver.SolverVariableValues` v4 @kind this) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`androidx.constraintlayout.solver.SolverVariableValues` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `variable`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.contains:(Landroidx/constraintlayout/solver/SolverVariable;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `display`(`androidx.constraintlayout.solver.SolverVariableValues` v6 @kind this) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.display:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `divideByAmount`(`androidx.constraintlayout.solver.SolverVariableValues` v5 @kind this, `float` v6 @name `amount`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.divideByAmount:(F)V` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `get`(`androidx.constraintlayout.solver.SolverVariableValues` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `variable`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.get:(Landroidx/constraintlayout/solver/SolverVariable;)F` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getCurrentSize`(`androidx.constraintlayout.solver.SolverVariableValues` v1 @kind this) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.getCurrentSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `getVariable`(`androidx.constraintlayout.solver.SolverVariableValues` v6 @kind this, `int` v7 @name `index`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.getVariable:(I)Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getVariableValue`(`androidx.constraintlayout.solver.SolverVariableValues` v4 @kind this, `int` v5 @name `index`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.getVariableValue:(I)F` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `indexOf`(`androidx.constraintlayout.solver.SolverVariableValues` v6 @kind this, `androidx.constraintlayout.solver.SolverVariable` v7 @kind object @name `variable`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.indexOf:(Landroidx/constraintlayout/solver/SolverVariable;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `invert`(`androidx.constraintlayout.solver.SolverVariableValues` v6 @kind this) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.invert:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `put`(`androidx.constraintlayout.solver.SolverVariableValues` v8 @kind this, `androidx.constraintlayout.solver.SolverVariable` v9 @kind object @name `variable`, `float` v10 @name `value`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.put:(Landroidx/constraintlayout/solver/SolverVariable;F)V` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `remove`(`androidx.constraintlayout.solver.SolverVariableValues` v7 @kind this, `androidx.constraintlayout.solver.SolverVariable` v8 @kind object @name `v`, `boolean` v9 @name `removeFromDefinition`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.remove:(Landroidx/constraintlayout/solver/SolverVariable;Z)F` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `sizeInBytes`(`androidx.constraintlayout.solver.SolverVariableValues` v1 @kind this) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.sizeInBytes:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.constraintlayout.solver.SolverVariableValues` v11 @kind this) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `use`(`androidx.constraintlayout.solver.SolverVariableValues` v8 @kind this, `androidx.constraintlayout.solver.ArrayRow` v9 @kind object @name `def`, `boolean` v10 @name `removeFromDefinition`) @signature `Landroidx/constraintlayout/solver/SolverVariableValues;.use:(Landroidx/constraintlayout/solver/ArrayRow;Z)F` @AccessFlag PUBLIC {

  # return;
}
