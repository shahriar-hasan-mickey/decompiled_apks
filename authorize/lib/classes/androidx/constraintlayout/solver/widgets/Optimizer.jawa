record `androidx.constraintlayout.solver.widgets.Optimizer` @kind class @AccessFlag PUBLIC {
}
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.FLAG_CHAIN_DANGLING` @AccessFlag STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.FLAG_RECOMPUTE_BOUNDS` @AccessFlag STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.FLAG_USE_OPTIMIZE` @AccessFlag STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_BARRIER` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_CHAIN` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_DIMENSIONS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_DIRECT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_ENGINE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_GRAPH` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_GRAPH_WRAP` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_GROUPS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_NONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_RATIO` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.Optimizer.OPTIMIZATION_STANDARD` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean`[] `@@androidx.constraintlayout.solver.widgets.Optimizer.flags` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Landroidx/constraintlayout/solver/widgets/Optimizer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.constraintlayout.solver.widgets.Optimizer` v0 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/Optimizer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `checkMatchParent`(`androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer` v5 @kind object @name `container`, `androidx.constraintlayout.solver.LinearSystem` v6 @kind object @name `system`, `androidx.constraintlayout.solver.widgets.ConstraintWidget` v7 @kind object @name `widget`) @signature `Landroidx/constraintlayout/solver/widgets/Optimizer;.checkMatchParent:(Landroidx/constraintlayout/solver/widgets/ConstraintWidgetContainer;Landroidx/constraintlayout/solver/LinearSystem;Landroidx/constraintlayout/solver/widgets/ConstraintWidget;)V` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `enabled`(`int` v1 @name `optimizationLevel`, `int` v2 @name `optimization`) @signature `Landroidx/constraintlayout/solver/widgets/Optimizer;.enabled:(II)Z` @AccessFlag PUBLIC_STATIC_FINAL {

  # return;
}
