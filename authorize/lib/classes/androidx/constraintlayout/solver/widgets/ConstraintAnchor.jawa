record `androidx.constraintlayout.solver.widgets.ConstraintAnchor` @kind class @AccessFlag PUBLIC {
  `java.util.HashSet` `androidx.constraintlayout.solver.widgets.ConstraintAnchor.mDependents` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.solver.widgets.ConstraintAnchor.mGoneMargin` @AccessFlag ;
  `int` `androidx.constraintlayout.solver.widgets.ConstraintAnchor.mMargin` @AccessFlag PUBLIC;
  `androidx.constraintlayout.solver.widgets.ConstraintWidget` `androidx.constraintlayout.solver.widgets.ConstraintAnchor.mOwner` @AccessFlag PUBLIC_FINAL;
  `androidx.constraintlayout.solver.SolverVariable` `androidx.constraintlayout.solver.widgets.ConstraintAnchor.mSolverVariable` @AccessFlag ;
  `androidx.constraintlayout.solver.widgets.ConstraintAnchor` `androidx.constraintlayout.solver.widgets.ConstraintAnchor.mTarget` @AccessFlag PUBLIC;
  `androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type` `androidx.constraintlayout.solver.widgets.ConstraintAnchor.mType` @AccessFlag PUBLIC_FINAL;
}
global `boolean` `@@androidx.constraintlayout.solver.widgets.ConstraintAnchor.ALLOW_BINARY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.widgets.ConstraintAnchor.UNSET_GONE_MARGIN` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this, `androidx.constraintlayout.solver.widgets.ConstraintWidget` v2 @kind object @name `owner`, `androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type` v3 @kind object @name `type`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.<init>:(Landroidx/constraintlayout/solver/widgets/ConstraintWidget;Landroidx/constraintlayout/solver/widgets/ConstraintAnchor$Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isConnectionToMe`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v7 @kind this, `androidx.constraintlayout.solver.widgets.ConstraintWidget` v8 @kind object @name `target`, `java.util.HashSet` v9 @kind object) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.isConnectionToMe:(Landroidx/constraintlayout/solver/widgets/ConstraintWidget;Ljava/util/HashSet;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `connect`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v2 @kind this, `androidx.constraintlayout.solver.widgets.ConstraintAnchor` v3 @kind object @name `toAnchor`, `int` v4 @name `margin`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.connect:(Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `connect`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v3 @kind this, `androidx.constraintlayout.solver.widgets.ConstraintAnchor` v4 @kind object @name `toAnchor`, `int` v5 @name `margin`, `int` v6 @name `goneMargin`, `boolean` v7 @name `forceConnection`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.connect:(Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;IIZ)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `copyFrom`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v3 @kind this, `androidx.constraintlayout.solver.widgets.ConstraintAnchor` v4 @kind object @name `source`, `java.util.HashMap` v5 @kind object) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.copyFrom:(Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;Ljava/util/HashMap;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMargin`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v3 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.getMargin:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.widgets.ConstraintAnchor` `getOpposite`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v2 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.getOpposite:()Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.constraintlayout.solver.widgets.ConstraintWidget` `getOwner`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.getOwner:()Landroidx/constraintlayout/solver/widgets/ConstraintWidget;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `getSolverVariable`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.getSolverVariable:()Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.widgets.ConstraintAnchor` `getTarget`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.getTarget:()Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type` `getType`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.getType:()Landroidx/constraintlayout/solver/widgets/ConstraintAnchor$Type;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasCenteredDependents`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v5 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.hasCenteredDependents:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasDependents`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v2 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.hasDependents:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isConnected`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.isConnected:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isConnectionAllowed`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v5 @kind this, `androidx.constraintlayout.solver.widgets.ConstraintWidget` v6 @kind object @name `target`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.isConnectionAllowed:(Landroidx/constraintlayout/solver/widgets/ConstraintWidget;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isConnectionAllowed`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this, `androidx.constraintlayout.solver.widgets.ConstraintWidget` v2 @kind object @name `target`, `androidx.constraintlayout.solver.widgets.ConstraintAnchor` v3 @kind object @name `anchor`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.isConnectionAllowed:(Landroidx/constraintlayout/solver/widgets/ConstraintWidget;Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isSideAnchor`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v2 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.isSideAnchor:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isSimilarDimensionConnection`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v4 @kind this, `androidx.constraintlayout.solver.widgets.ConstraintAnchor` v5 @kind object @name `anchor`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.isSimilarDimensionConnection:(Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isValidConnection`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v5 @kind this, `androidx.constraintlayout.solver.widgets.ConstraintAnchor` v6 @kind object @name `anchor`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.isValidConnection:(Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isVerticalAnchor`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v2 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.isVerticalAnchor:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `resetSolverVariable`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v3 @kind this, `androidx.constraintlayout.solver.Cache` v4 @kind object @name `cache`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.resetSolverVariable:(Landroidx/constraintlayout/solver/Cache;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setGoneMargin`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this, `int` v2 @name `margin`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.setGoneMargin:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setMargin`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v1 @kind this, `int` v2 @name `margin`) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.setMargin:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.constraintlayout.solver.widgets.ConstraintAnchor` v2 @kind this) @signature `Landroidx/constraintlayout/solver/widgets/ConstraintAnchor;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
