record `androidx.constraintlayout.widget.ConstraintLayoutStates$Variant` @kind class @AccessFlag  {
  `int` `androidx.constraintlayout.widget.ConstraintLayoutStates$Variant.mConstraintID` @AccessFlag ;
  `androidx.constraintlayout.widget.ConstraintSet` `androidx.constraintlayout.widget.ConstraintLayoutStates$Variant.mConstraintSet` @AccessFlag ;
  `int` `androidx.constraintlayout.widget.ConstraintLayoutStates$Variant.mId` @AccessFlag ;
  `float` `androidx.constraintlayout.widget.ConstraintLayoutStates$Variant.mMaxHeight` @AccessFlag ;
  `float` `androidx.constraintlayout.widget.ConstraintLayoutStates$Variant.mMaxWidth` @AccessFlag ;
  `float` `androidx.constraintlayout.widget.ConstraintLayoutStates$Variant.mMinHeight` @AccessFlag ;
  `float` `androidx.constraintlayout.widget.ConstraintLayoutStates$Variant.mMinWidth` @AccessFlag ;
}
procedure `void` `<init>`(`androidx.constraintlayout.widget.ConstraintLayoutStates$Variant` v9 @kind this, `android.content.Context` v10 @kind object @name `context`, `org.xmlpull.v1.XmlPullParser` v11 @kind object @name `parser`) @signature `Landroidx/constraintlayout/widget/ConstraintLayoutStates$Variant;.<init>:(Landroid/content/Context;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `match`(`androidx.constraintlayout.widget.ConstraintLayoutStates$Variant` v2 @kind this, `float` v3 @name `widthDp`, `float` v4 @name `heightDp`) @signature `Landroidx/constraintlayout/widget/ConstraintLayoutStates$Variant;.match:(FF)Z` @AccessFlag  {

  # return;
}
