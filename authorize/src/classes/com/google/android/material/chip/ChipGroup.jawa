record `com.google.android.material.chip.ChipGroup` @kind class @AccessFlag PUBLIC extends `com.google.android.material.internal.FlowLayout` @kind class {
  `int` `com.google.android.material.chip.ChipGroup.checkedId` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$CheckedStateTracker` `com.google.android.material.chip.ChipGroup.checkedStateTracker` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipGroup.chipSpacingVertical` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` `com.google.android.material.chip.ChipGroup.onCheckedChangeListener` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` `com.google.android.material.chip.ChipGroup.passThroughListener` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.selectionRequired` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.singleSelection` @AccessFlag PRIVATE;
}
global `int` `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipGroup;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ec928.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_ChipGroup` @type ^`int`;
  #L1ec92c.  `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @type ^`int` := v0;
  #L1ec930.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object @name `context`) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ec944.  v0:= 0I;
  #L1ec946.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L1ec94c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object @name `context`, `android.util.AttributeSet` v3 @kind object @name `attrs`) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ec960.  v0:= `@@com.google.android.material.R$attr.chipGroupStyle` @type ^`int`;
  #L1ec964.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L1ec96a.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v8 @kind this, `android.content.Context` v9 @kind object @name `context`, `android.util.AttributeSet` v10 @kind object @name `attrs`, `int` v11 @name `defStyleAttr`) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1ec97c.  v4:= `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @type ^`int`;
  #L1ec980.  call temp:= `wrap`(v9, v10, v11, v4) @signature `Lcom/google/android/material/theme/overlay/MaterialThemeOverlay;.wrap:(Landroid/content/Context;Landroid/util/AttributeSet;II)Landroid/content/Context;` @kind static;
  #L1ec986.  v0:= temp @kind object;
  #L1ec988.  call `<init>`(v8, v0, v10, v11) @signature `Lcom/google/android/material/internal/FlowLayout;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L1ec98e.  v0:= new `com.google.android.material.chip.ChipGroup$CheckedStateTracker`;
  #L1ec992.  v1:= 0I;
  #L1ec994.  call `<init>`(v0, v8, v1) @signature `Lcom/google/android/material/chip/ChipGroup$CheckedStateTracker;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$1;)V` @kind direct;
  #L1ec99a.  v8.`com.google.android.material.chip.ChipGroup.checkedStateTracker` @type ^`com.google.android.material.chip.ChipGroup$CheckedStateTracker` := v0 @kind object;
  #L1ec99e.  v0:= new `com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener`;
  #L1ec9a2.  call `<init>`(v0, v8, v1) @signature `Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$1;)V` @kind direct;
  #L1ec9a8.  v8.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` := v0 @kind object;
  #L1ec9ac.  v6:= -1I;
  #L1ec9ae.  v8.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int` := v6;
  #L1ec9b2.  v7:= 0I;
  #L1ec9b4.  v8.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v7 @kind boolean;
  #L1ec9b8.  call temp:= `getContext`(v8) @signature `Lcom/google/android/material/chip/ChipGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1ec9be.  v9:= temp @kind object;
  #L1ec9c0.  v2:= `@@com.google.android.material.R$styleable.ChipGroup` @type ^`int`[] @kind object;
  #L1ec9c4.  v5:= new `int`[v7];
  #L1ec9c8.  v0:= v9 @kind object;
  #L1ec9ca.  v1:= v10 @kind object;
  #L1ec9cc.  v3:= v11;
  #L1ec9ce.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L1ec9d4.  v0:= temp @kind object;
  #L1ec9d6.  v1:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacing` @type ^`int`;
  #L1ec9da.  call temp:= `getDimensionPixelOffset`(v0, v1, v7) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1ec9e0.  v1:= temp;
  #L1ec9e2.  v2:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacingHorizontal` @type ^`int`;
  #L1ec9e6.  call temp:= `getDimensionPixelOffset`(v0, v2, v1) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1ec9ec.  v2:= temp;
  #L1ec9ee.  call `setChipSpacingHorizontal`(v8, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L1ec9f4.  v2:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacingVertical` @type ^`int`;
  #L1ec9f8.  call temp:= `getDimensionPixelOffset`(v0, v2, v1) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1ec9fe.  v2:= temp;
  #L1eca00.  call `setChipSpacingVertical`(v8, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L1eca06.  v2:= `@@com.google.android.material.R$styleable.ChipGroup_singleLine` @type ^`int`;
  #L1eca0a.  call temp:= `getBoolean`(v0, v2, v7) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eca10.  v2:= temp;
  #L1eca12.  call `setSingleLine`(v8, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L1eca18.  v2:= `@@com.google.android.material.R$styleable.ChipGroup_singleSelection` @type ^`int`;
  #L1eca1c.  call temp:= `getBoolean`(v0, v2, v7) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eca22.  v2:= temp;
  #L1eca24.  call `setSingleSelection`(v8, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L1eca2a.  v2:= `@@com.google.android.material.R$styleable.ChipGroup_selectionRequired` @type ^`int`;
  #L1eca2e.  call temp:= `getBoolean`(v0, v2, v7) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eca34.  v2:= temp;
  #L1eca36.  call `setSelectionRequired`(v8, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSelectionRequired:(Z)V` @kind virtual;
  #L1eca3c.  v2:= `@@com.google.android.material.R$styleable.ChipGroup_checkedChip` @type ^`int`;
  #L1eca40.  call temp:= `getResourceId`(v0, v2, v6) @signature `Landroid/content/res/TypedArray;.getResourceId:(II)I` @kind virtual;
  #L1eca46.  v2:= temp;
  #L1eca48.  if v2 == v6 then goto L1eca50;
  #L1eca4c.  v8.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int` := v2;
  #L1eca50.  call `recycle`(v0) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L1eca56.  v3:= v8.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` @kind object;
  #L1eca5a.  call `setOnHierarchyChangeListener`(v8, v3) @signature `Lcom/google/android/material/internal/FlowLayout;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @kind super;
  #L1eca60.  v3:= 1I;
  #L1eca62.  call `setImportantForAccessibility`(v8, v3) @signature `Landroidx/core/view/ViewCompat;.setImportantForAccessibility:(Landroid/view/View;I)V` @kind static;
  #L1eca68.  return @kind void;
}
procedure `com.google.android.material.chip.ChipGroup$CheckedStateTracker` `access$1000`(`com.google.android.material.chip.ChipGroup` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/chip/ChipGroup;.access$1000:(Lcom/google/android/material/chip/ChipGroup;)Lcom/google/android/material/chip/ChipGroup$CheckedStateTracker;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1ec798.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkedStateTracker` @type ^`com.google.android.material.chip.ChipGroup$CheckedStateTracker` @kind object;
  #L1ec79c.  return v0 @kind object;
}
procedure `boolean` `access$300`(`com.google.android.material.chip.ChipGroup` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/chip/ChipGroup;.access$300:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1ec6d8.  v0:= v1.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` @kind boolean;
  #L1ec6dc.  return v0;
}
procedure `boolean` `access$400`(`com.google.android.material.chip.ChipGroup` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/chip/ChipGroup;.access$400:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1ec6f0.  v0:= v1.`com.google.android.material.chip.ChipGroup.selectionRequired` @type ^`boolean` @kind boolean;
  #L1ec6f4.  return v0;
}
procedure `void` `access$500`(`com.google.android.material.chip.ChipGroup` v0 @kind object @name `x0`, `int` v1 @name `x1`, `boolean` v2 @name `x2`) @signature `Lcom/google/android/material/chip/ChipGroup;.access$500:(Lcom/google/android/material/chip/ChipGroup;IZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1eca7c.  call `setCheckedStateForView`(v0, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1eca82.  return @kind void;
}
procedure `void` `access$600`(`com.google.android.material.chip.ChipGroup` v0 @kind object @name `x0`, `int` v1 @name `x1`, `boolean` v2 @name `x2`) @signature `Lcom/google/android/material/chip/ChipGroup;.access$600:(Lcom/google/android/material/chip/ChipGroup;IZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1eca94.  call `setCheckedId`(v0, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(IZ)V` @kind direct;
  #L1eca9a.  return @kind void;
}
procedure `int` `access$700`(`com.google.android.material.chip.ChipGroup` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/chip/ChipGroup;.access$700:(Lcom/google/android/material/chip/ChipGroup;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1ec7b0.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1ec7b4.  return v0;
}
procedure `boolean` `access$800`(`com.google.android.material.chip.ChipGroup` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/chip/ChipGroup;.access$800:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1ec708.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1ec70c.  return v0;
}
procedure `void` `access$900`(`com.google.android.material.chip.ChipGroup` v0 @kind object @name `x0`, `int` v1 @name `x1`) @signature `Lcom/google/android/material/chip/ChipGroup;.access$900:(Lcom/google/android/material/chip/ChipGroup;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1ecaac.  call `setCheckedId`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1ecab2.  return @kind void;
}
procedure `int` `getChipCount`(`com.google.android.material.chip.ChipGroup` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipCount:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1ec7ec.  v0:= 0I;
  #L1ec7ee.  v1:= 0I;
  #L1ec7f0.  call temp:= `getChildCount`(v3) @signature `Lcom/google/android/material/chip/ChipGroup;.getChildCount:()I` @kind virtual;
  #L1ec7f6.  v2:= temp;
  #L1ec7f8.  if v1 >= v2 then goto L1ec816;
  #L1ec7fc.  call temp:= `getChildAt`(v3, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1ec802.  v2:= temp @kind object;
  #L1ec804.  v2:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1ec808.  if v2 == 0 then goto L1ec810;
  #L1ec80c.  v0:= v0 + 1;
  #L1ec810.  v1:= v1 + 1;
  #L1ec814.  goto L1ec7f0;
  #L1ec816.  return v0;
}
procedure `void` `setCheckedId`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 @name `checkedId`) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ecc54.  v0:= 1I;
  #L1ecc56.  call `setCheckedId`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(IZ)V` @kind direct;
  #L1ecc5c.  return @kind void;
}
procedure `void` `setCheckedId`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `int` v3 @name `checkedId`, `boolean` v4 @name `fromUser`) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ecc70.  v2.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int` := v3;
  #L1ecc74.  v0:= v2.`com.google.android.material.chip.ChipGroup.onCheckedChangeListener` @type ^`com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` @kind object;
  #L1ecc78.  if v0 == 0 then goto L1ecc8e;
  #L1ecc7c.  v1:= v2.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1ecc80.  if v1 == 0 then goto L1ecc8e;
  #L1ecc84.  if v4 == 0 then goto L1ecc8e;
  #L1ecc88.  call `onCheckedChanged`(v0, v2, v3) @signature `Lcom/google/android/material/chip/ChipGroup$OnCheckedChangeListener;.onCheckedChanged:(Lcom/google/android/material/chip/ChipGroup;I)V` @kind interface;
  #L1ecc8e.  return @kind void;
}
procedure `void` `setCheckedStateForView`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `int` v3 @name `viewId`, `boolean` v4 @name `checked`) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ecca0.  call temp:= `findViewById`(v2, v3) @signature `Lcom/google/android/material/chip/ChipGroup;.findViewById:(I)Landroid/view/View;` @kind virtual;
  #L1ecca6.  v0:= temp @kind object;
  #L1ecca8.  v1:= instanceof @variable v0 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1eccac.  if v1 == 0 then goto L1eccc8;
  #L1eccb0.  v1:= 1I;
  #L1eccb2.  v2.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v1 @kind boolean;
  #L1eccb6.  v1:= v0 @kind object;
  #L1eccb8.  v1:= (`com.google.android.material.chip.Chip`) v1 @kind object;
  #L1eccbc.  call `setChecked`(v1, v4) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @kind virtual;
  #L1eccc2.  v1:= 0I;
  #L1eccc4.  v2.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v1 @kind boolean;
  #L1eccc8.  return @kind void;
}
procedure `void` `addView`(`com.google.android.material.chip.ChipGroup` v3 @kind this, `android.view.View` v4 @kind object @name `child`, `int` v5 @name `index`, `android.view.ViewGroup$LayoutParams` v6 @kind object @name `params`) @signature `Lcom/google/android/material/chip/ChipGroup;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ecac4.  v0:= instanceof @variable v4 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1ecac8.  if v0 == 0 then goto L1ecb06;
  #L1ecacc.  v0:= v4 @kind object;
  #L1ecace.  v0:= (`com.google.android.material.chip.Chip`) v0 @kind object;
  #L1ecad2.  call temp:= `isChecked`(v0) @signature `Lcom/google/android/material/chip/Chip;.isChecked:()Z` @kind virtual;
  #L1ecad8.  v1:= temp;
  #L1ecada.  if v1 == 0 then goto L1ecb06;
  #L1ecade.  v1:= v3.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1ecae2.  v2:= -1I;
  #L1ecae4.  if v1 == v2 then goto L1ecaf8;
  #L1ecae8.  v2:= v3.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1ecaec.  if v2 == 0 then goto L1ecaf8;
  #L1ecaf0.  v2:= 0I;
  #L1ecaf2.  call `setCheckedStateForView`(v3, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1ecaf8.  call temp:= `getId`(v0) @signature `Lcom/google/android/material/chip/Chip;.getId:()I` @kind virtual;
  #L1ecafe.  v1:= temp;
  #L1ecb00.  call `setCheckedId`(v3, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1ecb06.  call `addView`(v3, v4, v5, v6) @signature `Lcom/google/android/material/internal/FlowLayout;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @kind super;
  #L1ecb0c.  return @kind void;
}
procedure `void` `check`(`com.google.android.material.chip.ChipGroup` v3 @kind this, `int` v4 @name `id`) @signature `Lcom/google/android/material/chip/ChipGroup;.check:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ecb20.  v0:= v3.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1ecb24.  if v4 != v0 then goto L1ecb2a;
  #L1ecb28.  return @kind void;
  #L1ecb2a.  v1:= -1I;
  #L1ecb2c.  if v0 == v1 then goto L1ecb40;
  #L1ecb30.  v2:= v3.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1ecb34.  if v2 == 0 then goto L1ecb40;
  #L1ecb38.  v2:= 0I;
  #L1ecb3a.  call `setCheckedStateForView`(v3, v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1ecb40.  if v4 == v1 then goto L1ecb4c;
  #L1ecb44.  v0:= 1I;
  #L1ecb46.  call `setCheckedStateForView`(v3, v4, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1ecb4c.  call `setCheckedId`(v3, v4) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1ecb52.  return @kind void;
}
procedure `boolean` `checkLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object @name `p`) @signature `Lcom/google/android/material/chip/ChipGroup;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1ec720.  call temp:= `checkLayoutParams`(v1, v2) @signature `Lcom/google/android/material/internal/FlowLayout;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @kind super;
  #L1ec726.  v0:= temp;
  #L1ec728.  if v0 == 0 then goto L1ec738;
  #L1ec72c.  v0:= instanceof @variable v2 @type ^`com.google.android.material.chip.ChipGroup$LayoutParams` @kind boolean;
  #L1ec730.  if v0 == 0 then goto L1ec738;
  #L1ec734.  v0:= 1I;
  #L1ec736.  goto L1ec73a;
  #L1ec738.  v0:= 0I;
  #L1ec73a.  return v0;
}
procedure `void` `clearCheck`(`com.google.android.material.chip.ChipGroup` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.clearCheck:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ecb64.  v0:= 1I;
  #L1ecb66.  v4.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v0 @kind boolean;
  #L1ecb6a.  v0:= 0I;
  #L1ecb6c.  call temp:= `getChildCount`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.getChildCount:()I` @kind virtual;
  #L1ecb72.  v1:= temp;
  #L1ecb74.  v2:= 0I;
  #L1ecb76.  if v0 >= v1 then goto L1ecb9c;
  #L1ecb7a.  call temp:= `getChildAt`(v4, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1ecb80.  v1:= temp @kind object;
  #L1ecb82.  v3:= instanceof @variable v1 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1ecb86.  if v3 == 0 then goto L1ecb96;
  #L1ecb8a.  v3:= v1 @kind object;
  #L1ecb8c.  v3:= (`com.google.android.material.chip.Chip`) v3 @kind object;
  #L1ecb90.  call `setChecked`(v3, v2) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @kind virtual;
  #L1ecb96.  v0:= v0 + 1;
  #L1ecb9a.  goto L1ecb6c;
  #L1ecb9c.  v4.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v2 @kind boolean;
  #L1ecba0.  v0:= -1I;
  #L1ecba2.  call `setCheckedId`(v4, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1ecba8.  return @kind void;
}
procedure `android.view.ViewGroup$LayoutParams` `generateDefaultLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.generateDefaultLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1ec678.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L1ec67c.  v1:= -2I;
  #L1ec67e.  call `<init>`(v0, v1, v1) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(II)V` @kind direct;
  #L1ec684.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `android.util.AttributeSet` v3 @kind object @name `attrs`) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ec698.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L1ec69c.  call temp:= `getContext`(v2) @signature `Lcom/google/android/material/chip/ChipGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1ec6a2.  v1:= temp @kind object;
  #L1ec6a4.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L1ec6aa.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object @name `lp`) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1ec6bc.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L1ec6c0.  call `<init>`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/view/ViewGroup$LayoutParams;)V` @kind direct;
  #L1ec6c6.  return v0 @kind object;
}
procedure `int` `getCheckedChipId`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getCheckedChipId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec7c8.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1ec7cc.  if v0 == 0 then goto L1ec7d6;
  #L1ec7d0.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1ec7d4.  goto L1ec7d8;
  #L1ec7d6.  v0:= -1I;
  #L1ec7d8.  return v0;
}
procedure `java.util.List` `getCheckedChipIds`(`com.google.android.material.chip.ChipGroup` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getCheckedChipIds:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ec8b4.  v0:= new `java.util.ArrayList`;
  #L1ec8b8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1ec8be.  v1:= 0I;
  #L1ec8c0.  call temp:= `getChildCount`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.getChildCount:()I` @kind virtual;
  #L1ec8c6.  v2:= temp;
  #L1ec8c8.  if v1 >= v2 then goto L1ec914;
  #L1ec8cc.  call temp:= `getChildAt`(v4, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1ec8d2.  v2:= temp @kind object;
  #L1ec8d4.  v3:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1ec8d8.  if v3 == 0 then goto L1ec90e;
  #L1ec8dc.  v3:= v2 @kind object;
  #L1ec8de.  v3:= (`com.google.android.material.chip.Chip`) v3 @kind object;
  #L1ec8e2.  call temp:= `isChecked`(v3) @signature `Lcom/google/android/material/chip/Chip;.isChecked:()Z` @kind virtual;
  #L1ec8e8.  v3:= temp;
  #L1ec8ea.  if v3 == 0 then goto L1ec90e;
  #L1ec8ee.  call temp:= `getId`(v2) @signature `Landroid/view/View;.getId:()I` @kind virtual;
  #L1ec8f4.  v3:= temp;
  #L1ec8f6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1ec8fc.  v3:= temp @kind object;
  #L1ec8fe.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ec904.  v3:= v4.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1ec908.  if v3 == 0 then goto L1ec90e;
  #L1ec90c.  return v0 @kind object;
  #L1ec90e.  v1:= v1 + 1;
  #L1ec912.  goto L1ec8c0;
  #L1ec914.  return v0 @kind object;
}
procedure `int` `getChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingHorizontal:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec828.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int`;
  #L1ec82c.  return v0;
}
procedure `int` `getChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingVertical:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec840.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int`;
  #L1ec844.  return v0;
}
procedure `int` `getIndexOfChip`(`com.google.android.material.chip.ChipGroup` v4 @kind this, `android.view.View` v5 @kind object @name `child`) @signature `Lcom/google/android/material/chip/ChipGroup;.getIndexOfChip:(Landroid/view/View;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ec858.  v0:= instanceof @variable v5 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1ec85c.  v1:= -1I;
  #L1ec85e.  if v0 != 0 then goto L1ec864;
  #L1ec862.  return v1;
  #L1ec864.  v0:= 0I;
  #L1ec866.  v2:= 0I;
  #L1ec868.  call temp:= `getChildCount`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.getChildCount:()I` @kind virtual;
  #L1ec86e.  v3:= temp;
  #L1ec870.  if v2 >= v3 then goto L1ec8a0;
  #L1ec874.  call temp:= `getChildAt`(v4, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1ec87a.  v3:= temp @kind object;
  #L1ec87c.  v3:= instanceof @variable v3 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1ec880.  if v3 == 0 then goto L1ec89a;
  #L1ec884.  call temp:= `getChildAt`(v4, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1ec88a.  v3:= temp @kind object;
  #L1ec88c.  v3:= (`com.google.android.material.chip.Chip`) v3 @kind object;
  #L1ec890.  if v3 != v5 then goto L1ec896;
  #L1ec894.  return v0;
  #L1ec896.  v0:= v0 + 1;
  #L1ec89a.  v2:= v2 + 1;
  #L1ec89e.  goto L1ec868;
  #L1ec8a0.  return v1;
}
procedure `boolean` `isSelectionRequired`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSelectionRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec74c.  v0:= v1.`com.google.android.material.chip.ChipGroup.selectionRequired` @type ^`boolean` @kind boolean;
  #L1ec750.  return v0;
}
procedure `boolean` `isSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleLine:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec764.  call temp:= `isSingleLine`(v1) @signature `Lcom/google/android/material/internal/FlowLayout;.isSingleLine:()Z` @kind super;
  #L1ec76a.  v0:= temp;
  #L1ec76c.  return v0;
}
procedure `boolean` `isSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleSelection:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec780.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1ec784.  return v0;
}
procedure `void` `onFinishInflate`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.onFinishInflate:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1ecbbc.  call `onFinishInflate`(v2) @signature `Lcom/google/android/material/internal/FlowLayout;.onFinishInflate:()V` @kind super;
  #L1ecbc2.  v0:= v2.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1ecbc6.  v1:= -1I;
  #L1ecbc8.  if v0 == v1 then goto L1ecbde;
  #L1ecbcc.  v1:= 1I;
  #L1ecbce.  call `setCheckedStateForView`(v2, v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1ecbd4.  v0:= v2.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1ecbd8.  call `setCheckedId`(v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1ecbde.  return @kind void;
}
procedure `void` `onInitializeAccessibilityNodeInfo`(`com.google.android.material.chip.ChipGroup` v5 @kind this, `android.view.accessibility.AccessibilityNodeInfo` v6 @kind object @name `info`) @signature `Lcom/google/android/material/chip/ChipGroup;.onInitializeAccessibilityNodeInfo:(Landroid/view/accessibility/AccessibilityNodeInfo;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ecbf0.  call `onInitializeAccessibilityNodeInfo`(v5, v6) @signature `Lcom/google/android/material/internal/FlowLayout;.onInitializeAccessibilityNodeInfo:(Landroid/view/accessibility/AccessibilityNodeInfo;)V` @kind super;
  #L1ecbf6.  call temp:= `wrap`(v6) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;.wrap:(Landroid/view/accessibility/AccessibilityNodeInfo;)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;` @kind static;
  #L1ecbfc.  v0:= temp @kind object;
  #L1ecbfe.  call temp:= `isSingleLine`(v5) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleLine:()Z` @kind virtual;
  #L1ecc04.  v1:= temp;
  #L1ecc06.  if v1 == 0 then goto L1ecc14;
  #L1ecc0a.  call temp:= `getChipCount`(v5) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipCount:()I` @kind direct;
  #L1ecc10.  v1:= temp;
  #L1ecc12.  goto L1ecc16;
  #L1ecc14.  v1:= -1I;
  #L1ecc16.  
  #L1ecc18.  call temp:= `getRowCount`(v5) @signature `Lcom/google/android/material/chip/ChipGroup;.getRowCount:()I` @kind virtual;
  #L1ecc1e.  v2:= temp;
  #L1ecc20.  v3:= 0I;
  #L1ecc22.  call temp:= `isSingleSelection`(v5) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleSelection:()Z` @kind virtual;
  #L1ecc28.  v4:= temp;
  #L1ecc2a.  if v4 == 0 then goto L1ecc32;
  #L1ecc2e.  v4:= 1I;
  #L1ecc30.  goto L1ecc34;
  #L1ecc32.  v4:= 2I;
  #L1ecc34.  call temp:= `obtain`(v2, v1, v3, v4) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$CollectionInfoCompat;.obtain:(IIZI)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$CollectionInfoCompat;` @kind static;
  #L1ecc3a.  v2:= temp @kind object;
  #L1ecc3c.  call `setCollectionInfo`(v0, v2) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;.setCollectionInfo:(Ljava/lang/Object;)V` @kind virtual;
  #L1ecc42.  return @kind void;
}
procedure `void` `setChipSpacing`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `int` v1 @name `chipSpacing`) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1eccdc.  call `setChipSpacingHorizontal`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L1ecce2.  call `setChipSpacingVertical`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L1ecce8.  return @kind void;
}
procedure `void` `setChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 @name `chipSpacingHorizontal`) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eccfc.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int`;
  #L1ecd00.  if v0 == v2 then goto L1ecd14;
  #L1ecd04.  v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int` := v2;
  #L1ecd08.  call `setItemSpacing`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setItemSpacing:(I)V` @kind virtual;
  #L1ecd0e.  call `requestLayout`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.requestLayout:()V` @kind virtual;
  #L1ecd14.  return @kind void;
}
procedure `void` `setChipSpacingHorizontalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ecd28.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ecd2e.  v0:= temp @kind object;
  #L1ecd30.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L1ecd36.  v0:= temp;
  #L1ecd38.  call `setChipSpacingHorizontal`(v1, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L1ecd3e.  return @kind void;
}
procedure `void` `setChipSpacingResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ecd50.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ecd56.  v0:= temp @kind object;
  #L1ecd58.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L1ecd5e.  v0:= temp;
  #L1ecd60.  call `setChipSpacing`(v1, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @kind virtual;
  #L1ecd66.  return @kind void;
}
procedure `void` `setChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 @name `chipSpacingVertical`) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ecd78.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int`;
  #L1ecd7c.  if v0 == v2 then goto L1ecd90;
  #L1ecd80.  v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int` := v2;
  #L1ecd84.  call `setLineSpacing`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setLineSpacing:(I)V` @kind virtual;
  #L1ecd8a.  call `requestLayout`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.requestLayout:()V` @kind virtual;
  #L1ecd90.  return @kind void;
}
procedure `void` `setChipSpacingVerticalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVerticalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ecda4.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ecdaa.  v0:= temp @kind object;
  #L1ecdac.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L1ecdb2.  v0:= temp;
  #L1ecdb4.  call `setChipSpacingVertical`(v1, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L1ecdba.  return @kind void;
}
procedure `void` `setDividerDrawableHorizontal`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object @name `divider`) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableHorizontal:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ecdcc.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1ecdd0.  v1:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1ecdd4.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ecdda.  throw v0;
}
procedure `void` `setDividerDrawableVertical`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object @name `divider`) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableVertical:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ecdec.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1ecdf0.  v1:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1ecdf4.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ecdfa.  throw v0;
}
procedure `void` `setFlexWrap`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `int` v3 @name `flexWrap`) @signature `Lcom/google/android/material/chip/ChipGroup;.setFlexWrap:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ece0c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1ece10.  v1:= "Changing flex wrap not allowed. ChipGroup exposes a singleLine attribute instead." @kind object;
  #L1ece14.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ece1a.  throw v0;
}
procedure `void` `setOnCheckedChangeListener`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` v1 @kind object @name `listener`) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnCheckedChangeListener:(Lcom/google/android/material/chip/ChipGroup$OnCheckedChangeListener;)V` @AccessFlag PUBLIC {
    temp;

  #L1ece2c.  v0.`com.google.android.material.chip.ChipGroup.onCheckedChangeListener` @type ^`com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` := v1 @kind object;
  #L1ece30.  return @kind void;
}
procedure `void` `setOnHierarchyChangeListener`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$OnHierarchyChangeListener` v2 @kind object @name `listener`) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ece44.  v0:= v1.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` @kind object;
  #L1ece48.  call temp:= `access$202`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;.access$202:(Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;Landroid/view/ViewGroup$OnHierarchyChangeListener;)Landroid/view/ViewGroup$OnHierarchyChangeListener;` @kind static;
  #L1ece4e.  return @kind void;
}
procedure `void` `setSelectionRequired`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `boolean` v1 @name `selectionRequired`) @signature `Lcom/google/android/material/chip/ChipGroup;.setSelectionRequired:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1ece60.  v0.`com.google.android.material.chip.ChipGroup.selectionRequired` @type ^`boolean` := v1 @kind boolean;
  #L1ece64.  return @kind void;
}
procedure `void` `setShowDividerHorizontal`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `int` v3 @name `dividerMode`) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ece78.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1ece7c.  v1:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1ece80.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ece86.  throw v0;
}
procedure `void` `setShowDividerVertical`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `int` v3 @name `dividerMode`) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ece98.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1ece9c.  v1:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1ecea0.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ecea6.  throw v0;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eced0.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eced6.  v0:= temp @kind object;
  #L1eced8.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1ecede.  v0:= temp;
  #L1ecee0.  call `setSingleLine`(v1, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L1ecee6.  return @kind void;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `boolean` v1 @name `singleLine`) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1eceb8.  call `setSingleLine`(v0, v1) @signature `Lcom/google/android/material/internal/FlowLayout;.setSingleLine:(Z)V` @kind super;
  #L1ecebe.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ecf1c.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ecf22.  v0:= temp @kind object;
  #L1ecf24.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1ecf2a.  v0:= temp;
  #L1ecf2c.  call `setSingleSelection`(v1, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L1ecf32.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `boolean` v2 @name `singleSelection`) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ecef8.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1ecefc.  if v0 == v2 then goto L1ecf0a;
  #L1ecf00.  v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` := v2 @kind boolean;
  #L1ecf04.  call `clearCheck`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.clearCheck:()V` @kind virtual;
  #L1ecf0a.  return @kind void;
}
