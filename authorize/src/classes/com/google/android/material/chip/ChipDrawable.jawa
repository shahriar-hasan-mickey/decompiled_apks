record `com.google.android.material.chip.ChipDrawable` @kind class @AccessFlag PUBLIC extends `com.google.android.material.shape.MaterialShapeDrawable` @kind class, `androidx.core.graphics.drawable.TintAwareDrawable` @kind interface, `android.graphics.drawable.Drawable$Callback` @kind interface, `com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate` @kind interface {
  `int` `com.google.android.material.chip.ChipDrawable.alpha` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkable` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.checkedIcon` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.checkedIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkedIconVisible` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipCornerRadius` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.chipIcon` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipIconSize` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.chipIconVisible` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipMinHeight` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.chipPaint` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.chipStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipStrokeColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIcon` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIconRipple` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconSize` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @AccessFlag PRIVATE;
  `int`[] `com.google.android.material.chip.ChipDrawable.closeIconStateSet` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.closeIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.closeIconVisible` @AccessFlag PRIVATE;
  `android.graphics.ColorFilter` `com.google.android.material.chip.ChipDrawable.colorFilter` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.compatRippleColor` @AccessFlag PRIVATE;
  `android.content.Context` `com.google.android.material.chip.ChipDrawable.context` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.currentChecked` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTextColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTint` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.debugPaint` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.google.android.material.chip.ChipDrawable.delegate` @AccessFlag PRIVATE;
  `android.graphics.Paint$FontMetrics` `com.google.android.material.chip.ChipDrawable.fontMetrics` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.hasChipIconTint` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.hideMotionSpec` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconStartPadding` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.maxWidth` @AccessFlag PRIVATE;
  `android.graphics.PointF` `com.google.android.material.chip.ChipDrawable.pointF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.chip.ChipDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.rippleColor` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.chip.ChipDrawable.shapePath` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.shouldDrawText` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.showMotionSpec` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.text` @AccessFlag PRIVATE;
  `com.google.android.material.internal.TextDrawableHelper` `com.google.android.material.chip.ChipDrawable.textDrawableHelper` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.textEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.textStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.tint` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.chip.ChipDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuff$Mode` `com.google.android.material.chip.ChipDrawable.tintMode` @AccessFlag PRIVATE;
  `android.text.TextUtils$TruncateAt` `com.google.android.material.chip.ChipDrawable.truncateAt` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.useCompatRipple` @AccessFlag PRIVATE;
}
global `boolean` `@@com.google.android.material.chip.ChipDrawable.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.chip.ChipDrawable.MAX_CHIP_ICON_HEIGHT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.chip.ChipDrawable.NAMESPACE_APP` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.drawable.ShapeDrawable` `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1ea33c.  v0:= 1I;
  #L1ea33e.  v0:= new `int`[v0];
  #L1ea342.  v1:= 0I;
  #L1ea344.  v2:= 16842910I;
  #L1ea34a.  v0[v1]:= v2;
  #L1ea34e.  `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] := v0 @kind object;
  #L1ea352.  v0:= new `android.graphics.drawable.ShapeDrawable`;
  #L1ea356.  v1:= new `android.graphics.drawable.shapes.OvalShape`;
  #L1ea35a.  call `<init>`(v1) @signature `Landroid/graphics/drawable/shapes/OvalShape;.<init>:()V` @kind direct;
  #L1ea360.  call `<init>`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.<init>:(Landroid/graphics/drawable/shapes/Shape;)V` @kind direct;
  #L1ea366.  `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` := v0 @kind object;
  #L1ea36a.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.content.Context` v5 @kind object @name `context`, `android.util.AttributeSet` v6 @kind object @name `attrs`, `int` v7 @name `defStyleAttr`, `int` v8 @name `defStyleRes`) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ea37c.  call `<init>`(v4, v5, v6, v7, v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L1ea382.  v0:= -1.0F;
  #L1ea386.  v4.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float` := v0;
  #L1ea38a.  v0:= new `android.graphics.Paint`;
  #L1ea38e.  v1:= 1I;
  #L1ea390.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L1ea396.  v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L1ea39a.  v0:= new `android.graphics.Paint$FontMetrics`;
  #L1ea39e.  call `<init>`(v0) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L1ea3a4.  v4.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` := v0 @kind object;
  #L1ea3a8.  v0:= new `android.graphics.RectF`;
  #L1ea3ac.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L1ea3b2.  v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L1ea3b6.  v0:= new `android.graphics.PointF`;
  #L1ea3ba.  call `<init>`(v0) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L1ea3c0.  v4.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` := v0 @kind object;
  #L1ea3c4.  v0:= new `android.graphics.Path`;
  #L1ea3c8.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L1ea3ce.  v4.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` := v0 @kind object;
  #L1ea3d2.  v0:= 255I;
  #L1ea3d6.  v4.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v0;
  #L1ea3da.  v0:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1ea3de.  v4.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v0 @kind object;
  #L1ea3e2.  v0:= new `java.lang.ref.WeakReference`;
  #L1ea3e6.  v2:= 0I;
  #L1ea3e8.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1ea3ee.  v4.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L1ea3f2.  call `initializeElevationOverlay`(v4, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L1ea3f8.  v4.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` := v5 @kind object;
  #L1ea3fc.  v0:= new `com.google.android.material.internal.TextDrawableHelper`;
  #L1ea400.  call `<init>`(v0, v4) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.<init>:(Lcom/google/android/material/internal/TextDrawableHelper$TextDrawableDelegate;)V` @kind direct;
  #L1ea406.  v4.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` := v0 @kind object;
  #L1ea40a.  v3:= "" @kind object;
  #L1ea40e.  v4.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v3 @kind object;
  #L1ea412.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1ea418.  v0:= temp @kind object;
  #L1ea41a.  call temp:= `getResources`(v5) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ea420.  v3:= temp @kind object;
  #L1ea422.  call temp:= `getDisplayMetrics`(v3) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L1ea428.  v3:= temp @kind object;
  #L1ea42a.  v3:= v3.`android.util.DisplayMetrics.density` @type ^`float`;
  #L1ea42e.  v0.`android.text.TextPaint.density` @type ^`float` := v3;
  #L1ea432.  v4.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L1ea436.  
  #L1ea438.  v0:= `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] @kind object;
  #L1ea43c.  call temp:= `setState`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setState:([I)Z` @kind virtual;
  #L1ea442.  call temp:= `setCloseIconState`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @kind virtual;
  #L1ea448.  v4.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v1 @kind boolean;
  #L1ea44c.  v0:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L1ea450.  if v0 == 0 then goto L1ea460;
  #L1ea454.  v0:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L1ea458.  v1:= -1I;
  #L1ea45a.  call `setTint`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.setTint:(I)V` @kind virtual;
  #L1ea460.  return @kind void;
}
procedure `void` `applyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object @name `drawable`) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ea474.  if v3 != 0 then goto L1ea47a;
  #L1ea478.  return @kind void;
  #L1ea47a.  call `setCallback`(v3, v2) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L1ea480.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1ea486.  v0:= temp;
  #L1ea488.  call temp:= `setLayoutDirection`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L1ea48e.  call temp:= `getLevel`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getLevel:()I` @kind virtual;
  #L1ea494.  v0:= temp;
  #L1ea496.  call temp:= `setLevel`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L1ea49c.  call temp:= `isVisible`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.isVisible:()Z` @kind virtual;
  #L1ea4a2.  v0:= temp;
  #L1ea4a4.  v1:= 0I;
  #L1ea4a6.  call temp:= `setVisible`(v3, v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L1ea4ac.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea4b0.  if v3 != v0 then goto L1ea4da;
  #L1ea4b4.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L1ea4ba.  v0:= temp;
  #L1ea4bc.  if v0 == 0 then goto L1ea4ce;
  #L1ea4c0.  call temp:= `getCloseIconState`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L1ea4c6.  v0:= temp @kind object;
  #L1ea4c8.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1ea4ce.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1ea4d2.  call `setTintList`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1ea4d8.  return @kind void;
  #L1ea4da.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L1ea4e0.  v0:= temp;
  #L1ea4e2.  if v0 == 0 then goto L1ea4f4;
  #L1ea4e6.  call temp:= `getState`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1ea4ec.  v0:= temp @kind object;
  #L1ea4ee.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1ea4f4.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea4f8.  if v3 != v0 then goto L1ea50e;
  #L1ea4fc.  v1:= v2.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` @kind boolean;
  #L1ea500.  if v1 == 0 then goto L1ea50e;
  #L1ea504.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1ea508.  call `setTintList`(v0, v1) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1ea50e.  return @kind void;
}
procedure `void` `calculateChipIconBounds`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Rect` v6 @kind object @name `bounds`, `android.graphics.RectF` v7 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ea520.  call `setEmpty`(v7) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1ea526.  call temp:= `showsChipIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1ea52c.  v0:= temp;
  #L1ea52e.  if v0 != 0 then goto L1ea53e;
  #L1ea532.  call temp:= `showsCheckedIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1ea538.  v0:= temp;
  #L1ea53a.  if v0 == 0 then goto L1ea5b2;
  #L1ea53e.  v0:= v5.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1ea542.  v1:= v5.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L1ea546.  v0:= v0 + v1 @kind float;
  #L1ea548.  call temp:= `getCurrentChipIconWidth`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconWidth:()F` @kind direct;
  #L1ea54e.  v1:= temp;
  #L1ea550.  call temp:= `getLayoutDirection`(v5) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1ea556.  v2:= temp;
  #L1ea558.  if v2 != 0 then goto L1ea574;
  #L1ea55c.  v2:= v6.`android.graphics.Rect.left` @type ^`int`;
  #L1ea560.  v2:= (`float`) v2 @kind i2f;
  #L1ea562.  v2:= v2 + v0 @kind float;
  #L1ea564.  v7.`android.graphics.RectF.left` @type ^`float` := v2;
  #L1ea568.  v2:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L1ea56c.  v2:= v2 + v1 @kind float;
  #L1ea56e.  v7.`android.graphics.RectF.right` @type ^`float` := v2;
  #L1ea572.  goto L1ea58a;
  #L1ea574.  v2:= v6.`android.graphics.Rect.right` @type ^`int`;
  #L1ea578.  v2:= (`float`) v2 @kind i2f;
  #L1ea57a.  v2:= v2 - v0 @kind float;
  #L1ea57c.  v7.`android.graphics.RectF.right` @type ^`float` := v2;
  #L1ea580.  v2:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L1ea584.  v2:= v2 - v1 @kind float;
  #L1ea586.  v7.`android.graphics.RectF.left` @type ^`float` := v2;
  #L1ea58a.  call temp:= `getCurrentChipIconHeight`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconHeight:()F` @kind direct;
  #L1ea590.  v2:= temp;
  #L1ea592.  call temp:= `exactCenterY`(v6) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L1ea598.  v3:= temp;
  #L1ea59a.  v4:= 2.0F;
  #L1ea59e.  v4:= v2 / v4 @kind float;
  #L1ea5a2.  v3:= v3 - v4 @kind float;
  #L1ea5a4.  v7.`android.graphics.RectF.top` @type ^`float` := v3;
  #L1ea5a8.  v3:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L1ea5ac.  v3:= v3 + v2 @kind float;
  #L1ea5ae.  v7.`android.graphics.RectF.bottom` @type ^`float` := v3;
  #L1ea5b2.  return @kind void;
}
procedure `void` `calculateChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object @name `bounds`, `android.graphics.RectF` v4 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ea5c4.  call `set`(v4, v3) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1ea5ca.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ea5d0.  v0:= temp;
  #L1ea5d2.  if v0 == 0 then goto L1ea618;
  #L1ea5d6.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1ea5da.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1ea5de.  v0:= v0 + v1 @kind float;
  #L1ea5e0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1ea5e4.  v0:= v0 + v1 @kind float;
  #L1ea5e6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1ea5ea.  v0:= v0 + v1 @kind float;
  #L1ea5ec.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1ea5f0.  v0:= v0 + v1 @kind float;
  #L1ea5f2.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1ea5f8.  v1:= temp;
  #L1ea5fa.  if v1 != 0 then goto L1ea60c;
  #L1ea5fe.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L1ea602.  v1:= (`float`) v1 @kind i2f;
  #L1ea604.  v1:= v1 - v0 @kind float;
  #L1ea606.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1ea60a.  goto L1ea618;
  #L1ea60c.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L1ea610.  v1:= (`float`) v1 @kind i2f;
  #L1ea612.  v1:= v1 + v0 @kind float;
  #L1ea614.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1ea618.  return @kind void;
}
procedure `void` `calculateCloseIconBounds`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Rect` v5 @kind object @name `bounds`, `android.graphics.RectF` v6 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ea62c.  call `setEmpty`(v6) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1ea632.  call temp:= `showsCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ea638.  v0:= temp;
  #L1ea63a.  if v0 == 0 then goto L1ea6b0;
  #L1ea63e.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1ea642.  v1:= v4.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1ea646.  v0:= v0 + v1 @kind float;
  #L1ea648.  call temp:= `getLayoutDirection`(v4) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1ea64e.  v1:= temp;
  #L1ea650.  if v1 != 0 then goto L1ea670;
  #L1ea654.  v1:= v5.`android.graphics.Rect.right` @type ^`int`;
  #L1ea658.  v1:= (`float`) v1 @kind i2f;
  #L1ea65a.  v1:= v1 - v0 @kind float;
  #L1ea65c.  v6.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1ea660.  v1:= v6.`android.graphics.RectF.right` @type ^`float`;
  #L1ea664.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1ea668.  v1:= v1 - v2 @kind float;
  #L1ea66a.  v6.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1ea66e.  goto L1ea68a;
  #L1ea670.  v1:= v5.`android.graphics.Rect.left` @type ^`int`;
  #L1ea674.  v1:= (`float`) v1 @kind i2f;
  #L1ea676.  v1:= v1 + v0 @kind float;
  #L1ea678.  v6.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1ea67c.  v1:= v6.`android.graphics.RectF.left` @type ^`float`;
  #L1ea680.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1ea684.  v1:= v1 + v2 @kind float;
  #L1ea686.  v6.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1ea68a.  call temp:= `exactCenterY`(v5) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L1ea690.  v1:= temp;
  #L1ea692.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1ea696.  v3:= 2.0F;
  #L1ea69a.  v2:= v2 / v3 @kind float;
  #L1ea69c.  v1:= v1 - v2 @kind float;
  #L1ea69e.  v6.`android.graphics.RectF.top` @type ^`float` := v1;
  #L1ea6a2.  v1:= v6.`android.graphics.RectF.top` @type ^`float`;
  #L1ea6a6.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1ea6aa.  v1:= v1 + v2 @kind float;
  #L1ea6ac.  v6.`android.graphics.RectF.bottom` @type ^`float` := v1;
  #L1ea6b0.  return @kind void;
}
procedure `void` `calculateCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object @name `bounds`, `android.graphics.RectF` v4 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ea6c4.  call `setEmpty`(v4) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1ea6ca.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ea6d0.  v0:= temp;
  #L1ea6d2.  if v0 == 0 then goto L1ea73e;
  #L1ea6d6.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1ea6da.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1ea6de.  v0:= v0 + v1 @kind float;
  #L1ea6e0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1ea6e4.  v0:= v0 + v1 @kind float;
  #L1ea6e6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1ea6ea.  v0:= v0 + v1 @kind float;
  #L1ea6ec.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1ea6f0.  v0:= v0 + v1 @kind float;
  #L1ea6f2.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1ea6f8.  v1:= temp;
  #L1ea6fa.  if v1 != 0 then goto L1ea714;
  #L1ea6fe.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L1ea702.  v1:= (`float`) v1 @kind i2f;
  #L1ea704.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1ea708.  v1:= v4.`android.graphics.RectF.right` @type ^`float`;
  #L1ea70c.  v1:= v1 - v0 @kind float;
  #L1ea70e.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1ea712.  goto L1ea72a;
  #L1ea714.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L1ea718.  v1:= (`float`) v1 @kind i2f;
  #L1ea71a.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1ea71e.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L1ea722.  v1:= (`float`) v1 @kind i2f;
  #L1ea724.  v1:= v1 + v0 @kind float;
  #L1ea726.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1ea72a.  v1:= v3.`android.graphics.Rect.top` @type ^`int`;
  #L1ea72e.  v1:= (`float`) v1 @kind i2f;
  #L1ea730.  v4.`android.graphics.RectF.top` @type ^`float` := v1;
  #L1ea734.  v1:= v3.`android.graphics.Rect.bottom` @type ^`int`;
  #L1ea738.  v1:= (`float`) v1 @kind i2f;
  #L1ea73a.  v4.`android.graphics.RectF.bottom` @type ^`float` := v1;
  #L1ea73e.  return @kind void;
}
procedure `void` `calculateTextBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object @name `bounds`, `android.graphics.RectF` v5 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1ea750.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1ea756.  v0:= v3.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1ea75a.  if v0 == 0 then goto L1ea7d8;
  #L1ea75e.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1ea762.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1ea768.  v1:= temp;
  #L1ea76a.  v0:= v0 + v1 @kind float;
  #L1ea76c.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1ea770.  v0:= v0 + v1 @kind float;
  #L1ea772.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1ea776.  call temp:= `calculateCloseIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L1ea77c.  v2:= temp;
  #L1ea77e.  v1:= v1 + v2 @kind float;
  #L1ea780.  v2:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1ea784.  v1:= v1 + v2 @kind float;
  #L1ea786.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1ea78c.  v2:= temp;
  #L1ea78e.  if v2 != 0 then goto L1ea7ac;
  #L1ea792.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L1ea796.  v2:= (`float`) v2 @kind i2f;
  #L1ea798.  v2:= v2 + v0 @kind float;
  #L1ea79a.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L1ea79e.  v2:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L1ea7a2.  v2:= (`float`) v2 @kind i2f;
  #L1ea7a4.  v2:= v2 - v1 @kind float;
  #L1ea7a6.  v5.`android.graphics.RectF.right` @type ^`float` := v2;
  #L1ea7aa.  goto L1ea7c4;
  #L1ea7ac.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L1ea7b0.  v2:= (`float`) v2 @kind i2f;
  #L1ea7b2.  v2:= v2 + v1 @kind float;
  #L1ea7b4.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L1ea7b8.  v2:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L1ea7bc.  v2:= (`float`) v2 @kind i2f;
  #L1ea7be.  v2:= v2 - v0 @kind float;
  #L1ea7c0.  v5.`android.graphics.RectF.right` @type ^`float` := v2;
  #L1ea7c4.  v2:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L1ea7c8.  v2:= (`float`) v2 @kind i2f;
  #L1ea7ca.  v5.`android.graphics.RectF.top` @type ^`float` := v2;
  #L1ea7ce.  v2:= v4.`android.graphics.Rect.bottom` @type ^`int`;
  #L1ea7d2.  v2:= (`float`) v2 @kind i2f;
  #L1ea7d4.  v5.`android.graphics.RectF.bottom` @type ^`float` := v2;
  #L1ea7d8.  return @kind void;
}
procedure `float` `calculateTextCenterFromBaseline`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1e9fe8.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1e9fec.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1e9ff2.  v0:= temp @kind object;
  #L1e9ff4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L1e9ff8.  call temp:= `getFontMetrics`(v0, v1) @signature `Landroid/text/TextPaint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L1e9ffe.  v0:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L1ea002.  v0:= v0.`android.graphics.Paint$FontMetrics.descent` @type ^`float`;
  #L1ea006.  v1:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L1ea00a.  v1:= v1.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L1ea00e.  v0:= v0 + v1 @kind float;
  #L1ea010.  v1:= 2.0F;
  #L1ea014.  v0:= v0 / v1 @kind float;
  #L1ea016.  return v0;
}
procedure `boolean` `canShowCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1e96e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L1e96e8.  if v0 == 0 then goto L1e9700;
  #L1e96ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e96f0.  if v0 == 0 then goto L1e9700;
  #L1e96f4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L1e96f8.  if v0 == 0 then goto L1e9700;
  #L1e96fc.  v0:= 1I;
  #L1e96fe.  goto L1e9702;
  #L1e9700.  v0:= 0I;
  #L1e9702.  return v0;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromAttributes`(`android.content.Context` v1 @kind object @name `context`, `android.util.AttributeSet` v2 @kind object @name `attrs`, `int` v3 @name `defStyleAttr`, `int` v4 @name `defStyleRes`) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1e9ef0.  v0:= new `com.google.android.material.chip.ChipDrawable`;
  #L1e9ef4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L1e9efa.  call `loadFromAttributes`(v0, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @kind direct;
  #L1e9f00.  return v0 @kind object;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromResource`(`android.content.Context` v3 @kind object @name `context`, `int` v4 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1e9f14.  v0:= "chip" @kind object;
  #L1e9f18.  call temp:= `parseDrawableXml`(v3, v4, v0) @signature `Lcom/google/android/material/drawable/DrawableUtils;.parseDrawableXml:(Landroid/content/Context;ILjava/lang/CharSequence;)Landroid/util/AttributeSet;` @kind static;
  #L1e9f1e.  v0:= temp @kind object;
  #L1e9f20.  call temp:= `getStyleAttribute`(v0) @signature `Landroid/util/AttributeSet;.getStyleAttribute:()I` @kind interface;
  #L1e9f26.  v1:= temp;
  #L1e9f28.  if v1 != 0 then goto L1e9f30;
  #L1e9f2c.  v1:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Chip_Entry` @type ^`int`;
  #L1e9f30.  v2:= `@@com.google.android.material.R$attr.chipStandaloneStyle` @type ^`int`;
  #L1e9f34.  call temp:= `createFromAttributes`(v3, v0, v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @kind static;
  #L1e9f3a.  v2:= temp @kind object;
  #L1e9f3c.  return v2 @kind object;
}
procedure `void` `drawCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`, `android.graphics.Rect` v8 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ea8b0.  call temp:= `showsCheckedIcon`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1ea8b6.  v0:= temp;
  #L1ea8b8.  if v0 == 0 then goto L1ea918;
  #L1ea8bc.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea8c0.  call `calculateChipIconBounds`(v6, v8, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1ea8c6.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea8ca.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1ea8ce.  v1:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea8d2.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L1ea8d6.  call `translate`(v7, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1ea8dc.  v2:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea8e0.  v3:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea8e4.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1ea8ea.  v3:= temp;
  #L1ea8ec.  v3:= (`int`) v3 @kind f2i;
  #L1ea8ee.  v4:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea8f2.  call temp:= `height`(v4) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1ea8f8.  v4:= temp;
  #L1ea8fa.  v4:= (`int`) v4 @kind f2i;
  #L1ea8fc.  v5:= 0I;
  #L1ea8fe.  call `setBounds`(v2, v5, v5, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L1ea904.  v2:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea908.  call `draw`(v2, v7) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1ea90e.  v2:= -v0 @kind float;
  #L1ea910.  v3:= -v1 @kind float;
  #L1ea912.  call `translate`(v7, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1ea918.  return @kind void;
}
procedure `void` `drawChipBackground`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object @name `canvas`, `android.graphics.Rect` v6 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ea92c.  v0:= v4.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1ea930.  if v0 != 0 then goto L1ea98a;
  #L1ea934.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ea938.  v1:= v4.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L1ea93c.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1ea942.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ea946.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L1ea94a.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1ea950.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ea954.  call temp:= `getTintColorFilter`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L1ea95a.  v1:= temp @kind object;
  #L1ea95c.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L1ea962.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea966.  call `set`(v0, v6) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1ea96c.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea970.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1ea976.  v1:= temp;
  #L1ea978.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1ea97e.  v2:= temp;
  #L1ea980.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ea984.  call `drawRoundRect`(v5, v0, v1, v2, v3) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1ea98a.  return @kind void;
}
procedure `void` `drawChipIcon`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`, `android.graphics.Rect` v8 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ea99c.  call temp:= `showsChipIcon`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1ea9a2.  v0:= temp;
  #L1ea9a4.  if v0 == 0 then goto L1eaa04;
  #L1ea9a8.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea9ac.  call `calculateChipIconBounds`(v6, v8, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1ea9b2.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea9b6.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1ea9ba.  v1:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea9be.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L1ea9c2.  call `translate`(v7, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1ea9c8.  v2:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea9cc.  v3:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea9d0.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1ea9d6.  v3:= temp;
  #L1ea9d8.  v3:= (`int`) v3 @kind f2i;
  #L1ea9da.  v4:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ea9de.  call temp:= `height`(v4) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1ea9e4.  v4:= temp;
  #L1ea9e6.  v4:= (`int`) v4 @kind f2i;
  #L1ea9e8.  v5:= 0I;
  #L1ea9ea.  call `setBounds`(v2, v5, v5, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L1ea9f0.  v2:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea9f4.  call `draw`(v2, v7) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1ea9fa.  v2:= -v0 @kind float;
  #L1ea9fc.  v3:= -v1 @kind float;
  #L1ea9fe.  call `translate`(v7, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1eaa04.  return @kind void;
}
procedure `void` `drawChipStroke`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.graphics.Canvas` v8 @kind object @name `canvas`, `android.graphics.Rect` v9 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1eaa18.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1eaa1c.  v1:= 0I;
  #L1eaa1e.  v0:= fcmpl(v0, v1);
  #L1eaa22.  if v0 <= 0 then goto L1eaac4;
  #L1eaa26.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1eaa2a.  if v0 != 0 then goto L1eaac4;
  #L1eaa2e.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eaa32.  v1:= v7.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L1eaa36.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1eaa3c.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eaa40.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L1eaa44.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1eaa4a.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1eaa4e.  if v0 != 0 then goto L1eaa64;
  #L1eaa52.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eaa56.  call temp:= `getTintColorFilter`(v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L1eaa5c.  v1:= temp @kind object;
  #L1eaa5e.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L1eaa64.  v0:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eaa68.  v1:= v9.`android.graphics.Rect.left` @type ^`int`;
  #L1eaa6c.  v1:= (`float`) v1 @kind i2f;
  #L1eaa6e.  v2:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1eaa72.  v3:= 2.0F;
  #L1eaa76.  v2:= v2 / v3 @kind float;
  #L1eaa78.  v1:= v1 + v2 @kind float;
  #L1eaa7a.  v2:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L1eaa7e.  v2:= (`float`) v2 @kind i2f;
  #L1eaa80.  v4:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1eaa84.  v4:= v4 / v3 @kind float;
  #L1eaa86.  v2:= v2 + v4 @kind float;
  #L1eaa88.  v4:= v9.`android.graphics.Rect.right` @type ^`int`;
  #L1eaa8c.  v4:= (`float`) v4 @kind i2f;
  #L1eaa8e.  v5:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1eaa92.  v5:= v5 / v3 @kind float;
  #L1eaa94.  v4:= v4 - v5 @kind float;
  #L1eaa96.  v5:= v9.`android.graphics.Rect.bottom` @type ^`int`;
  #L1eaa9a.  v5:= (`float`) v5 @kind i2f;
  #L1eaa9c.  v6:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1eaaa0.  v6:= v6 / v3 @kind float;
  #L1eaaa2.  v5:= v5 - v6 @kind float;
  #L1eaaa4.  call `set`(v0, v1, v2, v4, v5) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L1eaaaa.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1eaaae.  v1:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1eaab2.  v1:= v1 / v3 @kind float;
  #L1eaab4.  v0:= v0 - v1 @kind float;
  #L1eaab6.  v1:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eaaba.  v2:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eaabe.  call `drawRoundRect`(v8, v1, v0, v0, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1eaac4.  return @kind void;
}
procedure `void` `drawChipSurface`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object @name `canvas`, `android.graphics.Rect` v6 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eaad8.  v0:= v4.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1eaadc.  if v0 != 0 then goto L1eab24;
  #L1eaae0.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eaae4.  v1:= v4.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L1eaae8.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1eaaee.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eaaf2.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L1eaaf6.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1eaafc.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eab00.  call `set`(v0, v6) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1eab06.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eab0a.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1eab10.  v1:= temp;
  #L1eab12.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1eab18.  v2:= temp;
  #L1eab1a.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eab1e.  call `drawRoundRect`(v5, v0, v1, v2, v3) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1eab24.  return @kind void;
}
procedure `void` `drawCloseIcon`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`, `android.graphics.Rect` v8 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1eab38.  call temp:= `showsCloseIcon`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1eab3e.  v0:= temp;
  #L1eab40.  if v0 == 0 then goto L1eabd4;
  #L1eab44.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eab48.  call `calculateCloseIconBounds`(v6, v8, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1eab4e.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eab52.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1eab56.  v1:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eab5a.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L1eab5e.  call `translate`(v7, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1eab64.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eab68.  v3:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eab6c.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1eab72.  v3:= temp;
  #L1eab74.  v3:= (`int`) v3 @kind f2i;
  #L1eab76.  v4:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eab7a.  call temp:= `height`(v4) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1eab80.  v4:= temp;
  #L1eab82.  v4:= (`int`) v4 @kind f2i;
  #L1eab84.  v5:= 0I;
  #L1eab86.  call `setBounds`(v2, v5, v5, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L1eab8c.  v2:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L1eab90.  if v2 == 0 then goto L1eabc0;
  #L1eab94.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eab98.  v3:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eab9c.  call temp:= `getBounds`(v3) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1eaba2.  v3:= temp @kind object;
  #L1eaba4.  call `setBounds`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1eabaa.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eabae.  call `jumpToCurrentState`(v2) @signature `Landroid/graphics/drawable/Drawable;.jumpToCurrentState:()V` @kind virtual;
  #L1eabb4.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eabb8.  call `draw`(v2, v7) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1eabbe.  goto L1eabca;
  #L1eabc0.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eabc4.  call `draw`(v2, v7) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1eabca.  v2:= -v0 @kind float;
  #L1eabcc.  v3:= -v1 @kind float;
  #L1eabce.  call `translate`(v7, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1eabd4.  return @kind void;
}
procedure `void` `drawCompatRipple`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object @name `canvas`, `android.graphics.Rect` v6 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eabe8.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eabec.  v1:= v4.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L1eabf0.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1eabf6.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eabfa.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L1eabfe.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1eac04.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eac08.  call `set`(v0, v6) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1eac0e.  v0:= v4.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1eac12.  if v0 != 0 then goto L1eac36;
  #L1eac16.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eac1a.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1eac20.  v1:= temp;
  #L1eac22.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1eac28.  v2:= temp;
  #L1eac2a.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eac2e.  call `drawRoundRect`(v5, v0, v1, v2, v3) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1eac34.  goto L1eac60;
  #L1eac36.  v0:= new `android.graphics.RectF`;
  #L1eac3a.  call `<init>`(v0, v6) @signature `Landroid/graphics/RectF;.<init>:(Landroid/graphics/Rect;)V` @kind direct;
  #L1eac40.  v1:= v4.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L1eac44.  call `calculatePathForSize`(v4, v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L1eac4a.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eac4e.  v1:= v4.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L1eac52.  call temp:= `getBoundsAsRectF`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1eac58.  v2:= temp @kind object;
  #L1eac5a.  call `drawShape`(v4, v5, v0, v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Landroid/graphics/RectF;)V` @kind super;
  #L1eac60.  return @kind void;
}
procedure `void` `drawDebug`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object @name `canvas`, `android.graphics.Rect` v11 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1eac74.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eac78.  if v0 == 0 then goto L1ead7e;
  #L1eac7c.  v1:= -16777216I;
  #L1eac80.  v2:= 127I;
  #L1eac84.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1eac8a.  v1:= temp;
  #L1eac8c.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1eac92.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eac96.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/Rect;Landroid/graphics/Paint;)V` @kind virtual;
  #L1eac9c.  call temp:= `showsChipIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1eaca2.  v0:= temp;
  #L1eaca4.  if v0 != 0 then goto L1eacb4;
  #L1eaca8.  call temp:= `showsCheckedIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1eacae.  v0:= temp;
  #L1eacb0.  if v0 == 0 then goto L1eaccc;
  #L1eacb4.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eacb8.  call `calculateChipIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1eacbe.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eacc2.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eacc6.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1eaccc.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1eacd0.  if v0 == 0 then goto L1eacfc;
  #L1eacd4.  v0:= v11.`android.graphics.Rect.left` @type ^`int`;
  #L1eacd8.  v4:= (`float`) v0 @kind i2f;
  #L1eacda.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L1eace0.  v5:= temp;
  #L1eace2.  v0:= v11.`android.graphics.Rect.right` @type ^`int`;
  #L1eace6.  v6:= (`float`) v0 @kind i2f;
  #L1eace8.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L1eacee.  v7:= temp;
  #L1eacf0.  v8:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1eacf4.  v3:= v10 @kind object;
  #L1eacf6.  call `drawLine`(v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L1eacfc.  call temp:= `showsCloseIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ead02.  v0:= temp;
  #L1ead04.  if v0 == 0 then goto L1ead20;
  #L1ead08.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ead0c.  call `calculateCloseIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1ead12.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ead16.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ead1a.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1ead20.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ead24.  v1:= -65536I;
  #L1ead28.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1ead2e.  v1:= temp;
  #L1ead30.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1ead36.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ead3a.  call `calculateChipTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1ead40.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ead44.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ead48.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1ead4e.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ead52.  v1:= -16711936I;
  #L1ead58.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1ead5e.  v1:= temp;
  #L1ead60.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1ead66.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ead6a.  call `calculateCloseIconTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1ead70.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1ead74.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ead78.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1ead7e.  return @kind void;
}
procedure `void` `drawText`(`com.google.android.material.chip.ChipDrawable` v11 @kind this, `android.graphics.Canvas` v12 @kind object @name `canvas`, `android.graphics.Rect` v13 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1ead90.  v0:= v11.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1ead94.  if v0 == 0 then goto L1eaec2;
  #L1ead98.  v0:= v11.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L1ead9c.  call temp:= `calculateTextOriginAndAlignment`(v11, v13, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @kind virtual;
  #L1eada2.  v0:= temp @kind object;
  #L1eada4.  v1:= v11.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eada8.  call `calculateTextBounds`(v11, v13, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1eadae.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1eadb2.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1eadb8.  v1:= temp @kind object;
  #L1eadba.  if v1 == 0 then goto L1eade4;
  #L1eadbe.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1eadc2.  call temp:= `getTextPaint`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1eadc8.  v1:= temp @kind object;
  #L1eadca.  call temp:= `getState`(v11) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1eadd0.  v2:= temp @kind object;
  #L1eadd2.  v1.`android.text.TextPaint.drawableState` @type ^`int`[] := v2 @kind object;
  #L1eadd6.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1eadda.  v2:= v11.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eadde.  call `updateTextPaintDrawState`(v1, v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.updateTextPaintDrawState:(Landroid/content/Context;)V` @kind virtual;
  #L1eade4.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1eade8.  call temp:= `getTextPaint`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1eadee.  v1:= temp @kind object;
  #L1eadf0.  call `setTextAlign`(v1, v0) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L1eadf6.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1eadfa.  call temp:= `getText`(v11) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L1eae00.  v2:= temp @kind object;
  #L1eae02.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L1eae08.  v2:= temp @kind object;
  #L1eae0a.  call temp:= `getTextWidth`(v1, v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L1eae10.  v1:= temp;
  #L1eae12.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1eae18.  v1:= temp;
  #L1eae1a.  v2:= v11.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eae1e.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1eae24.  v2:= temp;
  #L1eae26.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1eae2c.  v2:= temp;
  #L1eae2e.  if v1 <= v2 then goto L1eae36;
  #L1eae32.  v1:= 1I;
  #L1eae34.  goto L1eae38;
  #L1eae36.  v1:= 0I;
  #L1eae38.  v2:= 0I;
  #L1eae3a.  if v1 == 0 then goto L1eae50;
  #L1eae3e.  call temp:= `save`(v12) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L1eae44.  v2:= temp;
  #L1eae46.  v3:= v11.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eae4a.  call temp:= `clipRect`(v12, v3) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L1eae50.  v3:= v11.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1eae54.  if v1 == 0 then goto L1eae88;
  #L1eae58.  v4:= v11.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1eae5c.  if v4 == 0 then goto L1eae88;
  #L1eae60.  v4:= v11.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1eae64.  v5:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1eae68.  call temp:= `getTextPaint`(v5) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1eae6e.  v5:= temp @kind object;
  #L1eae70.  v6:= v11.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1eae74.  call temp:= `width`(v6) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1eae7a.  v6:= temp;
  #L1eae7c.  v7:= v11.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1eae80.  call temp:= `ellipsize`(v4, v5, v6, v7) @signature `Landroid/text/TextUtils;.ellipsize:(Ljava/lang/CharSequence;Landroid/text/TextPaint;FLandroid/text/TextUtils$TruncateAt;)Ljava/lang/CharSequence;` @kind static;
  #L1eae86.  v3:= temp @kind object;
  #L1eae88.  v6:= 0I;
  #L1eae8a.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1eae90.  v7:= temp;
  #L1eae92.  v4:= v11.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L1eae96.  v8:= v4.`android.graphics.PointF.x` @type ^`float`;
  #L1eae9a.  v4:= v11.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L1eae9e.  v9:= v4.`android.graphics.PointF.y` @type ^`float`;
  #L1eaea2.  v4:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1eaea6.  call temp:= `getTextPaint`(v4) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1eaeac.  v10:= temp @kind object;
  #L1eaeae.  v4:= v12 @kind object;
  #L1eaeb0.  v5:= v3 @kind object;
  #L1eaeb2.  call `drawText`(v4, v5, v6, v7, v8, v9, v10) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/CharSequence;IIFFLandroid/graphics/Paint;)V` @kind virtual;
  #L1eaeb8.  if v1 == 0 then goto L1eaec2;
  #L1eaebc.  call `restoreToCount`(v12, v2) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L1eaec2.  return @kind void;
}
procedure `float` `getCurrentChipIconHeight`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconHeight:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1ea110.  v0:= v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L1ea114.  if v0 == 0 then goto L1ea11e;
  #L1ea118.  v0:= v3.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea11c.  goto L1ea122;
  #L1ea11e.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea122.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1ea126.  v2:= 0I;
  #L1ea128.  v2:= fcmpg(v1, v2);
  #L1ea12c.  if v2 > 0 then goto L1ea170;
  #L1ea130.  if v0 == 0 then goto L1ea170;
  #L1ea134.  v1:= v3.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ea138.  v2:= 24I;
  #L1ea13c.  call temp:= `dpToPx`(v1, v2) @signature `Lcom/google/android/material/internal/ViewUtils;.dpToPx:(Landroid/content/Context;I)F` @kind static;
  #L1ea142.  v1:= temp;
  #L1ea144.  v1:= (`double`) v1 @kind f2d;
  #L1ea146.  call temp:= `ceil`(v1) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L1ea14c.  v1:= temp @kind wide;
  #L1ea14e.  v1:= (`float`) v1 @kind d2f;
  #L1ea150.  call temp:= `getIntrinsicHeight`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L1ea156.  v2:= temp;
  #L1ea158.  v2:= (`float`) v2 @kind i2f;
  #L1ea15a.  v2:= fcmpg(v2, v1);
  #L1ea15e.  if v2 > 0 then goto L1ea16e;
  #L1ea162.  call temp:= `getIntrinsicHeight`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L1ea168.  v2:= temp;
  #L1ea16a.  v2:= (`float`) v2 @kind i2f;
  #L1ea16c.  return v2;
  #L1ea16e.  return v1;
  #L1ea170.  return v1;
}
procedure `float` `getCurrentChipIconWidth`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconWidth:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1ea184.  v0:= v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L1ea188.  if v0 == 0 then goto L1ea192;
  #L1ea18c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea190.  goto L1ea196;
  #L1ea192.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ea196.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1ea19a.  v2:= 0I;
  #L1ea19c.  v2:= fcmpg(v1, v2);
  #L1ea1a0.  if v2 > 0 then goto L1ea1b4;
  #L1ea1a4.  if v0 == 0 then goto L1ea1b4;
  #L1ea1a8.  call temp:= `getIntrinsicWidth`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicWidth:()I` @kind virtual;
  #L1ea1ae.  v1:= temp;
  #L1ea1b0.  v1:= (`float`) v1 @kind i2f;
  #L1ea1b2.  return v1;
  #L1ea1b4.  return v1;
}
procedure `android.graphics.ColorFilter` `getTintColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1e95c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L1e95c8.  if v0 == 0 then goto L1e95ce;
  #L1e95cc.  goto L1e95d2;
  #L1e95ce.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1e95d2.  return v0 @kind object;
}
procedure `boolean` `hasState`(`int`[] v4 @kind object @name `stateSet`, `int` v5 @name `state`) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e972c.  v0:= 0I;
  #L1e972e.  if v4 != 0 then goto L1e9734;
  #L1e9732.  return v0;
  #L1e9734.  v1:= length @variable v4;
  #L1e9736.  v2:= v0;
  #L1e9738.  if v2 >= v1 then goto L1e974e;
  #L1e973c.  v3:= v4[v2];
  #L1e9740.  if v3 != v5 then goto L1e9748;
  #L1e9744.  v0:= 1I;
  #L1e9746.  return v0;
  #L1e9748.  v2:= v2 + 1;
  #L1e974c.  goto L1e9738;
  #L1e974e.  return v0;
}
procedure `boolean` `isStateful`(`android.content.res.ColorStateList` v1 @kind object @name `colorStateList`) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1e9904.  if v1 == 0 then goto L1e9918;
  #L1e9908.  call temp:= `isStateful`(v1) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L1e990e.  v0:= temp;
  #L1e9910.  if v0 == 0 then goto L1e9918;
  #L1e9914.  v0:= 1I;
  #L1e9916.  goto L1e991a;
  #L1e9918.  v0:= 0I;
  #L1e991a.  return v0;
}
procedure `boolean` `isStateful`(`android.graphics.drawable.Drawable` v1 @kind object @name `drawable`) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1e992c.  if v1 == 0 then goto L1e9940;
  #L1e9930.  call temp:= `isStateful`(v1) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L1e9936.  v0:= temp;
  #L1e9938.  if v0 == 0 then goto L1e9940;
  #L1e993c.  v0:= 1I;
  #L1e993e.  goto L1e9942;
  #L1e9940.  v0:= 0I;
  #L1e9942.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.resources.TextAppearance` v1 @kind object @name `textAppearance`) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1e9954.  if v1 == 0 then goto L1e9974;
  #L1e9958.  v0:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e995c.  if v0 == 0 then goto L1e9974;
  #L1e9960.  v0:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9964.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L1e996a.  v0:= temp;
  #L1e996c.  if v0 == 0 then goto L1e9974;
  #L1e9970.  v0:= 1I;
  #L1e9972.  goto L1e9976;
  #L1e9974.  v0:= 0I;
  #L1e9976.  return v0;
}
procedure `void` `loadFromAttributes`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.util.AttributeSet` v10 @kind object @name `attrs`, `int` v11 @name `defStyleAttr`, `int` v12 @name `defStyleRes`) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1eafb0.  v0:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eafb4.  v2:= `@@com.google.android.material.R$styleable.Chip` @type ^`int`[] @kind object;
  #L1eafb8.  v6:= 0I;
  #L1eafba.  v5:= new `int`[v6];
  #L1eafbe.  v1:= v10 @kind object;
  #L1eafc0.  v3:= v11;
  #L1eafc2.  v4:= v12;
  #L1eafc4.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L1eafca.  v0:= temp @kind object;
  #L1eafcc.  v1:= `@@com.google.android.material.R$styleable.Chip_shapeAppearance` @type ^`int`;
  #L1eafd0.  call temp:= `hasValue`(v0, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L1eafd6.  v1:= temp;
  #L1eafd8.  v9.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` := v1 @kind boolean;
  #L1eafdc.  v1:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eafe0.  v2:= `@@com.google.android.material.R$styleable.Chip_chipSurfaceColor` @type ^`int`;
  #L1eafe4.  call temp:= `getColorStateList`(v1, v0, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eafea.  v1:= temp @kind object;
  #L1eafec.  call `setChipSurfaceColor`(v9, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @kind direct;
  #L1eaff2.  v1:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eaff6.  v2:= `@@com.google.android.material.R$styleable.Chip_chipBackgroundColor` @type ^`int`;
  #L1eaffa.  call temp:= `getColorStateList`(v1, v0, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eb000.  v1:= temp @kind object;
  #L1eb002.  call `setChipBackgroundColor`(v9, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eb008.  v1:= `@@com.google.android.material.R$styleable.Chip_chipMinHeight` @type ^`int`;
  #L1eb00c.  v2:= 0I;
  #L1eb00e.  call temp:= `getDimension`(v0, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb014.  v1:= temp;
  #L1eb016.  call `setChipMinHeight`(v9, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L1eb01c.  v1:= `@@com.google.android.material.R$styleable.Chip_chipCornerRadius` @type ^`int`;
  #L1eb020.  call temp:= `hasValue`(v0, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L1eb026.  v1:= temp;
  #L1eb028.  if v1 == 0 then goto L1eb03e;
  #L1eb02c.  v1:= `@@com.google.android.material.R$styleable.Chip_chipCornerRadius` @type ^`int`;
  #L1eb030.  call temp:= `getDimension`(v0, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb036.  v1:= temp;
  #L1eb038.  call `setChipCornerRadius`(v9, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L1eb03e.  v1:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb042.  v3:= `@@com.google.android.material.R$styleable.Chip_chipStrokeColor` @type ^`int`;
  #L1eb046.  call temp:= `getColorStateList`(v1, v0, v3) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eb04c.  v1:= temp @kind object;
  #L1eb04e.  call `setChipStrokeColor`(v9, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eb054.  v1:= `@@com.google.android.material.R$styleable.Chip_chipStrokeWidth` @type ^`int`;
  #L1eb058.  call temp:= `getDimension`(v0, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb05e.  v1:= temp;
  #L1eb060.  call `setChipStrokeWidth`(v9, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L1eb066.  v1:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb06a.  v3:= `@@com.google.android.material.R$styleable.Chip_rippleColor` @type ^`int`;
  #L1eb06e.  call temp:= `getColorStateList`(v1, v0, v3) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eb074.  v1:= temp @kind object;
  #L1eb076.  call `setRippleColor`(v9, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eb07c.  v1:= `@@com.google.android.material.R$styleable.Chip_android_text` @type ^`int`;
  #L1eb080.  call temp:= `getText`(v0, v1) @signature `Landroid/content/res/TypedArray;.getText:(I)Ljava/lang/CharSequence;` @kind virtual;
  #L1eb086.  v1:= temp @kind object;
  #L1eb088.  call `setText`(v9, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L1eb08e.  v1:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb092.  v3:= `@@com.google.android.material.R$styleable.Chip_android_textAppearance` @type ^`int`;
  #L1eb096.  call temp:= `getTextAppearance`(v1, v0, v3) @signature `Lcom/google/android/material/resources/MaterialResources;.getTextAppearance:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/resources/TextAppearance;` @kind static;
  #L1eb09c.  v1:= temp @kind object;
  #L1eb09e.  v3:= `@@com.google.android.material.R$styleable.Chip_android_textSize` @type ^`int`;
  #L1eb0a2.  v4:= v1.`com.google.android.material.resources.TextAppearance.textSize` @type ^`float`;
  #L1eb0a6.  call temp:= `getDimension`(v0, v3, v4) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb0ac.  v3:= temp;
  #L1eb0ae.  v1.`com.google.android.material.resources.TextAppearance.textSize` @type ^`float` := v3;
  #L1eb0b2.  call `setTextAppearance`(v9, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L1eb0b8.  v4:= `@@com.google.android.material.R$styleable.Chip_android_ellipsize` @type ^`int`;
  #L1eb0bc.  call temp:= `getInt`(v0, v4, v6) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L1eb0c2.  v4:= temp;
  #L1eb0c4.  v5:= 1I;
  #L1eb0c6.  if v4 == v5 then goto L1eb0f0;
  #L1eb0ca.  v5:= 2I;
  #L1eb0cc.  if v4 == v5 then goto L1eb0e4;
  #L1eb0d0.  v5:= 3I;
  #L1eb0d2.  if v4 == v5 then goto L1eb0d8;
  #L1eb0d6.  goto L1eb0fc;
  #L1eb0d8.  v5:= `@@android.text.TextUtils$TruncateAt.END` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1eb0dc.  call `setEllipsize`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L1eb0e2.  goto L1eb0fc;
  #L1eb0e4.  v5:= `@@android.text.TextUtils$TruncateAt.MIDDLE` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1eb0e8.  call `setEllipsize`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L1eb0ee.  goto L1eb0fc;
  #L1eb0f0.  v5:= `@@android.text.TextUtils$TruncateAt.START` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1eb0f4.  call `setEllipsize`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L1eb0fa.  
  #L1eb0fc.  v5:= `@@com.google.android.material.R$styleable.Chip_chipIconVisible` @type ^`int`;
  #L1eb100.  call temp:= `getBoolean`(v0, v5, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eb106.  v5:= temp;
  #L1eb108.  call `setChipIconVisible`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L1eb10e.  v5:= "http://schemas.android.com/apk/res-auto" @kind object;
  #L1eb112.  if v10 == 0 then goto L1eb148;
  #L1eb116.  v7:= "chipIconEnabled" @kind object;
  #L1eb11a.  call temp:= `getAttributeValue`(v10, v5, v7) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1eb120.  v7:= temp @kind object;
  #L1eb122.  if v7 == 0 then goto L1eb148;
  #L1eb126.  v7:= "chipIconVisible" @kind object;
  #L1eb12a.  call temp:= `getAttributeValue`(v10, v5, v7) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1eb130.  v7:= temp @kind object;
  #L1eb132.  if v7 != 0 then goto L1eb148;
  #L1eb136.  v7:= `@@com.google.android.material.R$styleable.Chip_chipIconEnabled` @type ^`int`;
  #L1eb13a.  call temp:= `getBoolean`(v0, v7, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eb140.  v7:= temp;
  #L1eb142.  call `setChipIconVisible`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L1eb148.  v7:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb14c.  v8:= `@@com.google.android.material.R$styleable.Chip_chipIcon` @type ^`int`;
  #L1eb150.  call temp:= `getDrawable`(v7, v0, v8) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1eb156.  v7:= temp @kind object;
  #L1eb158.  call `setChipIcon`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1eb15e.  v7:= `@@com.google.android.material.R$styleable.Chip_chipIconTint` @type ^`int`;
  #L1eb162.  call temp:= `hasValue`(v0, v7) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L1eb168.  v7:= temp;
  #L1eb16a.  if v7 == 0 then goto L1eb184;
  #L1eb16e.  v7:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb172.  v8:= `@@com.google.android.material.R$styleable.Chip_chipIconTint` @type ^`int`;
  #L1eb176.  call temp:= `getColorStateList`(v7, v0, v8) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eb17c.  v7:= temp @kind object;
  #L1eb17e.  call `setChipIconTint`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eb184.  v7:= `@@com.google.android.material.R$styleable.Chip_chipIconSize` @type ^`int`;
  #L1eb188.  v8:= -1.0F;
  #L1eb18c.  call temp:= `getDimension`(v0, v7, v8) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb192.  v7:= temp;
  #L1eb194.  call `setChipIconSize`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L1eb19a.  v7:= `@@com.google.android.material.R$styleable.Chip_closeIconVisible` @type ^`int`;
  #L1eb19e.  call temp:= `getBoolean`(v0, v7, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eb1a4.  v7:= temp;
  #L1eb1a6.  call `setCloseIconVisible`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L1eb1ac.  if v10 == 0 then goto L1eb1e2;
  #L1eb1b0.  v7:= "closeIconEnabled" @kind object;
  #L1eb1b4.  call temp:= `getAttributeValue`(v10, v5, v7) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1eb1ba.  v7:= temp @kind object;
  #L1eb1bc.  if v7 == 0 then goto L1eb1e2;
  #L1eb1c0.  v7:= "closeIconVisible" @kind object;
  #L1eb1c4.  call temp:= `getAttributeValue`(v10, v5, v7) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1eb1ca.  v7:= temp @kind object;
  #L1eb1cc.  if v7 != 0 then goto L1eb1e2;
  #L1eb1d0.  v7:= `@@com.google.android.material.R$styleable.Chip_closeIconEnabled` @type ^`int`;
  #L1eb1d4.  call temp:= `getBoolean`(v0, v7, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eb1da.  v7:= temp;
  #L1eb1dc.  call `setCloseIconVisible`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L1eb1e2.  v7:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb1e6.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIcon` @type ^`int`;
  #L1eb1ea.  call temp:= `getDrawable`(v7, v0, v8) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1eb1f0.  v7:= temp @kind object;
  #L1eb1f2.  call `setCloseIcon`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1eb1f8.  v7:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb1fc.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIconTint` @type ^`int`;
  #L1eb200.  call temp:= `getColorStateList`(v7, v0, v8) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eb206.  v7:= temp @kind object;
  #L1eb208.  call `setCloseIconTint`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eb20e.  v7:= `@@com.google.android.material.R$styleable.Chip_closeIconSize` @type ^`int`;
  #L1eb212.  call temp:= `getDimension`(v0, v7, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb218.  v7:= temp;
  #L1eb21a.  call `setCloseIconSize`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L1eb220.  v7:= `@@com.google.android.material.R$styleable.Chip_android_checkable` @type ^`int`;
  #L1eb224.  call temp:= `getBoolean`(v0, v7, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eb22a.  v7:= temp;
  #L1eb22c.  call `setCheckable`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L1eb232.  v7:= `@@com.google.android.material.R$styleable.Chip_checkedIconVisible` @type ^`int`;
  #L1eb236.  call temp:= `getBoolean`(v0, v7, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eb23c.  v7:= temp;
  #L1eb23e.  call `setCheckedIconVisible`(v9, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1eb244.  if v10 == 0 then goto L1eb27a;
  #L1eb248.  v7:= "checkedIconEnabled" @kind object;
  #L1eb24c.  call temp:= `getAttributeValue`(v10, v5, v7) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1eb252.  v7:= temp @kind object;
  #L1eb254.  if v7 == 0 then goto L1eb27a;
  #L1eb258.  v7:= "checkedIconVisible" @kind object;
  #L1eb25c.  call temp:= `getAttributeValue`(v10, v5, v7) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1eb262.  v5:= temp @kind object;
  #L1eb264.  if v5 != 0 then goto L1eb27a;
  #L1eb268.  v5:= `@@com.google.android.material.R$styleable.Chip_checkedIconEnabled` @type ^`int`;
  #L1eb26c.  call temp:= `getBoolean`(v0, v5, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1eb272.  v5:= temp;
  #L1eb274.  call `setCheckedIconVisible`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1eb27a.  v5:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb27e.  v6:= `@@com.google.android.material.R$styleable.Chip_checkedIcon` @type ^`int`;
  #L1eb282.  call temp:= `getDrawable`(v5, v0, v6) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1eb288.  v5:= temp @kind object;
  #L1eb28a.  call `setCheckedIcon`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1eb290.  v5:= `@@com.google.android.material.R$styleable.Chip_checkedIconTint` @type ^`int`;
  #L1eb294.  call temp:= `hasValue`(v0, v5) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L1eb29a.  v5:= temp;
  #L1eb29c.  if v5 == 0 then goto L1eb2b6;
  #L1eb2a0.  v5:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb2a4.  v6:= `@@com.google.android.material.R$styleable.Chip_checkedIconTint` @type ^`int`;
  #L1eb2a8.  call temp:= `getColorStateList`(v5, v0, v6) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eb2ae.  v5:= temp @kind object;
  #L1eb2b0.  call `setCheckedIconTint`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eb2b6.  v5:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb2ba.  v6:= `@@com.google.android.material.R$styleable.Chip_showMotionSpec` @type ^`int`;
  #L1eb2be.  call temp:= `createFromAttribute`(v5, v0, v6) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L1eb2c4.  v5:= temp @kind object;
  #L1eb2c6.  call `setShowMotionSpec`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L1eb2cc.  v5:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb2d0.  v6:= `@@com.google.android.material.R$styleable.Chip_hideMotionSpec` @type ^`int`;
  #L1eb2d4.  call temp:= `createFromAttribute`(v5, v0, v6) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L1eb2da.  v5:= temp @kind object;
  #L1eb2dc.  call `setHideMotionSpec`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L1eb2e2.  v5:= `@@com.google.android.material.R$styleable.Chip_chipStartPadding` @type ^`int`;
  #L1eb2e6.  call temp:= `getDimension`(v0, v5, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb2ec.  v5:= temp;
  #L1eb2ee.  call `setChipStartPadding`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L1eb2f4.  v5:= `@@com.google.android.material.R$styleable.Chip_iconStartPadding` @type ^`int`;
  #L1eb2f8.  call temp:= `getDimension`(v0, v5, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb2fe.  v5:= temp;
  #L1eb300.  call `setIconStartPadding`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L1eb306.  v5:= `@@com.google.android.material.R$styleable.Chip_iconEndPadding` @type ^`int`;
  #L1eb30a.  call temp:= `getDimension`(v0, v5, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb310.  v5:= temp;
  #L1eb312.  call `setIconEndPadding`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L1eb318.  v5:= `@@com.google.android.material.R$styleable.Chip_textStartPadding` @type ^`int`;
  #L1eb31c.  call temp:= `getDimension`(v0, v5, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb322.  v5:= temp;
  #L1eb324.  call `setTextStartPadding`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L1eb32a.  v5:= `@@com.google.android.material.R$styleable.Chip_textEndPadding` @type ^`int`;
  #L1eb32e.  call temp:= `getDimension`(v0, v5, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb334.  v5:= temp;
  #L1eb336.  call `setTextEndPadding`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L1eb33c.  v5:= `@@com.google.android.material.R$styleable.Chip_closeIconStartPadding` @type ^`int`;
  #L1eb340.  call temp:= `getDimension`(v0, v5, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb346.  v5:= temp;
  #L1eb348.  call `setCloseIconStartPadding`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L1eb34e.  v5:= `@@com.google.android.material.R$styleable.Chip_closeIconEndPadding` @type ^`int`;
  #L1eb352.  call temp:= `getDimension`(v0, v5, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb358.  v5:= temp;
  #L1eb35a.  call `setCloseIconEndPadding`(v9, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L1eb360.  v5:= `@@com.google.android.material.R$styleable.Chip_chipEndPadding` @type ^`int`;
  #L1eb364.  call temp:= `getDimension`(v0, v5, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1eb36a.  v2:= temp;
  #L1eb36c.  call `setChipEndPadding`(v9, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L1eb372.  v2:= `@@com.google.android.material.R$styleable.Chip_android_maxWidth` @type ^`int`;
  #L1eb376.  v5:= 2147483647I;
  #L1eb37c.  call temp:= `getDimensionPixelSize`(v0, v2, v5) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L1eb382.  v2:= temp;
  #L1eb384.  call `setMaxWidth`(v9, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @kind virtual;
  #L1eb38a.  call `recycle`(v0) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L1eb390.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v18 @kind this, `int`[] v19 @kind object @name `chipState`, `int`[] v20 @kind object @name `closeIconState`) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L1e9aa0.  v0:= v18 @kind object;
  #L1e9aa4.  v1:= v19 @kind object;
  #L1e9aa8.  v2:= v20 @kind object;
  #L1e9aac.  call temp:= `onStateChange`(v18, v19) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L1e9ab2.  v3:= temp;
  #L1e9ab4.  v4:= 0I;
  #L1e9ab6.  v5:= v0.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9aba.  if v5 == 0 then goto L1e9acc;
  #L1e9abe.  v7:= v0.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L1e9ac2.  call temp:= `getColorForState`(v5, v1, v7) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1e9ac8.  v5:= temp;
  #L1e9aca.  goto L1e9ace;
  #L1e9acc.  v5:= 0I;
  #L1e9ace.  call temp:= `compositeElevationOverlayIfNeeded`(v0, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L1e9ad4.  v5:= temp;
  #L1e9ad6.  v7:= v0.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L1e9ada.  if v7 == v5 then goto L1e9ae4;
  #L1e9ade.  v0.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int` := v5;
  #L1e9ae2.  v3:= 1I;
  #L1e9ae4.  v7:= v0.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9ae8.  if v7 == 0 then goto L1e9afa;
  #L1e9aec.  v8:= v0.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L1e9af0.  call temp:= `getColorForState`(v7, v1, v8) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1e9af6.  v7:= temp;
  #L1e9af8.  goto L1e9afc;
  #L1e9afa.  v7:= 0I;
  #L1e9afc.  call temp:= `compositeElevationOverlayIfNeeded`(v0, v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L1e9b02.  v7:= temp;
  #L1e9b04.  v8:= v0.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L1e9b08.  if v8 == v7 then goto L1e9b12;
  #L1e9b0c.  v0.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int` := v7;
  #L1e9b10.  v3:= 1I;
  #L1e9b12.  
  #L1e9b14.  call temp:= `layer`(v5, v7) @signature `Lcom/google/android/material/color/MaterialColors;.layer:(II)I` @kind static;
  #L1e9b1a.  v8:= temp;
  #L1e9b1c.  v9:= v0.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int`;
  #L1e9b20.  v10:= 1I;
  #L1e9b22.  if v9 == v8 then goto L1e9b2a;
  #L1e9b26.  v9:= v10;
  #L1e9b28.  goto L1e9b2c;
  #L1e9b2a.  v9:= 0I;
  #L1e9b2c.  call temp:= `getFillColor`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L1e9b32.  v11:= temp @kind object;
  #L1e9b34.  if v11 != 0 then goto L1e9b3c;
  #L1e9b38.  v11:= v10;
  #L1e9b3a.  goto L1e9b3e;
  #L1e9b3c.  v11:= 0I;
  #L1e9b3e.  v9:= v9 ^| v11 @kind int;
  #L1e9b40.  if v9 == 0 then goto L1e9b58;
  #L1e9b44.  v0.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int` := v8;
  #L1e9b48.  call temp:= `valueOf`(v8) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L1e9b4e.  v11:= temp @kind object;
  #L1e9b50.  call `setFillColor`(v0, v11) @signature `Lcom/google/android/material/chip/ChipDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1e9b56.  v3:= 1I;
  #L1e9b58.  v11:= v0.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9b5c.  if v11 == 0 then goto L1e9b6e;
  #L1e9b60.  v12:= v0.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L1e9b64.  call temp:= `getColorForState`(v11, v1, v12) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1e9b6a.  v11:= temp;
  #L1e9b6c.  goto L1e9b70;
  #L1e9b6e.  v11:= 0I;
  #L1e9b70.  v12:= v0.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L1e9b74.  if v12 == v11 then goto L1e9b7e;
  #L1e9b78.  v0.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int` := v11;
  #L1e9b7c.  v3:= 1I;
  #L1e9b7e.  v12:= v0.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9b82.  if v12 == 0 then goto L1e9ba4;
  #L1e9b86.  call temp:= `shouldDrawRippleCompat`(v19) @signature `Lcom/google/android/material/ripple/RippleUtils;.shouldDrawRippleCompat:([I)Z` @kind static;
  #L1e9b8c.  v12:= temp;
  #L1e9b8e.  if v12 == 0 then goto L1e9ba4;
  #L1e9b92.  v12:= v0.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9b96.  v13:= v0.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L1e9b9a.  call temp:= `getColorForState`(v12, v1, v13) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1e9ba0.  v12:= temp;
  #L1e9ba2.  goto L1e9ba6;
  #L1e9ba4.  v12:= 0I;
  #L1e9ba6.  v13:= v0.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L1e9baa.  if v13 == v12 then goto L1e9bbc;
  #L1e9bae.  v0.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int` := v12;
  #L1e9bb2.  v13:= v0.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1e9bb6.  if v13 == 0 then goto L1e9bbc;
  #L1e9bba.  v3:= 1I;
  #L1e9bbc.  v13:= v0.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1e9bc0.  call temp:= `getTextAppearance`(v13) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1e9bc6.  v13:= temp @kind object;
  #L1e9bc8.  if v13 == 0 then goto L1e9bfe;
  #L1e9bcc.  v13:= v0.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1e9bd0.  call temp:= `getTextAppearance`(v13) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1e9bd6.  v13:= temp @kind object;
  #L1e9bd8.  v13:= v13.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9bdc.  if v13 == 0 then goto L1e9bfe;
  #L1e9be0.  v13:= v0.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1e9be4.  call temp:= `getTextAppearance`(v13) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1e9bea.  v13:= temp @kind object;
  #L1e9bec.  v13:= v13.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9bf0.  v14:= v0.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L1e9bf4.  call temp:= `getColorForState`(v13, v1, v14) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1e9bfa.  v13:= temp;
  #L1e9bfc.  goto L1e9c00;
  #L1e9bfe.  v13:= 0I;
  #L1e9c00.  v14:= v0.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L1e9c04.  if v14 == v13 then goto L1e9c0e;
  #L1e9c08.  v0.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int` := v13;
  #L1e9c0c.  v3:= 1I;
  #L1e9c0e.  call temp:= `getState`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1e9c14.  v14:= temp @kind object;
  #L1e9c16.  v15:= 16842912I;
  #L1e9c1c.  call temp:= `hasState`(v14, v15) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @kind static;
  #L1e9c22.  v14:= temp;
  #L1e9c24.  if v14 == 0 then goto L1e9c32;
  #L1e9c28.  v14:= v0.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L1e9c2c.  if v14 == 0 then goto L1e9c32;
  #L1e9c30.  goto L1e9c34;
  #L1e9c32.  v10:= 0I;
  #L1e9c34.  v14:= v0.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L1e9c38.  if v14 == v10 then goto L1e9c64;
  #L1e9c3c.  v14:= v0.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9c40.  if v14 == 0 then goto L1e9c64;
  #L1e9c44.  call temp:= `calculateChipIconWidth`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1e9c4a.  v14:= temp;
  #L1e9c4c.  v0.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v10 @kind boolean;
  #L1e9c50.  call temp:= `calculateChipIconWidth`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1e9c56.  v15:= temp;
  #L1e9c58.  v3:= 1I;
  #L1e9c5a.  v16:= fcmpl(v14, v15);
  #L1e9c5e.  if v16 == 0 then goto L1e9c64;
  #L1e9c62.  v4:= 1I;
  #L1e9c64.  v14:= v0.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9c68.  if v14 == 0 then goto L1e9c7a;
  #L1e9c6c.  v15:= v0.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L1e9c70.  call temp:= `getColorForState`(v14, v1, v15) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1e9c76.  v14:= temp;
  #L1e9c78.  goto L1e9c7c;
  #L1e9c7a.  v14:= 0I;
  #L1e9c7c.  v15:= v0.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L1e9c80.  if v15 == v14 then goto L1e9c9e;
  #L1e9c84.  v0.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int` := v14;
  #L1e9c88.  v15:= v0.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9c8c.  v6:= v0.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1e9c90.  call temp:= `updateTintFilter`(v0, v15, v6) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L1e9c96.  v6:= temp @kind object;
  #L1e9c98.  v0.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v6 @kind object;
  #L1e9c9c.  v3:= 1I;
  #L1e9c9e.  v6:= v0.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9ca2.  call temp:= `isStateful`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1e9ca8.  v6:= temp;
  #L1e9caa.  if v6 == 0 then goto L1e9cbc;
  #L1e9cae.  v6:= v0.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9cb2.  call temp:= `setState`(v6, v1) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1e9cb8.  v6:= temp;
  #L1e9cba.  v3:= v3 ^| v6 @kind int;
  #L1e9cbc.  v6:= v0.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9cc0.  call temp:= `isStateful`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1e9cc6.  v6:= temp;
  #L1e9cc8.  if v6 == 0 then goto L1e9cda;
  #L1e9ccc.  v6:= v0.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9cd0.  call temp:= `setState`(v6, v1) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1e9cd6.  v6:= temp;
  #L1e9cd8.  v3:= v3 ^| v6 @kind int;
  #L1e9cda.  v6:= v0.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9cde.  call temp:= `isStateful`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1e9ce4.  v6:= temp;
  #L1e9ce6.  if v6 == 0 then goto L1e9d1c;
  #L1e9cea.  v6:= length @variable v1;
  #L1e9cec.  v15:= length @variable v2;
  #L1e9cee.  v6:= v6 + v15 @kind int;
  #L1e9cf0.  v6:= new `int`[v6];
  #L1e9cf4.  v15:= length @variable v1;
  #L1e9cf6.  v17:= v5;
  #L1e9cfa.  v5:= 0I;
  #L1e9cfc.  call `arraycopy`(v1, v5, v6, v5, v15) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1e9d02.  v15:= length @variable v1;
  #L1e9d04.  v1:= length @variable v2;
  #L1e9d06.  call `arraycopy`(v2, v5, v6, v15, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1e9d0c.  v1:= v0.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9d10.  call temp:= `setState`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1e9d16.  v1:= temp;
  #L1e9d18.  v3:= v3 ^| v1 @kind int;
  #L1e9d1a.  goto L1e9d20;
  #L1e9d1c.  v17:= v5;
  #L1e9d20.  v1:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L1e9d24.  if v1 == 0 then goto L1e9d46;
  #L1e9d28.  v1:= v0.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9d2c.  call temp:= `isStateful`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1e9d32.  v1:= temp;
  #L1e9d34.  if v1 == 0 then goto L1e9d46;
  #L1e9d38.  v1:= v0.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9d3c.  call temp:= `setState`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1e9d42.  v1:= temp;
  #L1e9d44.  v3:= v3 ^| v1 @kind int;
  #L1e9d46.  if v3 == 0 then goto L1e9d50;
  #L1e9d4a.  call `invalidateSelf`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1e9d50.  if v4 == 0 then goto L1e9d5a;
  #L1e9d54.  call `onSizeChange`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1e9d5a.  return v3;
}
procedure `void` `setChipSurfaceColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `chipSurfaceColor`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ebb44.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1ebb48.  if v0 == v2 then goto L1ebb5e;
  #L1ebb4c.  v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1ebb50.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1ebb56.  v0:= temp @kind object;
  #L1ebb58.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1ebb5e.  return @kind void;
}
procedure `boolean` `showsCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1e9e40.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L1e9e44.  if v0 == 0 then goto L1e9e5c;
  #L1e9e48.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9e4c.  if v0 == 0 then goto L1e9e5c;
  #L1e9e50.  v0:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L1e9e54.  if v0 == 0 then goto L1e9e5c;
  #L1e9e58.  v0:= 1I;
  #L1e9e5a.  goto L1e9e5e;
  #L1e9e5c.  v0:= 0I;
  #L1e9e5e.  return v0;
}
procedure `boolean` `showsChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1e9e70.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L1e9e74.  if v0 == 0 then goto L1e9e84;
  #L1e9e78.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9e7c.  if v0 == 0 then goto L1e9e84;
  #L1e9e80.  v0:= 1I;
  #L1e9e82.  goto L1e9e86;
  #L1e9e84.  v0:= 0I;
  #L1e9e86.  return v0;
}
procedure `boolean` `showsCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1e9e98.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L1e9e9c.  if v0 == 0 then goto L1e9eac;
  #L1e9ea0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9ea4.  if v0 == 0 then goto L1e9eac;
  #L1e9ea8.  v0:= 1I;
  #L1e9eaa.  goto L1e9eae;
  #L1e9eac.  v0:= 0I;
  #L1e9eae.  return v0;
}
procedure `void` `unapplyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object @name `drawable`) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ec33c.  if v2 == 0 then goto L1ec348;
  #L1ec340.  v0:= 0I;
  #L1ec342.  call `setCallback`(v2, v0) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L1ec348.  return @kind void;
}
procedure `void` `updateCompatRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ec380.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1ec384.  if v0 == 0 then goto L1ec396;
  #L1ec388.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1ec38c.  call temp:= `sanitizeRippleDrawableColor`(v0) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L1ec392.  v0:= temp @kind object;
  #L1ec394.  goto L1ec398;
  #L1ec396.  v0:= 0I;
  #L1ec398.  v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` := v0 @kind object;
  #L1ec39c.  return @kind void;
}
procedure `void` `updateFrameworkCloseIconRipple`(`com.google.android.material.chip.ChipDrawable` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ec3b0.  v0:= new `android.graphics.drawable.RippleDrawable`;
  #L1ec3b4.  call temp:= `getRippleColor`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L1ec3ba.  v1:= temp @kind object;
  #L1ec3bc.  call temp:= `sanitizeRippleDrawableColor`(v1) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L1ec3c2.  v1:= temp @kind object;
  #L1ec3c4.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ec3c8.  v3:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L1ec3cc.  call `<init>`(v0, v1, v2, v3) @signature `Landroid/graphics/drawable/RippleDrawable;.<init>:(Landroid/content/res/ColorStateList;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1ec3d2.  v4.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L1ec3d6.  return @kind void;
}
procedure `float` `calculateChipIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1e9f70.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1e9f76.  v0:= temp;
  #L1e9f78.  if v0 != 0 then goto L1e9f8e;
  #L1e9f7c.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1e9f82.  v0:= temp;
  #L1e9f84.  if v0 == 0 then goto L1e9f8a;
  #L1e9f88.  goto L1e9f8e;
  #L1e9f8a.  v0:= 0I;
  #L1e9f8c.  return v0;
  #L1e9f8e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L1e9f92.  call temp:= `getCurrentChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconWidth:()F` @kind direct;
  #L1e9f98.  v1:= temp;
  #L1e9f9a.  v0:= v0 + v1 @kind float;
  #L1e9f9c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L1e9fa0.  v0:= v0 + v1 @kind float;
  #L1e9fa2.  return v0;
}
procedure `float` `calculateCloseIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1e9fb4.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1e9fba.  v0:= temp;
  #L1e9fbc.  if v0 == 0 then goto L1e9fd2;
  #L1e9fc0.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1e9fc4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1e9fc8.  v0:= v0 + v1 @kind float;
  #L1e9fca.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1e9fce.  v0:= v0 + v1 @kind float;
  #L1e9fd0.  return v0;
  #L1e9fd2.  v0:= 0I;
  #L1e9fd4.  return v0;
}
procedure `android.graphics.Paint$Align` `calculateTextOriginAndAlignment`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Rect` v5 @kind object @name `bounds`, `android.graphics.PointF` v6 @kind object @name `pointF`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e95e4.  v0:= 0I;
  #L1e95e6.  call `set`(v6, v0, v0) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L1e95ec.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L1e95f0.  v1:= v4.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1e95f4.  if v1 == 0 then goto L1e9652;
  #L1e95f8.  v1:= v4.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1e95fc.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1e9602.  v2:= temp;
  #L1e9604.  v1:= v1 + v2 @kind float;
  #L1e9606.  v2:= v4.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1e960a.  v1:= v1 + v2 @kind float;
  #L1e960c.  call temp:= `getLayoutDirection`(v4) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1e9612.  v2:= temp;
  #L1e9614.  if v2 != 0 then goto L1e962a;
  #L1e9618.  v2:= v5.`android.graphics.Rect.left` @type ^`int`;
  #L1e961c.  v2:= (`float`) v2 @kind i2f;
  #L1e961e.  v2:= v2 + v1 @kind float;
  #L1e9620.  v6.`android.graphics.PointF.x` @type ^`float` := v2;
  #L1e9624.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L1e9628.  goto L1e963a;
  #L1e962a.  v2:= v5.`android.graphics.Rect.right` @type ^`int`;
  #L1e962e.  v2:= (`float`) v2 @kind i2f;
  #L1e9630.  v2:= v2 - v1 @kind float;
  #L1e9632.  v6.`android.graphics.PointF.x` @type ^`float` := v2;
  #L1e9636.  v0:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L1e963a.  call temp:= `centerY`(v5) @signature `Landroid/graphics/Rect;.centerY:()I` @kind virtual;
  #L1e9640.  v2:= temp;
  #L1e9642.  v2:= (`float`) v2 @kind i2f;
  #L1e9644.  call temp:= `calculateTextCenterFromBaseline`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @kind direct;
  #L1e964a.  v3:= temp;
  #L1e964c.  v2:= v2 - v3 @kind float;
  #L1e964e.  v6.`android.graphics.PointF.y` @type ^`float` := v2;
  #L1e9652.  return v0 @kind object;
}
procedure `void` `draw`(`com.google.android.material.chip.ChipDrawable` v10 @kind this, `android.graphics.Canvas` v11 @kind object @name `canvas`) @signature `Lcom/google/android/material/chip/ChipDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1ea7ec.  call temp:= `getBounds`(v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1ea7f2.  v0:= temp @kind object;
  #L1ea7f4.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L1ea7fa.  v1:= temp;
  #L1ea7fc.  if v1 != 0 then goto L1ea89e;
  #L1ea800.  call temp:= `getAlpha`(v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L1ea806.  v1:= temp;
  #L1ea808.  if v1 != 0 then goto L1ea80e;
  #L1ea80c.  goto L1ea89e;
  #L1ea80e.  v1:= 0I;
  #L1ea810.  v2:= v10.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1ea814.  v3:= 255I;
  #L1ea818.  if v2 >= v3 then goto L1ea842;
  #L1ea81c.  v2:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L1ea820.  v5:= (`float`) v2 @kind i2f;
  #L1ea822.  v2:= v0.`android.graphics.Rect.top` @type ^`int`;
  #L1ea826.  v6:= (`float`) v2 @kind i2f;
  #L1ea828.  v2:= v0.`android.graphics.Rect.right` @type ^`int`;
  #L1ea82c.  v7:= (`float`) v2 @kind i2f;
  #L1ea82e.  v2:= v0.`android.graphics.Rect.bottom` @type ^`int`;
  #L1ea832.  v8:= (`float`) v2 @kind i2f;
  #L1ea834.  v9:= v10.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1ea838.  v4:= v11 @kind object;
  #L1ea83a.  call temp:= `saveLayerAlpha`(v4, v5, v6, v7, v8, v9) @signature `Lcom/google/android/material/canvas/CanvasCompat;.saveLayerAlpha:(Landroid/graphics/Canvas;FFFFI)I` @kind static;
  #L1ea840.  v1:= temp;
  #L1ea842.  call `drawChipSurface`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1ea848.  call `drawChipBackground`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1ea84e.  v2:= v10.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1ea852.  if v2 == 0 then goto L1ea85c;
  #L1ea856.  call `draw`(v10, v11) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @kind super;
  #L1ea85c.  call `drawChipStroke`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1ea862.  call `drawCompatRipple`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1ea868.  call `drawChipIcon`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1ea86e.  call `drawCheckedIcon`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1ea874.  v2:= v10.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L1ea878.  if v2 == 0 then goto L1ea882;
  #L1ea87c.  call `drawText`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1ea882.  call `drawCloseIcon`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1ea888.  call `drawDebug`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1ea88e.  v2:= v10.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1ea892.  if v2 >= v3 then goto L1ea89c;
  #L1ea896.  call `restoreToCount`(v11, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L1ea89c.  return @kind void;
  #L1ea89e.  return @kind void;
}
procedure `int` `getAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea228.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1ea22c.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9664.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9668.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getCheckedIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e951c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9520.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipBackgroundColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9534.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9538.  return v0 @kind object;
}
procedure `float` `getChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea028.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1ea02c.  if v0 == 0 then goto L1ea03a;
  #L1ea030.  call temp:= `getTopLeftCornerResolvedSize`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTopLeftCornerResolvedSize:()F` @kind virtual;
  #L1ea036.  v0:= temp;
  #L1ea038.  goto L1ea03e;
  #L1ea03a.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1ea03e.  return v0;
}
procedure `float` `getChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea050.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1ea054.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e967c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9680.  if v0 == 0 then goto L1e968e;
  #L1e9684.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1e968a.  v0:= temp @kind object;
  #L1e968c.  goto L1e9690;
  #L1e968e.  v0:= 0I;
  #L1e9690.  return v0 @kind object;
}
procedure `float` `getChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea068.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1ea06c.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e954c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9550.  return v0 @kind object;
}
procedure `float` `getChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipMinHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea080.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L1ea084.  return v0;
}
procedure `float` `getChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea098.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1ea09c.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9564.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9568.  return v0 @kind object;
}
procedure `float` `getChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea0b0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1ea0b4.  return v0;
}
procedure `void` `getChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eaed4.  call temp:= `getBounds`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1eaeda.  v0:= temp @kind object;
  #L1eaedc.  call `calculateChipTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1eaee2.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `getCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e96a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e96a8.  if v0 == 0 then goto L1e96b6;
  #L1e96ac.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1e96b2.  v0:= temp @kind object;
  #L1e96b4.  goto L1e96b8;
  #L1e96b6.  v0:= 0I;
  #L1e96b8.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconContentDescription:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea30c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L1ea310.  return v0 @kind object;
}
procedure `float` `getCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea0c8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1ea0cc.  return v0;
}
procedure `float` `getCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea0e0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1ea0e4.  return v0;
}
procedure `float` `getCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea0f8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1ea0fc.  return v0;
}
procedure `int`[] `getCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea2f4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L1ea2f8.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e957c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9580.  return v0 @kind object;
}
procedure `void` `getCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eaef4.  call temp:= `getBounds`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1eaefa.  v0:= temp @kind object;
  #L1eaefc.  call `calculateCloseIconTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1eaf02.  return @kind void;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e95ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L1e95b0.  return v0 @kind object;
}
procedure `android.text.TextUtils$TruncateAt` `getEllipsize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getEllipsize:()Landroid/text/TextUtils$TruncateAt;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e96cc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1e96d0.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getHideMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9ec0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L1e9ec4.  return v0 @kind object;
}
procedure `float` `getIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea1c8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L1ea1cc.  return v0;
}
procedure `float` `getIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea1e0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L1ea1e4.  return v0;
}
procedure `int` `getIntrinsicHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea240.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L1ea244.  v0:= (`int`) v0 @kind f2i;
  #L1ea246.  return v0;
}
procedure `int` `getIntrinsicWidth`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ea258.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1ea25c.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1ea262.  v1:= temp;
  #L1ea264.  v0:= v0 + v1 @kind float;
  #L1ea266.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1ea26a.  v0:= v0 + v1 @kind float;
  #L1ea26c.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1ea270.  call temp:= `getText`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L1ea276.  v2:= temp @kind object;
  #L1ea278.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L1ea27e.  v2:= temp @kind object;
  #L1ea280.  call temp:= `getTextWidth`(v1, v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L1ea286.  v1:= temp;
  #L1ea288.  v0:= v0 + v1 @kind float;
  #L1ea28a.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1ea28e.  v0:= v0 + v1 @kind float;
  #L1ea290.  call temp:= `calculateCloseIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L1ea296.  v1:= temp;
  #L1ea298.  v0:= v0 + v1 @kind float;
  #L1ea29a.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1ea29e.  v0:= v0 + v1 @kind float;
  #L1ea2a0.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1ea2a6.  v0:= temp;
  #L1ea2a8.  v1:= v3.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L1ea2ac.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1ea2b2.  v1:= temp;
  #L1ea2b4.  return v1;
}
procedure `int` `getMaxWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getMaxWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea2c8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L1ea2cc.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea2e0.  v0:= -3I;
  #L1ea2e2.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.chip.ChipDrawable` v8 @kind this, `android.graphics.Outline` v9 @kind object @name `outline`) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1eaf14.  v0:= v8.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1eaf18.  if v0 == 0 then goto L1eaf24;
  #L1eaf1c.  call `getOutline`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOutline:(Landroid/graphics/Outline;)V` @kind super;
  #L1eaf22.  return @kind void;
  #L1eaf24.  call temp:= `getBounds`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1eaf2a.  v0:= temp @kind object;
  #L1eaf2c.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L1eaf32.  v1:= temp;
  #L1eaf34.  if v1 != 0 then goto L1eaf44;
  #L1eaf38.  v1:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1eaf3c.  call `setRoundRect`(v9, v0, v1) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L1eaf42.  goto L1eaf64;
  #L1eaf44.  v3:= 0I;
  #L1eaf46.  v4:= 0I;
  #L1eaf48.  call temp:= `getIntrinsicWidth`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L1eaf4e.  v5:= temp;
  #L1eaf50.  call temp:= `getIntrinsicHeight`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L1eaf56.  v6:= temp;
  #L1eaf58.  v7:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1eaf5c.  v2:= v9 @kind object;
  #L1eaf5e.  call `setRoundRect`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Outline;.setRoundRect:(IIIIF)V` @kind virtual;
  #L1eaf64.  call temp:= `getAlpha`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L1eaf6a.  v1:= temp;
  #L1eaf6c.  v1:= (`float`) v1 @kind i2f;
  #L1eaf6e.  v2:= 255.0F;
  #L1eaf72.  v1:= v1 / v2 @kind float;
  #L1eaf74.  call `setAlpha`(v9, v1) @signature `Landroid/graphics/Outline;.setAlpha:(F)V` @kind virtual;
  #L1eaf7a.  return @kind void;
}
procedure `android.content.res.ColorStateList` `getRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9594.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9598.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getShowMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9ed8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L1e9edc.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea324.  v0:= v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1ea328.  return v0 @kind object;
}
procedure `com.google.android.material.resources.TextAppearance` `getTextAppearance`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9f50.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1e9f54.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1e9f5a.  v0:= temp @kind object;
  #L1e9f5c.  return v0 @kind object;
}
procedure `float` `getTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea1f8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1ea1fc.  return v0;
}
procedure `float` `getTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ea210.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1ea214.  return v0;
}
procedure `boolean` `getUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getUseCompatRipple:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9714.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1e9718.  return v0;
}
procedure `void` `invalidateDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object @name `who`) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eaf8c.  call temp:= `getCallback`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L1eaf92.  v0:= temp @kind object;
  #L1eaf94.  if v0 == 0 then goto L1eaf9e;
  #L1eaf98.  call `invalidateDrawable`(v0, v1) @signature `Landroid/graphics/drawable/Drawable$Callback;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L1eaf9e.  return @kind void;
}
procedure `boolean` `isCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9760.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L1e9764.  return v0;
}
procedure `boolean` `isCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9778.  call temp:= `isCheckedIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @kind virtual;
  #L1e977e.  v0:= temp;
  #L1e9780.  return v0;
}
procedure `boolean` `isCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9794.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L1e9798.  return v0;
}
procedure `boolean` `isChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e97ac.  call temp:= `isChipIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @kind virtual;
  #L1e97b2.  v0:= temp;
  #L1e97b4.  return v0;
}
procedure `boolean` `isChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e97c8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L1e97cc.  return v0;
}
procedure `boolean` `isCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e97e0.  call temp:= `isCloseIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @kind virtual;
  #L1e97e6.  v0:= temp;
  #L1e97e8.  return v0;
}
procedure `boolean` `isCloseIconStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e97fc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9800.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1e9806.  v0:= temp;
  #L1e9808.  return v0;
}
procedure `boolean` `isCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e981c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L1e9820.  return v0;
}
procedure `boolean` `isShapeThemingEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isShapeThemingEnabled:()Z` @AccessFlag  {
    temp;
    v0;

  #L1e9834.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1e9838.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e984c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9850.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1e9856.  v0:= temp;
  #L1e9858.  if v0 != 0 then goto L1e98ee;
  #L1e985c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9860.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1e9866.  v0:= temp;
  #L1e9868.  if v0 != 0 then goto L1e98ee;
  #L1e986c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9870.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1e9876.  v0:= temp;
  #L1e9878.  if v0 != 0 then goto L1e98ee;
  #L1e987c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1e9880.  if v0 == 0 then goto L1e9894;
  #L1e9884.  v0:= v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e9888.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1e988e.  v0:= temp;
  #L1e9890.  if v0 != 0 then goto L1e98ee;
  #L1e9894.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1e9898.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1e989e.  v0:= temp @kind object;
  #L1e98a0.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @kind static;
  #L1e98a6.  v0:= temp;
  #L1e98a8.  if v0 != 0 then goto L1e98ee;
  #L1e98ac.  call temp:= `canShowCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @kind direct;
  #L1e98b2.  v0:= temp;
  #L1e98b4.  if v0 != 0 then goto L1e98ee;
  #L1e98b8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e98bc.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1e98c2.  v0:= temp;
  #L1e98c4.  if v0 != 0 then goto L1e98ee;
  #L1e98c8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e98cc.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1e98d2.  v0:= temp;
  #L1e98d4.  if v0 != 0 then goto L1e98ee;
  #L1e98d8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1e98dc.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1e98e2.  v0:= temp;
  #L1e98e4.  if v0 == 0 then goto L1e98ea;
  #L1e98e8.  goto L1e98ee;
  #L1e98ea.  v0:= 0I;
  #L1e98ec.  goto L1e98f0;
  #L1e98ee.  v0:= 1I;
  #L1e98f0.  return v0;
}
procedure `boolean` `onLayoutDirectionChanged`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 @name `layoutDirection`) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLayoutDirectionChanged:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e9988.  call temp:= `onLayoutDirectionChanged`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onLayoutDirectionChanged:(I)Z` @kind super;
  #L1e998e.  v0:= temp;
  #L1e9990.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1e9996.  v1:= temp;
  #L1e9998.  if v1 == 0 then goto L1e99aa;
  #L1e999c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e99a0.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L1e99a6.  v1:= temp;
  #L1e99a8.  v0:= v0 ^| v1 @kind int;
  #L1e99aa.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1e99b0.  v1:= temp;
  #L1e99b2.  if v1 == 0 then goto L1e99c4;
  #L1e99b6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e99ba.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L1e99c0.  v1:= temp;
  #L1e99c2.  v0:= v0 ^| v1 @kind int;
  #L1e99c4.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1e99ca.  v1:= temp;
  #L1e99cc.  if v1 == 0 then goto L1e99de;
  #L1e99d0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e99d4.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L1e99da.  v1:= temp;
  #L1e99dc.  v0:= v0 ^| v1 @kind int;
  #L1e99de.  if v0 == 0 then goto L1e99e8;
  #L1e99e2.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1e99e8.  v1:= 1I;
  #L1e99ea.  return v1;
}
procedure `boolean` `onLevelChange`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 @name `level`) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLevelChange:(I)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1e99fc.  call temp:= `onLevelChange`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onLevelChange:(I)Z` @kind super;
  #L1e9a02.  v0:= temp;
  #L1e9a04.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1e9a0a.  v1:= temp;
  #L1e9a0c.  if v1 == 0 then goto L1e9a1e;
  #L1e9a10.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9a14.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L1e9a1a.  v1:= temp;
  #L1e9a1c.  v0:= v0 ^| v1 @kind int;
  #L1e9a1e.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1e9a24.  v1:= temp;
  #L1e9a26.  if v1 == 0 then goto L1e9a38;
  #L1e9a2a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9a2e.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L1e9a34.  v1:= temp;
  #L1e9a36.  v0:= v0 ^| v1 @kind int;
  #L1e9a38.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1e9a3e.  v1:= temp;
  #L1e9a40.  if v1 == 0 then goto L1e9a52;
  #L1e9a44.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9a48.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L1e9a4e.  v1:= temp;
  #L1e9a50.  v0:= v0 ^| v1 @kind int;
  #L1e9a52.  if v0 == 0 then goto L1e9a5c;
  #L1e9a56.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1e9a5c.  return v0;
}
procedure `void` `onSizeChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1eb3a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1eb3a8.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1eb3ae.  v0:= temp @kind object;
  #L1eb3b0.  v0:= (`com.google.android.material.chip.ChipDrawable$Delegate`) v0 @kind object;
  #L1eb3b4.  if v0 == 0 then goto L1eb3be;
  #L1eb3b8.  call `onChipDrawableSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable$Delegate;.onChipDrawableSizeChange:()V` @kind interface;
  #L1eb3be.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object @name `state`) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9a70.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1e9a74.  if v0 == 0 then goto L1e9a7e;
  #L1e9a78.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L1e9a7e.  call temp:= `getCloseIconState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L1e9a84.  v0:= temp @kind object;
  #L1e9a86.  call temp:= `onStateChange`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L1e9a8c.  v0:= temp;
  #L1e9a8e.  return v0;
}
procedure `void` `onTextSizeChange`(`com.google.android.material.chip.ChipDrawable` v0 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onTextSizeChange:()V` @AccessFlag PUBLIC {
    temp;

  #L1eb3d0.  call `onSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eb3d6.  call `invalidateSelf`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb3dc.  return @kind void;
}
procedure `void` `scheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object @name `who`, `java.lang.Runnable` v3 @kind object @name `what`, `long` v4 @name `when`) @signature `Lcom/google/android/material/chip/ChipDrawable;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb3f0.  call temp:= `getCallback`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L1eb3f6.  v0:= temp @kind object;
  #L1eb3f8.  if v0 == 0 then goto L1eb402;
  #L1eb3fc.  call `scheduleDrawable`(v0, v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable$Callback;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @kind interface;
  #L1eb402.  return @kind void;
}
procedure `void` `setAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `alpha`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb414.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1eb418.  if v0 == v2 then goto L1eb426;
  #L1eb41c.  v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v2;
  #L1eb420.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb426.  return @kind void;
}
procedure `void` `setCheckable`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `boolean` v4 @name `checkable`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1eb438.  v0:= v3.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L1eb43c.  if v0 == v4 then goto L1eb47a;
  #L1eb440.  v3.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` := v4 @kind boolean;
  #L1eb444.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1eb44a.  v0:= temp;
  #L1eb44c.  if v4 != 0 then goto L1eb45e;
  #L1eb450.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L1eb454.  if v1 == 0 then goto L1eb45e;
  #L1eb458.  v1:= 0I;
  #L1eb45a.  v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v1 @kind boolean;
  #L1eb45e.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1eb464.  v1:= temp;
  #L1eb466.  call `invalidateSelf`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb46c.  v2:= fcmpl(v0, v1);
  #L1eb470.  if v2 == 0 then goto L1eb47a;
  #L1eb474.  call `onSizeChange`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eb47a.  return @kind void;
}
procedure `void` `setCheckableResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckableResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb48c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb490.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eb496.  v0:= temp @kind object;
  #L1eb498.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1eb49e.  v0:= temp;
  #L1eb4a0.  call `setCheckable`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L1eb4a6.  return @kind void;
}
procedure `void` `setCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.drawable.Drawable` v5 @kind object @name `checkedIcon`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eb4b8.  v0:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb4bc.  if v0 == v5 then goto L1eb4fc;
  #L1eb4c0.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1eb4c6.  v1:= temp;
  #L1eb4c8.  v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` := v5 @kind object;
  #L1eb4cc.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1eb4d2.  v2:= temp;
  #L1eb4d4.  v3:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb4d8.  call `unapplyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1eb4de.  v3:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb4e2.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1eb4e8.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb4ee.  v3:= fcmpl(v1, v2);
  #L1eb4f2.  if v3 == 0 then goto L1eb4fc;
  #L1eb4f6.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eb4fc.  return @kind void;
}
procedure `void` `setCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 @name `checkedIconEnabled`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1eb510.  call `setCheckedIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1eb516.  return @kind void;
}
procedure `void` `setCheckedIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb528.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb52c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eb532.  v0:= temp @kind object;
  #L1eb534.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1eb53a.  v0:= temp;
  #L1eb53c.  call `setCheckedIconVisible`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1eb542.  return @kind void;
}
procedure `void` `setCheckedIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb554.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb558.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1eb55e.  v0:= temp @kind object;
  #L1eb560.  call `setCheckedIcon`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1eb566.  return @kind void;
}
procedure `void` `setCheckedIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `checkedIconTint`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb578.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1eb57c.  if v0 == v2 then goto L1eb5a8;
  #L1eb580.  v1.`com.google.android.material.chip.ChipDrawable.checkedIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1eb584.  call temp:= `canShowCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @kind direct;
  #L1eb58a.  v0:= temp;
  #L1eb58c.  if v0 == 0 then goto L1eb59a;
  #L1eb590.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb594.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1eb59a.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1eb5a0.  v0:= temp @kind object;
  #L1eb5a2.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1eb5a8.  return @kind void;
}
procedure `void` `setCheckedIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb5bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb5c0.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eb5c6.  v0:= temp @kind object;
  #L1eb5c8.  call `setCheckedIconTint`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eb5ce.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb644.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb648.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eb64e.  v0:= temp @kind object;
  #L1eb650.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1eb656.  v0:= temp;
  #L1eb658.  call `setCheckedIconVisible`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1eb65e.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `boolean` v5 @name `checkedIconVisible`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eb5e0.  v0:= v4.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L1eb5e4.  if v0 == v5 then goto L1eb630;
  #L1eb5e8.  call temp:= `showsCheckedIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1eb5ee.  v0:= temp;
  #L1eb5f0.  v4.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` := v5 @kind boolean;
  #L1eb5f4.  call temp:= `showsCheckedIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1eb5fa.  v1:= temp;
  #L1eb5fc.  if v0 == v1 then goto L1eb604;
  #L1eb600.  v2:= 1I;
  #L1eb602.  goto L1eb606;
  #L1eb604.  v2:= 0I;
  #L1eb606.  if v2 == 0 then goto L1eb630;
  #L1eb60a.  if v1 == 0 then goto L1eb61a;
  #L1eb60e.  v3:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb612.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1eb618.  goto L1eb624;
  #L1eb61a.  v3:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb61e.  call `unapplyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1eb624.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb62a.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eb630.  return @kind void;
}
procedure `void` `setChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `chipBackgroundColor`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb670.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1eb674.  if v0 == v2 then goto L1eb68a;
  #L1eb678.  v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1eb67c.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1eb682.  v0:= temp @kind object;
  #L1eb684.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1eb68a.  return @kind void;
}
procedure `void` `setChipBackgroundColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb69c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb6a0.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eb6a6.  v0:= temp @kind object;
  #L1eb6a8.  call `setChipBackgroundColor`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eb6ae.  return @kind void;
}
procedure `void` `setChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipCornerRadius`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb6c0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1eb6c4.  v0:= fcmpl(v0, v2);
  #L1eb6c8.  if v0 == 0 then goto L1eb6e6;
  #L1eb6cc.  v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float` := v2;
  #L1eb6d0.  call temp:= `getShapeAppearanceModel`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1eb6d6.  v0:= temp @kind object;
  #L1eb6d8.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(F)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1eb6de.  v0:= temp @kind object;
  #L1eb6e0.  call `setShapeAppearanceModel`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L1eb6e6.  return @kind void;
}
procedure `void` `setChipCornerRadiusResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb6f8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb6fc.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eb702.  v0:= temp @kind object;
  #L1eb704.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1eb70a.  v0:= temp;
  #L1eb70c.  call `setChipCornerRadius`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L1eb712.  return @kind void;
}
procedure `void` `setChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipEndPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb724.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1eb728.  v0:= fcmpl(v0, v2);
  #L1eb72c.  if v0 == 0 then goto L1eb740;
  #L1eb730.  v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float` := v2;
  #L1eb734.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb73a.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eb740.  return @kind void;
}
procedure `void` `setChipEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb754.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb758.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eb75e.  v0:= temp @kind object;
  #L1eb760.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1eb766.  v0:= temp;
  #L1eb768.  call `setChipEndPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L1eb76e.  return @kind void;
}
procedure `void` `setChipIcon`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.drawable.Drawable` v5 @kind object @name `chipIcon`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eb780.  call temp:= `getChipIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L1eb786.  v0:= temp @kind object;
  #L1eb788.  if v0 == v5 then goto L1eb7e8;
  #L1eb78c.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1eb792.  v1:= temp;
  #L1eb794.  if v5 == 0 then goto L1eb7aa;
  #L1eb798.  call temp:= `wrap`(v5) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1eb79e.  v2:= temp @kind object;
  #L1eb7a0.  call temp:= `mutate`(v2) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L1eb7a6.  v2:= temp @kind object;
  #L1eb7a8.  goto L1eb7ac;
  #L1eb7aa.  v2:= 0I;
  #L1eb7ac.  v4.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L1eb7b0.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1eb7b6.  v2:= temp;
  #L1eb7b8.  call `unapplyChildDrawable`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1eb7be.  call temp:= `showsChipIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1eb7c4.  v3:= temp;
  #L1eb7c6.  if v3 == 0 then goto L1eb7d4;
  #L1eb7ca.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb7ce.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1eb7d4.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb7da.  v3:= fcmpl(v1, v2);
  #L1eb7de.  if v3 == 0 then goto L1eb7e8;
  #L1eb7e2.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eb7e8.  return @kind void;
}
procedure `void` `setChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 @name `chipIconEnabled`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1eb7fc.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L1eb802.  return @kind void;
}
procedure `void` `setChipIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1eb814.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @kind virtual;
  #L1eb81a.  return @kind void;
}
procedure `void` `setChipIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb82c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb830.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1eb836.  v0:= temp @kind object;
  #L1eb838.  call `setChipIcon`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1eb83e.  return @kind void;
}
procedure `void` `setChipIconSize`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `float` v4 @name `chipIconSize`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1eb850.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1eb854.  v0:= fcmpl(v0, v4);
  #L1eb858.  if v0 == 0 then goto L1eb884;
  #L1eb85c.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1eb862.  v0:= temp;
  #L1eb864.  v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float` := v4;
  #L1eb868.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1eb86e.  v1:= temp;
  #L1eb870.  call `invalidateSelf`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb876.  v2:= fcmpl(v0, v1);
  #L1eb87a.  if v2 == 0 then goto L1eb884;
  #L1eb87e.  call `onSizeChange`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eb884.  return @kind void;
}
procedure `void` `setChipIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb898.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb89c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eb8a2.  v0:= temp @kind object;
  #L1eb8a4.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1eb8aa.  v0:= temp;
  #L1eb8ac.  call `setChipIconSize`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L1eb8b2.  return @kind void;
}
procedure `void` `setChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `chipIconTint`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb8c4.  v0:= 1I;
  #L1eb8c6.  v1.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` := v0 @kind boolean;
  #L1eb8ca.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1eb8ce.  if v0 == v2 then goto L1eb8fa;
  #L1eb8d2.  v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1eb8d6.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1eb8dc.  v0:= temp;
  #L1eb8de.  if v0 == 0 then goto L1eb8ec;
  #L1eb8e2.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb8e6.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1eb8ec.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1eb8f2.  v0:= temp @kind object;
  #L1eb8f4.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1eb8fa.  return @kind void;
}
procedure `void` `setChipIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb90c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb910.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1eb916.  v0:= temp @kind object;
  #L1eb918.  call `setChipIconTint`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eb91e.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb994.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb998.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eb99e.  v0:= temp @kind object;
  #L1eb9a0.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1eb9a6.  v0:= temp;
  #L1eb9a8.  call `setChipIconVisible`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L1eb9ae.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `boolean` v5 @name `chipIconVisible`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eb930.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L1eb934.  if v0 == v5 then goto L1eb980;
  #L1eb938.  call temp:= `showsChipIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1eb93e.  v0:= temp;
  #L1eb940.  v4.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` := v5 @kind boolean;
  #L1eb944.  call temp:= `showsChipIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1eb94a.  v1:= temp;
  #L1eb94c.  if v0 == v1 then goto L1eb954;
  #L1eb950.  v2:= 1I;
  #L1eb952.  goto L1eb956;
  #L1eb954.  v2:= 0I;
  #L1eb956.  if v2 == 0 then goto L1eb980;
  #L1eb95a.  if v1 == 0 then goto L1eb96a;
  #L1eb95e.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb962.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1eb968.  goto L1eb974;
  #L1eb96a.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1eb96e.  call `unapplyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1eb974.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb97a.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eb980.  return @kind void;
}
procedure `void` `setChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipMinHeight`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb9c0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L1eb9c4.  v0:= fcmpl(v0, v2);
  #L1eb9c8.  if v0 == 0 then goto L1eb9dc;
  #L1eb9cc.  v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float` := v2;
  #L1eb9d0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eb9d6.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eb9dc.  return @kind void;
}
procedure `void` `setChipMinHeightResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeightResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb9f0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eb9f4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eb9fa.  v0:= temp @kind object;
  #L1eb9fc.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1eba02.  v0:= temp;
  #L1eba04.  call `setChipMinHeight`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L1eba0a.  return @kind void;
}
procedure `void` `setChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipStartPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eba1c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1eba20.  v0:= fcmpl(v0, v2);
  #L1eba24.  if v0 == 0 then goto L1eba38;
  #L1eba28.  v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float` := v2;
  #L1eba2c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1eba32.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1eba38.  return @kind void;
}
procedure `void` `setChipStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eba4c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1eba50.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1eba56.  v0:= temp @kind object;
  #L1eba58.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1eba5e.  v0:= temp;
  #L1eba60.  call `setChipStartPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L1eba66.  return @kind void;
}
procedure `void` `setChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `chipStrokeColor`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eba78.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1eba7c.  if v0 == v2 then goto L1ebaa0;
  #L1eba80.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1eba84.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1eba88.  if v0 == 0 then goto L1eba92;
  #L1eba8c.  call `setStrokeColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1eba92.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1eba98.  v0:= temp @kind object;
  #L1eba9a.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1ebaa0.  return @kind void;
}
procedure `void` `setChipStrokeColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebab4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebab8.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1ebabe.  v0:= temp @kind object;
  #L1ebac0.  call `setChipStrokeColor`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1ebac6.  return @kind void;
}
procedure `void` `setChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipStrokeWidth`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebad8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1ebadc.  v0:= fcmpl(v0, v2);
  #L1ebae0.  if v0 == 0 then goto L1ebb06;
  #L1ebae4.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float` := v2;
  #L1ebae8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ebaec.  call `setStrokeWidth`(v0, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L1ebaf2.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1ebaf6.  if v0 == 0 then goto L1ebb00;
  #L1ebafa.  call `setStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind super;
  #L1ebb00.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebb06.  return @kind void;
}
procedure `void` `setChipStrokeWidthResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebb18.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebb1c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ebb22.  v0:= temp @kind object;
  #L1ebb24.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1ebb2a.  v0:= temp;
  #L1ebb2c.  call `setChipStrokeWidth`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L1ebb32.  return @kind void;
}
procedure `void` `setCloseIcon`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.drawable.Drawable` v5 @kind object @name `closeIcon`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ebb70.  call temp:= `getCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L1ebb76.  v0:= temp @kind object;
  #L1ebb78.  if v0 == v5 then goto L1ebbe6;
  #L1ebb7c.  call temp:= `calculateCloseIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L1ebb82.  v1:= temp;
  #L1ebb84.  if v5 == 0 then goto L1ebb9a;
  #L1ebb88.  call temp:= `wrap`(v5) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1ebb8e.  v2:= temp @kind object;
  #L1ebb90.  call temp:= `mutate`(v2) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L1ebb96.  v2:= temp @kind object;
  #L1ebb98.  goto L1ebb9c;
  #L1ebb9a.  v2:= 0I;
  #L1ebb9c.  v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L1ebba0.  v2:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L1ebba4.  if v2 == 0 then goto L1ebbae;
  #L1ebba8.  call `updateFrameworkCloseIconRipple`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @kind direct;
  #L1ebbae.  call temp:= `calculateCloseIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L1ebbb4.  v2:= temp;
  #L1ebbb6.  call `unapplyChildDrawable`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1ebbbc.  call temp:= `showsCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ebbc2.  v3:= temp;
  #L1ebbc4.  if v3 == 0 then goto L1ebbd2;
  #L1ebbc8.  v3:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ebbcc.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1ebbd2.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebbd8.  v3:= fcmpl(v1, v2);
  #L1ebbdc.  if v3 == 0 then goto L1ebbe6;
  #L1ebbe0.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ebbe6.  return @kind void;
}
procedure `void` `setCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object @name `closeIconContentDescription`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconContentDescription:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebbf8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L1ebbfc.  if v0 == v2 then goto L1ebc1c;
  #L1ebc00.  
  #L1ebc02.  call temp:= `getInstance`() @signature `Landroidx/core/text/BidiFormatter;.getInstance:()Landroidx/core/text/BidiFormatter;` @kind static;
  #L1ebc08.  v0:= temp @kind object;
  #L1ebc0a.  call temp:= `unicodeWrap`(v0, v2) @signature `Landroidx/core/text/BidiFormatter;.unicodeWrap:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind virtual;
  #L1ebc10.  v0:= temp @kind object;
  #L1ebc12.  v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` := v0 @kind object;
  #L1ebc16.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebc1c.  return @kind void;
}
procedure `void` `setCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 @name `closeIconEnabled`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1ebc30.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L1ebc36.  return @kind void;
}
procedure `void` `setCloseIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1ebc48.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @kind virtual;
  #L1ebc4e.  return @kind void;
}
procedure `void` `setCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `closeIconEndPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebc60.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1ebc64.  v0:= fcmpl(v0, v2);
  #L1ebc68.  if v0 == 0 then goto L1ebc88;
  #L1ebc6c.  v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float` := v2;
  #L1ebc70.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebc76.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ebc7c.  v0:= temp;
  #L1ebc7e.  if v0 == 0 then goto L1ebc88;
  #L1ebc82.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ebc88.  return @kind void;
}
procedure `void` `setCloseIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebc9c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebca0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ebca6.  v0:= temp @kind object;
  #L1ebca8.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1ebcae.  v0:= temp;
  #L1ebcb0.  call `setCloseIconEndPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L1ebcb6.  return @kind void;
}
procedure `void` `setCloseIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebcc8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebccc.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1ebcd2.  v0:= temp @kind object;
  #L1ebcd4.  call `setCloseIcon`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1ebcda.  return @kind void;
}
procedure `void` `setCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `closeIconSize`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebcec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1ebcf0.  v0:= fcmpl(v0, v2);
  #L1ebcf4.  if v0 == 0 then goto L1ebd14;
  #L1ebcf8.  v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float` := v2;
  #L1ebcfc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebd02.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ebd08.  v0:= temp;
  #L1ebd0a.  if v0 == 0 then goto L1ebd14;
  #L1ebd0e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ebd14.  return @kind void;
}
procedure `void` `setCloseIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebd28.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebd2c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ebd32.  v0:= temp @kind object;
  #L1ebd34.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1ebd3a.  v0:= temp;
  #L1ebd3c.  call `setCloseIconSize`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L1ebd42.  return @kind void;
}
procedure `void` `setCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `closeIconStartPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebd54.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1ebd58.  v0:= fcmpl(v0, v2);
  #L1ebd5c.  if v0 == 0 then goto L1ebd7c;
  #L1ebd60.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float` := v2;
  #L1ebd64.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebd6a.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ebd70.  v0:= temp;
  #L1ebd72.  if v0 == 0 then goto L1ebd7c;
  #L1ebd76.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ebd7c.  return @kind void;
}
procedure `void` `setCloseIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebd90.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebd94.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ebd9a.  v0:= temp @kind object;
  #L1ebd9c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1ebda2.  v0:= temp;
  #L1ebda4.  call `setCloseIconStartPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L1ebdaa.  return @kind void;
}
procedure `boolean` `setCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object @name `stateSet`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9d6c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L1e9d70.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L1e9d76.  v0:= temp;
  #L1e9d78.  if v0 != 0 then goto L1e9d9e;
  #L1e9d7c.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] := v2 @kind object;
  #L1e9d80.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1e9d86.  v0:= temp;
  #L1e9d88.  if v0 == 0 then goto L1e9d9e;
  #L1e9d8c.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1e9d92.  v0:= temp @kind object;
  #L1e9d94.  call temp:= `onStateChange`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L1e9d9a.  v0:= temp;
  #L1e9d9c.  return v0;
  #L1e9d9e.  v0:= 0I;
  #L1e9da0.  return v0;
}
procedure `void` `setCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `closeIconTint`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebdbc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1ebdc0.  if v0 == v2 then goto L1ebdec;
  #L1ebdc4.  v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1ebdc8.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ebdce.  v0:= temp;
  #L1ebdd0.  if v0 == 0 then goto L1ebdde;
  #L1ebdd4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ebdd8.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1ebdde.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1ebde4.  v0:= temp @kind object;
  #L1ebde6.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1ebdec.  return @kind void;
}
procedure `void` `setCloseIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebe00.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebe04.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1ebe0a.  v0:= temp @kind object;
  #L1ebe0c.  call `setCloseIconTint`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1ebe12.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebe88.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebe8c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ebe92.  v0:= temp @kind object;
  #L1ebe94.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1ebe9a.  v0:= temp;
  #L1ebe9c.  call `setCloseIconVisible`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L1ebea2.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `boolean` v5 @name `closeIconVisible`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ebe24.  v0:= v4.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L1ebe28.  if v0 == v5 then goto L1ebe74;
  #L1ebe2c.  call temp:= `showsCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ebe32.  v0:= temp;
  #L1ebe34.  v4.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` := v5 @kind boolean;
  #L1ebe38.  call temp:= `showsCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1ebe3e.  v1:= temp;
  #L1ebe40.  if v0 == v1 then goto L1ebe48;
  #L1ebe44.  v2:= 1I;
  #L1ebe46.  goto L1ebe4a;
  #L1ebe48.  v2:= 0I;
  #L1ebe4a.  if v2 == 0 then goto L1ebe74;
  #L1ebe4e.  if v1 == 0 then goto L1ebe5e;
  #L1ebe52.  v3:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ebe56.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1ebe5c.  goto L1ebe68;
  #L1ebe5e.  v3:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1ebe62.  call `unapplyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1ebe68.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebe6e.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ebe74.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object @name `colorFilter`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebeb4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L1ebeb8.  if v0 == v2 then goto L1ebec6;
  #L1ebebc.  v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L1ebec0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebec6.  return @kind void;
}
procedure `void` `setDelegate`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `com.google.android.material.chip.ChipDrawable$Delegate` v2 @kind object @name `delegate`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setDelegate:(Lcom/google/android/material/chip/ChipDrawable$Delegate;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebed8.  v0:= new `java.lang.ref.WeakReference`;
  #L1ebedc.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1ebee2.  v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L1ebee6.  return @kind void;
}
procedure `void` `setEllipsize`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.text.TextUtils$TruncateAt` v1 @kind object @name `truncateAt`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @AccessFlag PUBLIC {
    temp;

  #L1ebef8.  v0.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` := v1 @kind object;
  #L1ebefc.  return @kind void;
}
procedure `void` `setHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object @name `hideMotionSpec`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L1ebf10.  v0.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L1ebf14.  return @kind void;
}
procedure `void` `setHideMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebf28.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebf2c.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L1ebf32.  v0:= temp @kind object;
  #L1ebf34.  call `setHideMotionSpec`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L1ebf3a.  return @kind void;
}
procedure `void` `setIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `float` v4 @name `iconEndPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ebf4c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L1ebf50.  v0:= fcmpl(v0, v4);
  #L1ebf54.  if v0 == 0 then goto L1ebf80;
  #L1ebf58.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1ebf5e.  v0:= temp;
  #L1ebf60.  v3.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float` := v4;
  #L1ebf64.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1ebf6a.  v1:= temp;
  #L1ebf6c.  call `invalidateSelf`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebf72.  v2:= fcmpl(v0, v1);
  #L1ebf76.  if v2 == 0 then goto L1ebf80;
  #L1ebf7a.  call `onSizeChange`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ebf80.  return @kind void;
}
procedure `void` `setIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebf94.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ebf98.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ebf9e.  v0:= temp @kind object;
  #L1ebfa0.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1ebfa6.  v0:= temp;
  #L1ebfa8.  call `setIconEndPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L1ebfae.  return @kind void;
}
procedure `void` `setIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `float` v4 @name `iconStartPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ebfc0.  v0:= v3.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L1ebfc4.  v0:= fcmpl(v0, v4);
  #L1ebfc8.  if v0 == 0 then goto L1ebff4;
  #L1ebfcc.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1ebfd2.  v0:= temp;
  #L1ebfd4.  v3.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float` := v4;
  #L1ebfd8.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1ebfde.  v1:= temp;
  #L1ebfe0.  call `invalidateSelf`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ebfe6.  v2:= fcmpl(v0, v1);
  #L1ebfea.  if v2 == 0 then goto L1ebff4;
  #L1ebfee.  call `onSizeChange`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ebff4.  return @kind void;
}
procedure `void` `setIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec008.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ec00c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ec012.  v0:= temp @kind object;
  #L1ec014.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1ec01a.  v0:= temp;
  #L1ec01c.  call `setIconStartPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L1ec022.  return @kind void;
}
procedure `void` `setMaxWidth`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 @name `maxWidth`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1ec034.  v0.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int` := v1;
  #L1ec038.  return @kind void;
}
procedure `void` `setRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `rippleColor`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec04c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1ec050.  if v0 == v2 then goto L1ec06c;
  #L1ec054.  v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1ec058.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L1ec05e.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1ec064.  v0:= temp @kind object;
  #L1ec066.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1ec06c.  return @kind void;
}
procedure `void` `setRippleColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec080.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ec084.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1ec08a.  v0:= temp @kind object;
  #L1ec08c.  call `setRippleColor`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1ec092.  return @kind void;
}
procedure `void` `setShouldDrawText`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 @name `shouldDrawText`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShouldDrawText:(Z)V` @AccessFlag  {
    temp;

  #L1ec0a4.  v0.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v1 @kind boolean;
  #L1ec0a8.  return @kind void;
}
procedure `void` `setShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object @name `showMotionSpec`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L1ec0bc.  v0.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L1ec0c0.  return @kind void;
}
procedure `void` `setShowMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec0d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ec0d8.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L1ec0de.  v0:= temp @kind object;
  #L1ec0e0.  call `setShowMotionSpec`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L1ec0e6.  return @kind void;
}
procedure `void` `setText`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `java.lang.CharSequence` v3 @kind object @name `text`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ec0f8.  if v3 != 0 then goto L1ec100;
  #L1ec0fc.  v3:= "" @kind object;
  #L1ec100.  v0:= v2.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1ec104.  call temp:= `equals`(v0, v3) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L1ec10a.  v0:= temp;
  #L1ec10c.  if v0 != 0 then goto L1ec12c;
  #L1ec110.  v2.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v3 @kind object;
  #L1ec114.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1ec118.  v1:= 1I;
  #L1ec11a.  call `setTextWidthDirty`(v0, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextWidthDirty:(Z)V` @kind virtual;
  #L1ec120.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ec126.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ec12c.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `com.google.android.material.resources.TextAppearance` v3 @kind object @name `textAppearance`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ec140.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1ec144.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ec148.  call `setTextAppearance`(v0, v3, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;Landroid/content/Context;)V` @kind virtual;
  #L1ec14e.  return @kind void;
}
procedure `void` `setTextAppearanceResource`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearanceResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ec160.  v0:= new `com.google.android.material.resources.TextAppearance`;
  #L1ec164.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ec168.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.<init>:(Landroid/content/Context;I)V` @kind direct;
  #L1ec16e.  call `setTextAppearance`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L1ec174.  return @kind void;
}
procedure `void` `setTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `textEndPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec188.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1ec18c.  v0:= fcmpl(v0, v2);
  #L1ec190.  if v0 == 0 then goto L1ec1a4;
  #L1ec194.  v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float` := v2;
  #L1ec198.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ec19e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ec1a4.  return @kind void;
}
procedure `void` `setTextEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec1b8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ec1bc.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ec1c2.  v0:= temp @kind object;
  #L1ec1c4.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1ec1ca.  v0:= temp;
  #L1ec1cc.  call `setTextEndPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L1ec1d2.  return @kind void;
}
procedure `void` `setTextResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec1e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ec1e8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ec1ee.  v0:= temp @kind object;
  #L1ec1f0.  call temp:= `getString`(v0, v2) @signature `Landroid/content/res/Resources;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L1ec1f6.  v0:= temp @kind object;
  #L1ec1f8.  call `setText`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L1ec1fe.  return @kind void;
}
procedure `void` `setTextSize`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `float` v3 @name `size`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ec210.  call temp:= `getTextAppearance`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1ec216.  v0:= temp @kind object;
  #L1ec218.  if v0 == 0 then goto L1ec238;
  #L1ec21c.  v0.`com.google.android.material.resources.TextAppearance.textSize` @type ^`float` := v3;
  #L1ec220.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1ec224.  call temp:= `getTextPaint`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1ec22a.  v1:= temp @kind object;
  #L1ec22c.  call `setTextSize`(v1, v3) @signature `Landroid/text/TextPaint;.setTextSize:(F)V` @kind virtual;
  #L1ec232.  call `onTextSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onTextSizeChange:()V` @kind virtual;
  #L1ec238.  return @kind void;
}
procedure `void` `setTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `textStartPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec24c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1ec250.  v0:= fcmpl(v0, v2);
  #L1ec254.  if v0 == 0 then goto L1ec268;
  #L1ec258.  v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float` := v2;
  #L1ec25c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ec262.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1ec268.  return @kind void;
}
procedure `void` `setTextStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec27c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1ec280.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1ec286.  v0:= temp @kind object;
  #L1ec288.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1ec28e.  v0:= temp;
  #L1ec290.  call `setTextStartPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L1ec296.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `tint`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec2a8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1ec2ac.  if v0 == v2 then goto L1ec2c2;
  #L1ec2b0.  v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1ec2b4.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1ec2ba.  v0:= temp @kind object;
  #L1ec2bc.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1ec2c2.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.PorterDuff$Mode` v2 @kind object @name `tintMode`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec2d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1ec2d8.  if v0 == v2 then goto L1ec2f6;
  #L1ec2dc.  v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v2 @kind object;
  #L1ec2e0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1ec2e4.  call temp:= `updateTintFilter`(v1, v0, v2) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L1ec2ea.  v0:= temp @kind object;
  #L1ec2ec.  v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v0 @kind object;
  #L1ec2f0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ec2f6.  return @kind void;
}
procedure `void` `setUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 @name `useCompatRipple`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setUseCompatRipple:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec308.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1ec30c.  if v0 == v2 then goto L1ec328;
  #L1ec310.  v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` := v2 @kind boolean;
  #L1ec314.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L1ec31a.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1ec320.  v0:= temp @kind object;
  #L1ec322.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1ec328.  return @kind void;
}
procedure `boolean` `setVisible`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `boolean` v3 @name `visible`, `boolean` v4 @name `restart`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e9db4.  call temp:= `setVisible`(v2, v3, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setVisible:(ZZ)Z` @kind super;
  #L1e9dba.  v0:= temp;
  #L1e9dbc.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1e9dc2.  v1:= temp;
  #L1e9dc4.  if v1 == 0 then goto L1e9dd6;
  #L1e9dc8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9dcc.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L1e9dd2.  v1:= temp;
  #L1e9dd4.  v0:= v0 ^| v1 @kind int;
  #L1e9dd6.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1e9ddc.  v1:= temp;
  #L1e9dde.  if v1 == 0 then goto L1e9df0;
  #L1e9de2.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9de6.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L1e9dec.  v1:= temp;
  #L1e9dee.  v0:= v0 ^| v1 @kind int;
  #L1e9df0.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1e9df6.  v1:= temp;
  #L1e9df8.  if v1 == 0 then goto L1e9e0a;
  #L1e9dfc.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e9e00.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L1e9e06.  v1:= temp;
  #L1e9e08.  v0:= v0 ^| v1 @kind int;
  #L1e9e0a.  if v0 == 0 then goto L1e9e14;
  #L1e9e0e.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1e9e14.  return v0;
}
procedure `boolean` `shouldDrawText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.shouldDrawText:()Z` @AccessFlag  {
    temp;
    v0;

  #L1e9e28.  v0:= v1.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L1e9e2c.  return v0;
}
procedure `void` `unscheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object @name `who`, `java.lang.Runnable` v3 @kind object @name `what`) @signature `Lcom/google/android/material/chip/ChipDrawable;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec35c.  call temp:= `getCallback`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L1ec362.  v0:= temp @kind object;
  #L1ec364.  if v0 == 0 then goto L1ec36e;
  #L1ec368.  call `unscheduleDrawable`(v0, v1, v3) @signature `Landroid/graphics/drawable/Drawable$Callback;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @kind interface;
  #L1ec36e.  return @kind void;
}
