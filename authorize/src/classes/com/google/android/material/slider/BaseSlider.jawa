record `com.google.android.material.slider.BaseSlider` @kind class @AccessFlag ABSTRACT extends `android.view.View` @kind class {
  `com.google.android.material.slider.BaseSlider$AccessibilityEventSender` `com.google.android.material.slider.BaseSlider.accessibilityEventSender` @AccessFlag PRIVATE;
  `com.google.android.material.slider.BaseSlider$AccessibilityHelper` `com.google.android.material.slider.BaseSlider.accessibilityHelper` @AccessFlag PRIVATE_FINAL;
  `android.view.accessibility.AccessibilityManager` `com.google.android.material.slider.BaseSlider.accessibilityManager` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.activeThumbIdx` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.activeTicksPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.activeTrackPaint` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.android.material.slider.BaseSlider.changeListeners` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.defaultThumbRadius` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.dirtyConfig` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.focusedThumbIdx` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.forceDrawCompatHalo` @AccessFlag PRIVATE;
  `com.google.android.material.slider.LabelFormatter` `com.google.android.material.slider.BaseSlider.formatter` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.haloColor` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.haloPaint` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.haloRadius` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.slider.BaseSlider.isLongPress` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.labelBehavior` @AccessFlag PRIVATE;
  `com.google.android.material.slider.BaseSlider$TooltipDrawableFactory` `com.google.android.material.slider.BaseSlider.labelMaker` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.labelPadding` @AccessFlag PRIVATE;
  `java.util.List` `com.google.android.material.slider.BaseSlider.labels` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @AccessFlag PRIVATE;
  `android.animation.ValueAnimator` `com.google.android.material.slider.BaseSlider.labelsInAnimator` @AccessFlag PRIVATE;
  `android.animation.ValueAnimator` `com.google.android.material.slider.BaseSlider.labelsOutAnimator` @AccessFlag PRIVATE;
  `android.view.MotionEvent` `com.google.android.material.slider.BaseSlider.lastEvent` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.minTrackSidePadding` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.scaledTouchSlop` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.separationUnit` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.stepSize` @AccessFlag PRIVATE;
  `com.google.android.material.shape.MaterialShapeDrawable` `com.google.android.material.slider.BaseSlider.thumbDrawable` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.slider.BaseSlider.thumbIsPressed` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.thumbPaint` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.thumbRadius` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.tickColorActive` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.tickColorInactive` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.tickVisible` @AccessFlag PRIVATE;
  `float`[] `com.google.android.material.slider.BaseSlider.ticksCoordinates` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.touchDownX` @AccessFlag PRIVATE;
  `java.util.List` `com.google.android.material.slider.BaseSlider.touchListeners` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.slider.BaseSlider.touchPosition` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.trackColorActive` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.trackColorInactive` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackHeight` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackSidePadding` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackTop` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackWidth` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.valueFrom` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.valueTo` @AccessFlag PRIVATE;
  `java.util.ArrayList` `com.google.android.material.slider.BaseSlider.values` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.widgetHeight` @AccessFlag PRIVATE;
}
global `int` `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_DISCRETE_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_STEP_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE_FROM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE_TO` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.HALO_ALPHA` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.android.material.slider.BaseSlider.LABEL_ANIMATION_ENTER_DURATION` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.android.material.slider.BaseSlider.LABEL_ANIMATION_EXIT_DURATION` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `double` `@@com.google.android.material.slider.BaseSlider.THRESHOLD` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.TIMEOUT_SEND_ACCESSIBILITY_EVENT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.UNIT_PX` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.UNIT_VALUE` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.WARNING_FLOATING_POINT_ERRROR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/slider/BaseSlider;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2136e0.  v0:= constclass @type ^`com.google.android.material.slider.BaseSlider` @kind object;
  #L2136e4.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2136ea.  v0:= temp @kind object;
  #L2136ec.  `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` := v0 @kind object;
  #L2136f0.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Slider` @type ^`int`;
  #L2136f4.  `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @type ^`int` := v0;
  #L2136f8.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.Context` v2 @kind object @name `context`) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L21370c.  v0:= 0I;
  #L21370e.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L213714.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.Context` v2 @kind object @name `context`, `android.util.AttributeSet` v3 @kind object @name `attrs`) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L213728.  v0:= `@@com.google.android.material.R$attr.sliderStyle` @type ^`int`;
  #L21372c.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L213732.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `android.content.Context` v6 @kind object @name `context`, `android.util.AttributeSet` v7 @kind object @name `attrs`, `int` v8 @name `defStyleAttr`) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L213744.  v0:= `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @type ^`int`;
  #L213748.  call temp:= `wrap`(v6, v7, v8, v0) @signature `Lcom/google/android/material/theme/overlay/MaterialThemeOverlay;.wrap:(Landroid/content/Context;Landroid/util/AttributeSet;II)Landroid/content/Context;` @kind static;
  #L21374e.  v0:= temp @kind object;
  #L213750.  call `<init>`(v5, v0, v7, v8) @signature `Landroid/view/View;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L213756.  v0:= new `java.util.ArrayList`;
  #L21375a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L213760.  v5.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` := v0 @kind object;
  #L213764.  v0:= new `java.util.ArrayList`;
  #L213768.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L21376e.  v5.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` := v0 @kind object;
  #L213772.  v0:= new `java.util.ArrayList`;
  #L213776.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L21377c.  v5.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` := v0 @kind object;
  #L213780.  v0:= 0I;
  #L213782.  v5.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v0 @kind boolean;
  #L213786.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v0 @kind boolean;
  #L21378a.  v1:= new `java.util.ArrayList`;
  #L21378e.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L213794.  v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` := v1 @kind object;
  #L213798.  v1:= -1I;
  #L21379a.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L21379e.  v5.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v1;
  #L2137a2.  v1:= 0I;
  #L2137a4.  v5.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v1;
  #L2137a8.  v1:= 1I;
  #L2137aa.  v5.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` := v1 @kind boolean;
  #L2137ae.  v5.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` := v0 @kind boolean;
  #L2137b2.  v2:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L2137b6.  call `<init>`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L2137bc.  v5.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` := v2 @kind object;
  #L2137c0.  v5.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int` := v0;
  #L2137c4.  call temp:= `getContext`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2137ca.  v6:= temp @kind object;
  #L2137cc.  v0:= new `android.graphics.Paint`;
  #L2137d0.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L2137d6.  v5.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L2137da.  v3:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L2137de.  call `setStyle`(v0, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L2137e4.  v3:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2137e8.  call `setStrokeCap`(v0, v3) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L2137ee.  v0:= new `android.graphics.Paint`;
  #L2137f2.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L2137f8.  v5.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L2137fc.  v3:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L213800.  call `setStyle`(v0, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L213806.  v3:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L21380a.  call `setStrokeCap`(v0, v3) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L213810.  v0:= new `android.graphics.Paint`;
  #L213814.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L21381a.  v5.`com.google.android.material.slider.BaseSlider.thumbPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L21381e.  v3:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L213822.  call `setStyle`(v0, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L213828.  v3:= new `android.graphics.PorterDuffXfermode`;
  #L21382c.  v4:= `@@android.graphics.PorterDuff$Mode.CLEAR` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L213830.  call `<init>`(v3, v4) @signature `Landroid/graphics/PorterDuffXfermode;.<init>:(Landroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L213836.  call temp:= `setXfermode`(v0, v3) @signature `Landroid/graphics/Paint;.setXfermode:(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;` @kind virtual;
  #L21383c.  v0:= new `android.graphics.Paint`;
  #L213840.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L213846.  v5.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L21384a.  v3:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L21384e.  call `setStyle`(v0, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L213854.  v0:= new `android.graphics.Paint`;
  #L213858.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L21385e.  v5.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L213862.  v3:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L213866.  call `setStyle`(v0, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L21386c.  v3:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L213870.  call `setStrokeCap`(v0, v3) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L213876.  v0:= new `android.graphics.Paint`;
  #L21387a.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L213880.  v5.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L213884.  v3:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L213888.  call `setStyle`(v0, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L21388e.  v3:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L213892.  call `setStrokeCap`(v0, v3) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L213898.  call temp:= `getResources`(v6) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L21389e.  v0:= temp @kind object;
  #L2138a0.  call `loadResources`(v5, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.loadResources:(Landroid/content/res/Resources;)V` @kind direct;
  #L2138a6.  v0:= new `com.google.android.material.slider.BaseSlider$1`;
  #L2138aa.  call `<init>`(v0, v5, v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider$1;.<init>:(Lcom/google/android/material/slider/BaseSlider;Landroid/util/AttributeSet;I)V` @kind direct;
  #L2138b0.  v5.`com.google.android.material.slider.BaseSlider.labelMaker` @type ^`com.google.android.material.slider.BaseSlider$TooltipDrawableFactory` := v0 @kind object;
  #L2138b4.  call `processAttributes`(v5, v6, v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.processAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L2138ba.  call `setFocusable`(v5, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setFocusable:(Z)V` @kind virtual;
  #L2138c0.  call `setClickable`(v5, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setClickable:(Z)V` @kind virtual;
  #L2138c6.  v0:= 2I;
  #L2138c8.  call `setShadowCompatibilityMode`(v2, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @kind virtual;
  #L2138ce.  call temp:= `get`(v6) @signature `Landroid/view/ViewConfiguration;.get:(Landroid/content/Context;)Landroid/view/ViewConfiguration;` @kind static;
  #L2138d4.  v0:= temp @kind object;
  #L2138d6.  call temp:= `getScaledTouchSlop`(v0) @signature `Landroid/view/ViewConfiguration;.getScaledTouchSlop:()I` @kind virtual;
  #L2138dc.  v0:= temp;
  #L2138de.  v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int` := v0;
  #L2138e2.  v0:= new `com.google.android.material.slider.BaseSlider$AccessibilityHelper`;
  #L2138e6.  call `<init>`(v0, v5) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;.<init>:(Lcom/google/android/material/slider/BaseSlider;)V` @kind direct;
  #L2138ec.  v5.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` := v0 @kind object;
  #L2138f0.  call `setAccessibilityDelegate`(v5, v0) @signature `Landroidx/core/view/ViewCompat;.setAccessibilityDelegate:(Landroid/view/View;Landroidx/core/view/AccessibilityDelegateCompat;)V` @kind static;
  #L2138f6.  
  #L2138f8.  call temp:= `getContext`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2138fe.  v0:= temp @kind object;
  #L213900.  v1:= "accessibility" @kind object;
  #L213904.  call temp:= `getSystemService`(v0, v1) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L21390a.  v0:= temp @kind object;
  #L21390c.  v0:= (`android.view.accessibility.AccessibilityManager`) v0 @kind object;
  #L213910.  v5.`com.google.android.material.slider.BaseSlider.accessibilityManager` @type ^`android.view.accessibility.AccessibilityManager` := v0 @kind object;
  #L213914.  return @kind void;
}
procedure `com.google.android.material.tooltip.TooltipDrawable` `access$000`(`android.content.Context` v1 @kind object @name `x0`, `android.content.res.TypedArray` v2 @kind object @name `x1`) @signature `Lcom/google/android/material/slider/BaseSlider;.access$000:(Landroid/content/Context;Landroid/content/res/TypedArray;)Lcom/google/android/material/tooltip/TooltipDrawable;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L212e84.  call temp:= `parseLabelDrawable`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.parseLabelDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;)Lcom/google/android/material/tooltip/TooltipDrawable;` @kind static;
  #L212e8a.  v0:= temp @kind object;
  #L212e8c.  return v0 @kind object;
}
procedure `java.util.List` `access$100`(`com.google.android.material.slider.BaseSlider` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/slider/BaseSlider;.access$100:(Lcom/google/android/material/slider/BaseSlider;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2136a8.  v0:= v1.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L2136ac.  return v0 @kind object;
}
procedure `com.google.android.material.slider.BaseSlider$AccessibilityHelper` `access$300`(`com.google.android.material.slider.BaseSlider` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/slider/BaseSlider;.access$300:(Lcom/google/android/material/slider/BaseSlider;)Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L212e6c.  v0:= v1.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L212e70.  return v0 @kind object;
}
procedure `java.lang.String` `access$500`(`com.google.android.material.slider.BaseSlider` v1 @kind object @name `x0`, `float` v2 @name `x1`) @signature `Lcom/google/android/material/slider/BaseSlider;.access$500:(Lcom/google/android/material/slider/BaseSlider;F)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L21362c.  call temp:= `formatValue`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.formatValue:(F)Ljava/lang/String;` @kind direct;
  #L213632.  v0:= temp @kind object;
  #L213634.  return v0 @kind object;
}
procedure `boolean` `access$600`(`com.google.android.material.slider.BaseSlider` v1 @kind object @name `x0`, `int` v2 @name `x1`, `float` v3 @name `x2`) @signature `Lcom/google/android/material/slider/BaseSlider;.access$600:(Lcom/google/android/material/slider/BaseSlider;IF)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L212680.  call temp:= `snapThumbToValue`(v1, v2, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.snapThumbToValue:(IF)Z` @kind direct;
  #L212686.  v0:= temp;
  #L212688.  return v0;
}
procedure `void` `access$700`(`com.google.android.material.slider.BaseSlider` v0 @kind object @name `x0`) @signature `Lcom/google/android/material/slider/BaseSlider;.access$700:(Lcom/google/android/material/slider/BaseSlider;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L213928.  call `updateHaloHotspot`(v0) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L21392e.  return @kind void;
}
procedure `float` `access$800`(`com.google.android.material.slider.BaseSlider` v1 @kind object @name `x0`, `int` v2 @name `x1`) @signature `Lcom/google/android/material/slider/BaseSlider;.access$800:(Lcom/google/android/material/slider/BaseSlider;I)F` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L212f14.  call temp:= `calculateStepIncrement`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:(I)F` @kind direct;
  #L212f1a.  v0:= temp;
  #L212f1c.  return v0;
}
procedure `void` `attachLabelToContentView`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.tooltip.TooltipDrawable` v2 @kind object @name `label`) @signature `Lcom/google/android/material/slider/BaseSlider;.attachLabelToContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L213978.  call temp:= `getContentView`(v1) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L21397e.  v0:= temp @kind object;
  #L213980.  call `setRelativeToView`(v2, v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setRelativeToView:(Landroid/view/View;)V` @kind virtual;
  #L213986.  return @kind void;
}
procedure `java.lang.Float` `calculateIncrementForKey`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `int` v3 @name `keyCode`) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateIncrementForKey:(I)Ljava/lang/Float;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L213584.  v0:= v2.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` @kind boolean;
  #L213588.  if v0 == 0 then goto L21359a;
  #L21358c.  v0:= 20I;
  #L213590.  call temp:= `calculateStepIncrement`(v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:(I)F` @kind direct;
  #L213596.  v0:= temp;
  #L213598.  goto L2135a2;
  #L21359a.  call temp:= `calculateStepIncrement`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:()F` @kind direct;
  #L2135a0.  v0:= temp;
  #L2135a2.  v1:= 21I;
  #L2135a6.  if v3 == v1 then goto L213600;
  #L2135aa.  v1:= 22I;
  #L2135ae.  if v3 == v1 then goto L2135e4;
  #L2135b2.  v1:= 69I;
  #L2135b6.  if v3 == v1 then goto L2135d8;
  #L2135ba.  v1:= 70I;
  #L2135be.  if v3 == v1 then goto L2135ce;
  #L2135c2.  v1:= 81I;
  #L2135c6.  if v3 == v1 then goto L2135ce;
  #L2135ca.  v1:= 0I;
  #L2135cc.  return v1 @kind object;
  #L2135ce.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2135d4.  v1:= temp @kind object;
  #L2135d6.  return v1 @kind object;
  #L2135d8.  v1:= -v0 @kind float;
  #L2135da.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2135e0.  v1:= temp @kind object;
  #L2135e2.  return v1 @kind object;
  #L2135e4.  call temp:= `isRtl`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L2135ea.  v1:= temp;
  #L2135ec.  if v1 == 0 then goto L2135f4;
  #L2135f0.  v1:= -v0 @kind float;
  #L2135f2.  goto L2135f6;
  #L2135f4.  v1:= v0;
  #L2135f6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2135fc.  v1:= temp @kind object;
  #L2135fe.  return v1 @kind object;
  #L213600.  call temp:= `isRtl`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L213606.  v1:= temp;
  #L213608.  if v1 == 0 then goto L213610;
  #L21360c.  v1:= v0;
  #L21360e.  goto L213612;
  #L213610.  v1:= -v0 @kind float;
  #L213612.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L213618.  v1:= temp @kind object;
  #L21361a.  return v1 @kind object;
}
procedure `float` `calculateStepIncrement`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L212f30.  v0:= v2.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L212f34.  v1:= 0I;
  #L212f36.  v1:= fcmpl(v0, v1);
  #L212f3a.  if v1 != 0 then goto L212f42;
  #L212f3e.  v0:= 1.0F;
  #L212f42.  return v0;
}
procedure `float` `calculateStepIncrement`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 @name `stepFactor`) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:(I)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L212f54.  call temp:= `calculateStepIncrement`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:()F` @kind direct;
  #L212f5a.  v0:= temp;
  #L212f5c.  v1:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L212f60.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L212f64.  v1:= v1 - v2 @kind float;
  #L212f66.  v1:= v1 / v0 @kind float;
  #L212f68.  v2:= (`float`) v4 @kind i2f;
  #L212f6a.  v2:= fcmpg(v1, v2);
  #L212f6e.  if v2 > 0 then goto L212f74;
  #L212f72.  return v0;
  #L212f74.  v2:= (`float`) v4 @kind i2f;
  #L212f76.  v2:= v1 / v2 @kind float;
  #L212f7a.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L212f80.  v2:= temp;
  #L212f82.  v2:= (`float`) v2 @kind i2f;
  #L212f84.  v2:= v2 * v0 @kind float;
  #L212f86.  return v2;
}
procedure `int` `calculateTop`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2132f4.  v0:= v4.`com.google.android.material.slider.BaseSlider.trackTop` @type ^`int`;
  #L2132f8.  v1:= v4.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L2132fc.  v2:= 0I;
  #L2132fe.  v3:= 1I;
  #L213300.  if v1 != v3 then goto L21331e;
  #L213304.  v1:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L213308.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L21330e.  v1:= temp @kind object;
  #L213310.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L213314.  call temp:= `getIntrinsicHeight`(v1) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L21331a.  v2:= temp;
  #L21331c.  goto L213320;
  #L21331e.  
  #L213320.  v0:= v0 + v2 @kind int;
  #L213322.  return v0;
}
procedure `android.animation.ValueAnimator` `createLabelAnimator`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `boolean` v6 @name `enter`) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelAnimator:(Z)Landroid/animation/ValueAnimator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L212464.  v0:= 0I;
  #L212466.  v1:= 1.0F;
  #L21246a.  if v6 == 0 then goto L212472;
  #L21246e.  v2:= v0;
  #L212470.  goto L212474;
  #L212472.  v2:= v1;
  #L212474.  if v6 == 0 then goto L21247e;
  #L212478.  v3:= v5.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L21247c.  goto L212482;
  #L21247e.  v3:= v5.`com.google.android.material.slider.BaseSlider.labelsInAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L212482.  call temp:= `getAnimatorCurrentValueOrDefault`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getAnimatorCurrentValueOrDefault:(Landroid/animation/ValueAnimator;F)F` @kind static;
  #L212488.  v2:= temp;
  #L21248a.  if v6 == 0 then goto L212490;
  #L21248e.  v0:= v1;
  #L212490.  v1:= 2I;
  #L212492.  v1:= new `float`[v1];
  #L212496.  v3:= 0I;
  #L212498.  v1[v3]:= v2;
  #L21249c.  v3:= 1I;
  #L21249e.  v1[v3]:= v0;
  #L2124a2.  call temp:= `ofFloat`(v1) @signature `Landroid/animation/ValueAnimator;.ofFloat:([F)Landroid/animation/ValueAnimator;` @kind static;
  #L2124a8.  v1:= temp @kind object;
  #L2124aa.  if v6 == 0 then goto L2124b4;
  #L2124ae.  v3:= 83L;
  #L2124b2.  goto L2124b8;
  #L2124b4.  v3:= 117L;
  #L2124b8.  call temp:= `setDuration`(v1, v3) @signature `Landroid/animation/ValueAnimator;.setDuration:(J)Landroid/animation/ValueAnimator;` @kind virtual;
  #L2124be.  if v6 == 0 then goto L2124c8;
  #L2124c2.  v3:= `@@com.google.android.material.animation.AnimationUtils.DECELERATE_INTERPOLATOR` @type ^`android.animation.TimeInterpolator` @kind object;
  #L2124c6.  goto L2124cc;
  #L2124c8.  v3:= `@@com.google.android.material.animation.AnimationUtils.FAST_OUT_LINEAR_IN_INTERPOLATOR` @type ^`android.animation.TimeInterpolator` @kind object;
  #L2124cc.  call `setInterpolator`(v1, v3) @signature `Landroid/animation/ValueAnimator;.setInterpolator:(Landroid/animation/TimeInterpolator;)V` @kind virtual;
  #L2124d2.  v3:= new `com.google.android.material.slider.BaseSlider$2`;
  #L2124d6.  call `<init>`(v3, v5) @signature `Lcom/google/android/material/slider/BaseSlider$2;.<init>:(Lcom/google/android/material/slider/BaseSlider;)V` @kind direct;
  #L2124dc.  call `addUpdateListener`(v1, v3) @signature `Landroid/animation/ValueAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L2124e2.  return v1 @kind object;
}
procedure `void` `createLabelPool`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelPool:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2139d0.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L2139d4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2139da.  v0:= temp;
  #L2139dc.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L2139e0.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2139e6.  v1:= temp;
  #L2139e8.  if v0 <= v1 then goto L213a4a;
  #L2139ec.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L2139f0.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L2139f4.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2139fa.  v1:= temp;
  #L2139fc.  v2:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L213a00.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L213a06.  v2:= temp;
  #L213a08.  call temp:= `subList`(v0, v1, v2) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L213a0e.  v0:= temp @kind object;
  #L213a10.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L213a16.  v1:= temp @kind object;
  #L213a18.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213a1e.  v2:= temp;
  #L213a20.  if v2 == 0 then goto L213a44;
  #L213a24.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213a2a.  v2:= temp @kind object;
  #L213a2c.  v2:= (`com.google.android.material.tooltip.TooltipDrawable`) v2 @kind object;
  #L213a30.  call temp:= `isAttachedToWindow`(v4) @signature `Landroidx/core/view/ViewCompat;.isAttachedToWindow:(Landroid/view/View;)Z` @kind static;
  #L213a36.  v3:= temp;
  #L213a38.  if v3 == 0 then goto L213a42;
  #L213a3c.  call `detachLabelFromContentView`(v4, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.detachLabelFromContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L213a42.  goto L213a18;
  #L213a44.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L213a4a.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L213a4e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L213a54.  v0:= temp;
  #L213a56.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213a5a.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L213a60.  v1:= temp;
  #L213a62.  if v0 >= v1 then goto L213a90;
  #L213a66.  v0:= v4.`com.google.android.material.slider.BaseSlider.labelMaker` @type ^`com.google.android.material.slider.BaseSlider$TooltipDrawableFactory` @kind object;
  #L213a6a.  call temp:= `createTooltipDrawable`(v0) @signature `Lcom/google/android/material/slider/BaseSlider$TooltipDrawableFactory;.createTooltipDrawable:()Lcom/google/android/material/tooltip/TooltipDrawable;` @kind interface;
  #L213a70.  v0:= temp @kind object;
  #L213a72.  v1:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L213a76.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L213a7c.  call temp:= `isAttachedToWindow`(v4) @signature `Landroidx/core/view/ViewCompat;.isAttachedToWindow:(Landroid/view/View;)Z` @kind static;
  #L213a82.  v1:= temp;
  #L213a84.  if v1 == 0 then goto L213a8e;
  #L213a88.  call `attachLabelToContentView`(v4, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.attachLabelToContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L213a8e.  goto L213a4a;
  #L213a90.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L213a94.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L213a9a.  v0:= temp;
  #L213a9c.  v1:= 1I;
  #L213a9e.  if v0 != v1 then goto L213aa4;
  #L213aa2.  v1:= 0I;
  #L213aa4.  v0:= v1;
  #L213aa6.  v1:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L213aaa.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L213ab0.  v1:= temp @kind object;
  #L213ab2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213ab8.  v2:= temp;
  #L213aba.  if v2 == 0 then goto L213ad4;
  #L213abe.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213ac4.  v2:= temp @kind object;
  #L213ac6.  v2:= (`com.google.android.material.tooltip.TooltipDrawable`) v2 @kind object;
  #L213aca.  v3:= (`float`) v0 @kind i2f;
  #L213acc.  call `setStrokeWidth`(v2, v3) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L213ad2.  goto L213ab2;
  #L213ad4.  return @kind void;
}
procedure `void` `detachLabelFromContentView`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `com.google.android.material.tooltip.TooltipDrawable` v3 @kind object @name `label`) @signature `Lcom/google/android/material/slider/BaseSlider;.detachLabelFromContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L213ae8.  call temp:= `getContentViewOverlay`(v2) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentViewOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @kind static;
  #L213aee.  v0:= temp @kind object;
  #L213af0.  if v0 == 0 then goto L213b08;
  #L213af4.  call `remove`(v0, v3) @signature `Lcom/google/android/material/internal/ViewOverlayImpl;.remove:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L213afa.  call temp:= `getContentView`(v2) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L213b00.  v1:= temp @kind object;
  #L213b02.  call `detachView`(v3, v1) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.detachView:(Landroid/view/View;)V` @kind virtual;
  #L213b08.  return @kind void;
}
procedure `float` `dimenToValue`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `float` v4 @name `dimen`) @signature `Lcom/google/android/material/slider/BaseSlider;.dimenToValue:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L212f98.  v0:= 0I;
  #L212f9a.  v1:= fcmpl(v4, v0);
  #L212f9e.  if v1 != 0 then goto L212fa4;
  #L212fa2.  return v0;
  #L212fa4.  v0:= v3.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L212fa8.  v0:= (`float`) v0 @kind i2f;
  #L212faa.  v0:= v4 - v0 @kind float;
  #L212fae.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L212fb2.  v1:= (`float`) v1 @kind i2f;
  #L212fb4.  v0:= v0 / v1 @kind float;
  #L212fb6.  v1:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L212fba.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L212fbe.  v2:= v1 - v2 @kind float;
  #L212fc2.  v0:= v0 * v2 @kind float;
  #L212fc4.  v0:= v0 + v1 @kind float;
  #L212fc6.  return v0;
}
procedure `void` `dispatchOnChangedFromUser`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int` v5 @name `idx`) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedFromUser:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L213b1c.  v0:= v4.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L213b20.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L213b26.  v0:= temp @kind object;
  #L213b28.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213b2e.  v1:= temp;
  #L213b30.  if v1 == 0 then goto L213b62;
  #L213b34.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213b3a.  v1:= temp @kind object;
  #L213b3c.  v1:= (`com.google.android.material.slider.BaseOnChangeListener`) v1 @kind object;
  #L213b40.  v2:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213b44.  call temp:= `get`(v2, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L213b4a.  v2:= temp @kind object;
  #L213b4c.  v2:= (`java.lang.Float`) v2 @kind object;
  #L213b50.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L213b56.  v2:= temp;
  #L213b58.  v3:= 1I;
  #L213b5a.  call `onValueChange`(v1, v4, v2, v3) @signature `Lcom/google/android/material/slider/BaseOnChangeListener;.onValueChange:(Ljava/lang/Object;FZ)V` @kind interface;
  #L213b60.  goto L213b28;
  #L213b62.  v0:= v4.`com.google.android.material.slider.BaseSlider.accessibilityManager` @type ^`android.view.accessibility.AccessibilityManager` @kind object;
  #L213b66.  if v0 == 0 then goto L213b7c;
  #L213b6a.  call temp:= `isEnabled`(v0) @signature `Landroid/view/accessibility/AccessibilityManager;.isEnabled:()Z` @kind virtual;
  #L213b70.  v0:= temp;
  #L213b72.  if v0 == 0 then goto L213b7c;
  #L213b76.  call `scheduleAccessibilityEventSender`(v4, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.scheduleAccessibilityEventSender:(I)V` @kind direct;
  #L213b7c.  return @kind void;
}
procedure `void` `dispatchOnChangedProgramatically`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedProgramatically:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L213b90.  v0:= v6.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L213b94.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L213b9a.  v0:= temp @kind object;
  #L213b9c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213ba2.  v1:= temp;
  #L213ba4.  if v1 == 0 then goto L213bec;
  #L213ba8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213bae.  v1:= temp @kind object;
  #L213bb0.  v1:= (`com.google.android.material.slider.BaseOnChangeListener`) v1 @kind object;
  #L213bb4.  v2:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213bb8.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L213bbe.  v2:= temp @kind object;
  #L213bc0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213bc6.  v3:= temp;
  #L213bc8.  if v3 == 0 then goto L213bea;
  #L213bcc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213bd2.  v3:= temp @kind object;
  #L213bd4.  v3:= (`java.lang.Float`) v3 @kind object;
  #L213bd8.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L213bde.  v4:= temp;
  #L213be0.  v5:= 0I;
  #L213be2.  call `onValueChange`(v1, v6, v4, v5) @signature `Lcom/google/android/material/slider/BaseOnChangeListener;.onValueChange:(Ljava/lang/Object;FZ)V` @kind interface;
  #L213be8.  goto L213bc0;
  #L213bea.  goto L213b9c;
  #L213bec.  return @kind void;
}
procedure `void` `drawActiveTrack`(`com.google.android.material.slider.BaseSlider` v10 @kind this, `android.graphics.Canvas` v11 @kind object @name `canvas`, `int` v12 @name `width`, `int` v13 @name `top`) @signature `Lcom/google/android/material/slider/BaseSlider;.drawActiveTrack:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L213c00.  call temp:= `getActiveRange`(v10) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @kind direct;
  #L213c06.  v0:= temp @kind object;
  #L213c08.  v1:= v10.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L213c0c.  v2:= (`float`) v1 @kind i2f;
  #L213c0e.  v3:= 1I;
  #L213c10.  v3:= v0[v3];
  #L213c14.  v4:= (`float`) v12 @kind i2f;
  #L213c16.  v3:= v3 * v4 @kind float;
  #L213c18.  v2:= v2 + v3 @kind float;
  #L213c1a.  v1:= (`float`) v1 @kind i2f;
  #L213c1c.  v3:= 0I;
  #L213c1e.  v3:= v0[v3];
  #L213c22.  v4:= (`float`) v12 @kind i2f;
  #L213c24.  v3:= v3 * v4 @kind float;
  #L213c26.  v1:= v1 + v3 @kind float;
  #L213c28.  v6:= (`float`) v13 @kind i2f;
  #L213c2a.  v8:= (`float`) v13 @kind i2f;
  #L213c2c.  v9:= v10.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L213c30.  v4:= v11 @kind object;
  #L213c32.  v5:= v1;
  #L213c34.  v7:= v2;
  #L213c36.  call `drawLine`(v4, v5, v6, v7, v8, v9) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L213c3c.  return @kind void;
}
procedure `void` `drawInactiveTrack`(`com.google.android.material.slider.BaseSlider` v11 @kind this, `android.graphics.Canvas` v12 @kind object @name `canvas`, `int` v13 @name `width`, `int` v14 @name `top`) @signature `Lcom/google/android/material/slider/BaseSlider;.drawInactiveTrack:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L213c50.  call temp:= `getActiveRange`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @kind direct;
  #L213c56.  v0:= temp @kind object;
  #L213c58.  v1:= v11.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L213c5c.  v2:= (`float`) v1 @kind i2f;
  #L213c5e.  v3:= 1I;
  #L213c60.  v3:= v0[v3];
  #L213c64.  v4:= (`float`) v13 @kind i2f;
  #L213c66.  v3:= v3 * v4 @kind float;
  #L213c68.  v2:= v2 + v3 @kind float;
  #L213c6a.  v3:= v1 + v13 @kind int;
  #L213c6e.  v3:= (`float`) v3 @kind i2f;
  #L213c70.  v3:= fcmpg(v2, v3);
  #L213c74.  if v3 >= 0 then goto L213c8e;
  #L213c78.  v6:= (`float`) v14 @kind i2f;
  #L213c7a.  v1:= v1 + v13 @kind int;
  #L213c7c.  v7:= (`float`) v1 @kind i2f;
  #L213c7e.  v8:= (`float`) v14 @kind i2f;
  #L213c80.  v9:= v11.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L213c84.  v4:= v12 @kind object;
  #L213c86.  v5:= v2;
  #L213c88.  call `drawLine`(v4, v5, v6, v7, v8, v9) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L213c8e.  v1:= v11.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L213c92.  v3:= (`float`) v1 @kind i2f;
  #L213c94.  v4:= 0I;
  #L213c96.  v4:= v0[v4];
  #L213c9a.  v5:= (`float`) v13 @kind i2f;
  #L213c9c.  v4:= v4 * v5 @kind float;
  #L213c9e.  v3:= v3 + v4 @kind float;
  #L213ca0.  v4:= (`float`) v1 @kind i2f;
  #L213ca2.  v4:= fcmpl(v3, v4);
  #L213ca6.  if v4 <= 0 then goto L213cbe;
  #L213caa.  v6:= (`float`) v1 @kind i2f;
  #L213cac.  v7:= (`float`) v14 @kind i2f;
  #L213cae.  v9:= (`float`) v14 @kind i2f;
  #L213cb0.  v10:= v11.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L213cb4.  v5:= v12 @kind object;
  #L213cb6.  v8:= v3;
  #L213cb8.  call `drawLine`(v5, v6, v7, v8, v9, v10) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L213cbe.  return @kind void;
}
procedure `void` `drawThumbs`(`com.google.android.material.slider.BaseSlider` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`, `int` v8 @name `width`, `int` v9 @name `top`) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbs:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L213cd0.  call temp:= `isEnabled`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.isEnabled:()Z` @kind virtual;
  #L213cd6.  v0:= temp;
  #L213cd8.  if v0 != 0 then goto L213d30;
  #L213cdc.  v0:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213ce0.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L213ce6.  v0:= temp @kind object;
  #L213ce8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213cee.  v1:= temp;
  #L213cf0.  if v1 == 0 then goto L213d30;
  #L213cf4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213cfa.  v1:= temp @kind object;
  #L213cfc.  v1:= (`java.lang.Float`) v1 @kind object;
  #L213d00.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L213d04.  v2:= (`float`) v2 @kind i2f;
  #L213d06.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L213d0c.  v3:= temp;
  #L213d0e.  call temp:= `normalizeValue`(v6, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L213d14.  v3:= temp;
  #L213d16.  v4:= (`float`) v8 @kind i2f;
  #L213d18.  v3:= v3 * v4 @kind float;
  #L213d1a.  v2:= v2 + v3 @kind float;
  #L213d1c.  v3:= (`float`) v9 @kind i2f;
  #L213d1e.  v4:= v6.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L213d22.  v4:= (`float`) v4 @kind i2f;
  #L213d24.  v5:= v6.`com.google.android.material.slider.BaseSlider.thumbPaint` @type ^`android.graphics.Paint` @kind object;
  #L213d28.  call `drawCircle`(v7, v2, v3, v4, v5) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L213d2e.  goto L213ce8;
  #L213d30.  v0:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213d34.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L213d3a.  v0:= temp @kind object;
  #L213d3c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213d42.  v1:= temp;
  #L213d44.  if v1 == 0 then goto L213d9c;
  #L213d48.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213d4e.  v1:= temp @kind object;
  #L213d50.  v1:= (`java.lang.Float`) v1 @kind object;
  #L213d54.  call temp:= `save`(v7) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L213d5a.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L213d5e.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L213d64.  v3:= temp;
  #L213d66.  call temp:= `normalizeValue`(v6, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L213d6c.  v3:= temp;
  #L213d6e.  v4:= (`float`) v8 @kind i2f;
  #L213d70.  v3:= v3 * v4 @kind float;
  #L213d72.  v3:= (`int`) v3 @kind f2i;
  #L213d74.  v2:= v2 + v3 @kind int;
  #L213d76.  v3:= v6.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L213d7a.  v2:= v2 - v3 @kind int;
  #L213d7c.  v2:= (`float`) v2 @kind i2f;
  #L213d7e.  v3:= v9 - v3 @kind int;
  #L213d82.  v3:= (`float`) v3 @kind i2f;
  #L213d84.  call `translate`(v7, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L213d8a.  v2:= v6.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L213d8e.  call `draw`(v2, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L213d94.  call `restore`(v7) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L213d9a.  goto L213d3c;
  #L213d9c.  return @kind void;
}
procedure `void` `ensureLabelsAdded`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsAdded:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L213ea8.  v0:= v6.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L213eac.  v1:= 2I;
  #L213eae.  if v0 != v1 then goto L213eb4;
  #L213eb2.  return @kind void;
  #L213eb4.  v0:= v6.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` @kind boolean;
  #L213eb8.  v2:= 1I;
  #L213eba.  if v0 != 0 then goto L213eda;
  #L213ebe.  v6.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v2 @kind boolean;
  #L213ec2.  call temp:= `createLabelAnimator`(v6, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelAnimator:(Z)Landroid/animation/ValueAnimator;` @kind direct;
  #L213ec8.  v0:= temp @kind object;
  #L213eca.  v6.`com.google.android.material.slider.BaseSlider.labelsInAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L213ece.  v3:= 0I;
  #L213ed0.  v6.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` := v3 @kind object;
  #L213ed4.  call `start`(v0) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L213eda.  v0:= v6.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L213ede.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L213ee4.  v0:= temp @kind object;
  #L213ee6.  v3:= 0I;
  #L213ee8.  v4:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213eec.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L213ef2.  v4:= temp;
  #L213ef4.  if v3 >= v4 then goto L213f3e;
  #L213ef8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213efe.  v4:= temp;
  #L213f00.  if v4 == 0 then goto L213f3e;
  #L213f04.  v4:= v6.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L213f08.  if v3 != v4 then goto L213f0e;
  #L213f0c.  goto L213f38;
  #L213f0e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213f14.  v4:= temp @kind object;
  #L213f16.  v4:= (`com.google.android.material.tooltip.TooltipDrawable`) v4 @kind object;
  #L213f1a.  v5:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213f1e.  call temp:= `get`(v5, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L213f24.  v5:= temp @kind object;
  #L213f26.  v5:= (`java.lang.Float`) v5 @kind object;
  #L213f2a.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L213f30.  v5:= temp;
  #L213f32.  call `setValueForLabel`(v6, v4, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueForLabel:(Lcom/google/android/material/tooltip/TooltipDrawable;F)V` @kind direct;
  #L213f38.  v3:= v3 + 1;
  #L213f3c.  goto L213ee8;
  #L213f3e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213f44.  v3:= temp;
  #L213f46.  if v3 == 0 then goto L213f7a;
  #L213f4a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213f50.  v1:= temp @kind object;
  #L213f52.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L213f56.  v2:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213f5a.  v3:= v6.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L213f5e.  call temp:= `get`(v2, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L213f64.  v2:= temp @kind object;
  #L213f66.  v2:= (`java.lang.Float`) v2 @kind object;
  #L213f6a.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L213f70.  v2:= temp;
  #L213f72.  call `setValueForLabel`(v6, v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueForLabel:(Lcom/google/android/material/tooltip/TooltipDrawable;F)V` @kind direct;
  #L213f78.  return @kind void;
  #L213f7a.  v3:= new `java.lang.IllegalStateException`;
  #L213f7e.  v1:= new `java.lang.Object`[v1];
  #L213f82.  v4:= 0I;
  #L213f84.  v5:= v6.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L213f88.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L213f8e.  v5:= temp;
  #L213f90.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L213f96.  v5:= temp @kind object;
  #L213f98.  v1[v4]:= v5 @kind object;
  #L213f9c.  v4:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213fa0.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L213fa6.  v4:= temp;
  #L213fa8.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L213fae.  v4:= temp @kind object;
  #L213fb0.  v1[v2]:= v4 @kind object;
  #L213fb4.  v2:= "Not enough labels(%d) to display all the values(%d)" @kind object;
  #L213fb8.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L213fbe.  v1:= temp @kind object;
  #L213fc0.  call `<init>`(v3, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213fc6.  throw v3;
}
procedure `void` `ensureLabelsRemoved`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L213fd8.  v0:= v2.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` @kind boolean;
  #L213fdc.  if v0 == 0 then goto L214012;
  #L213fe0.  v0:= 0I;
  #L213fe2.  v2.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v0 @kind boolean;
  #L213fe6.  call temp:= `createLabelAnimator`(v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelAnimator:(Z)Landroid/animation/ValueAnimator;` @kind direct;
  #L213fec.  v0:= temp @kind object;
  #L213fee.  v2.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L213ff2.  v1:= 0I;
  #L213ff4.  v2.`com.google.android.material.slider.BaseSlider.labelsInAnimator` @type ^`android.animation.ValueAnimator` := v1 @kind object;
  #L213ff8.  v1:= new `com.google.android.material.slider.BaseSlider$3`;
  #L213ffc.  call `<init>`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider$3;.<init>:(Lcom/google/android/material/slider/BaseSlider;)V` @kind direct;
  #L214002.  call `addListener`(v0, v1) @signature `Landroid/animation/ValueAnimator;.addListener:(Landroid/animation/Animator$AnimatorListener;)V` @kind virtual;
  #L214008.  v0:= v2.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L21400c.  call `start`(v0) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L214012.  return @kind void;
}
procedure `void` `focusThumbOnFocusGained`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 @name `direction`) @signature `Lcom/google/android/material/slider/BaseSlider;.focusThumbOnFocusGained:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L214024.  v0:= 1I;
  #L214026.  v1:= 2147483647I;
  #L21402c.  if v4 == v0 then goto L214064;
  #L214030.  v0:= 2I;
  #L214032.  v2:= -2147483648I;
  #L214036.  if v4 == v0 then goto L21405c;
  #L21403a.  v0:= 17I;
  #L21403e.  if v4 == v0 then goto L214054;
  #L214042.  v0:= 66I;
  #L214046.  if v4 == v0 then goto L21404c;
  #L21404a.  goto L21406c;
  #L21404c.  call temp:= `moveFocusInAbsoluteDirection`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L214052.  goto L21406c;
  #L214054.  call temp:= `moveFocusInAbsoluteDirection`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L21405a.  goto L21406c;
  #L21405c.  call temp:= `moveFocus`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L214062.  goto L21406c;
  #L214064.  call temp:= `moveFocus`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L21406a.  
  #L21406c.  return @kind void;
}
procedure `java.lang.String` `formatValue`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `float` v5 @name `value`) @signature `Lcom/google/android/material/slider/BaseSlider;.formatValue:(F)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L213648.  call temp:= `hasLabelFormatter`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.hasLabelFormatter:()Z` @kind virtual;
  #L21364e.  v0:= temp;
  #L213650.  if v0 == 0 then goto L213662;
  #L213654.  v0:= v4.`com.google.android.material.slider.BaseSlider.formatter` @type ^`com.google.android.material.slider.LabelFormatter` @kind object;
  #L213658.  call temp:= `getFormattedValue`(v0, v5) @signature `Lcom/google/android/material/slider/LabelFormatter;.getFormattedValue:(F)Ljava/lang/String;` @kind interface;
  #L21365e.  v0:= temp @kind object;
  #L213660.  return v0 @kind object;
  #L213662.  v0:= (`int`) v5 @kind f2i;
  #L213664.  v0:= (`float`) v0 @kind i2f;
  #L213666.  v0:= fcmpl(v0, v5);
  #L21366a.  if v0 != 0 then goto L213674;
  #L21366e.  v0:= "%.0f" @kind object;
  #L213672.  goto L213678;
  #L213674.  v0:= "%.2f" @kind object;
  #L213678.  v1:= 1I;
  #L21367a.  v1:= new `java.lang.Object`[v1];
  #L21367e.  v2:= 0I;
  #L213680.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L213686.  v3:= temp @kind object;
  #L213688.  v1[v2]:= v3 @kind object;
  #L21368c.  call temp:= `format`(v0, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L213692.  v0:= temp @kind object;
  #L213694.  return v0 @kind object;
}
procedure `float`[] `getActiveRange`(`com.google.android.material.slider.BaseSlider` v8 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L213254.  call temp:= `getValues`(v8) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L21325a.  v0:= temp @kind object;
  #L21325c.  call temp:= `max`(v0) @signature `Ljava/util/Collections;.max:(Ljava/util/Collection;)Ljava/lang/Object;` @kind static;
  #L213262.  v0:= temp @kind object;
  #L213264.  v0:= (`java.lang.Float`) v0 @kind object;
  #L213268.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L21326e.  v0:= temp;
  #L213270.  call temp:= `getValues`(v8) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L213276.  v1:= temp @kind object;
  #L213278.  call temp:= `min`(v1) @signature `Ljava/util/Collections;.min:(Ljava/util/Collection;)Ljava/lang/Object;` @kind static;
  #L21327e.  v1:= temp @kind object;
  #L213280.  v1:= (`java.lang.Float`) v1 @kind object;
  #L213284.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L21328a.  v1:= temp;
  #L21328c.  v2:= v8.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213290.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L213296.  v2:= temp;
  #L213298.  v3:= 1I;
  #L21329a.  if v2 != v3 then goto L2132a4;
  #L21329e.  v2:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L2132a2.  goto L2132a6;
  #L2132a4.  v2:= v1;
  #L2132a6.  call temp:= `normalizeValue`(v8, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L2132ac.  v2:= temp;
  #L2132ae.  call temp:= `normalizeValue`(v8, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L2132b4.  v4:= temp;
  #L2132b6.  call temp:= `isRtl`(v8) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L2132bc.  v5:= temp;
  #L2132be.  v6:= 0I;
  #L2132c0.  v7:= 2I;
  #L2132c2.  if v5 == 0 then goto L2132d4;
  #L2132c6.  v5:= new `float`[v7];
  #L2132ca.  v5[v6]:= v4;
  #L2132ce.  v5[v3]:= v2;
  #L2132d2.  goto L2132e0;
  #L2132d4.  v5:= new `float`[v7];
  #L2132d8.  v5[v6]:= v2;
  #L2132dc.  v5[v3]:= v4;
  #L2132e0.  return v5 @kind object;
}
procedure `float` `getAnimatorCurrentValueOrDefault`(`android.animation.ValueAnimator` v1 @kind object @name `animator`, `float` v2 @name `defaultValue`) @signature `Lcom/google/android/material/slider/BaseSlider;.getAnimatorCurrentValueOrDefault:(Landroid/animation/ValueAnimator;F)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L212fd8.  if v1 == 0 then goto L213004;
  #L212fdc.  call temp:= `isRunning`(v1) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L212fe2.  v0:= temp;
  #L212fe4.  if v0 == 0 then goto L213004;
  #L212fe8.  call temp:= `getAnimatedValue`(v1) @signature `Landroid/animation/ValueAnimator;.getAnimatedValue:()Ljava/lang/Object;` @kind virtual;
  #L212fee.  v0:= temp @kind object;
  #L212ff0.  v0:= (`java.lang.Float`) v0 @kind object;
  #L212ff4.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L212ffa.  v0:= temp;
  #L212ffc.  call `cancel`(v1) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L213002.  return v0;
  #L213004.  return v2;
}
procedure `float` `getClampedValue`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int` v5 @name `idx`, `float` v6 @name `value`) @signature `Lcom/google/android/material/slider/BaseSlider;.getClampedValue:(IF)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L213018.  v0:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L21301c.  v1:= 0I;
  #L21301e.  v0:= fcmpl(v0, v1);
  #L213022.  if v0 != 0 then goto L21302e;
  #L213026.  call temp:= `getMinSeparation`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.getMinSeparation:()F` @kind virtual;
  #L21302c.  v1:= temp;
  #L21302e.  v0:= v1;
  #L213030.  v1:= v4.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int`;
  #L213034.  if v1 != 0 then goto L213042;
  #L213038.  call temp:= `dimenToValue`(v4, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.dimenToValue:(F)F` @kind direct;
  #L21303e.  v1:= temp;
  #L213040.  goto L213044;
  #L213042.  v1:= v0;
  #L213044.  v0:= v1;
  #L213046.  call temp:= `isRtl`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L21304c.  v1:= temp;
  #L21304e.  if v1 == 0 then goto L213054;
  #L213052.  v0:= -v0 @kind float;
  #L213054.  v1:= v5 + 1;
  #L213058.  v2:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L21305c.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L213062.  v2:= temp;
  #L213064.  if v1 < v2 then goto L21306e;
  #L213068.  v1:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L21306c.  goto L21308c;
  #L21306e.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L213072.  v2:= v5 + 1;
  #L213076.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L21307c.  v1:= temp @kind object;
  #L21307e.  v1:= (`java.lang.Float`) v1 @kind object;
  #L213082.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L213088.  v1:= temp;
  #L21308a.  v1:= v1 - v0 @kind float;
  #L21308c.  v2:= v5 + -1;
  #L213090.  if v2 >= 0 then goto L21309a;
  #L213094.  v2:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L213098.  goto L2130b8;
  #L21309a.  v2:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L21309e.  v3:= v5 + -1;
  #L2130a2.  call temp:= `get`(v2, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2130a8.  v2:= temp @kind object;
  #L2130aa.  v2:= (`java.lang.Float`) v2 @kind object;
  #L2130ae.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2130b4.  v2:= temp;
  #L2130b6.  v2:= v2 + v0 @kind float;
  #L2130b8.  call temp:= `clamp`(v6, v2, v1) @signature `Landroidx/core/math/MathUtils;.clamp:(FFF)F` @kind static;
  #L2130be.  v3:= temp;
  #L2130c0.  return v3;
}
procedure `int` `getColorForState`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object @name `colorStateList`) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L21336c.  call temp:= `getDrawableState`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getDrawableState:()[I` @kind virtual;
  #L213372.  v0:= temp @kind object;
  #L213374.  call temp:= `getDefaultColor`(v3) @signature `Landroid/content/res/ColorStateList;.getDefaultColor:()I` @kind virtual;
  #L21337a.  v1:= temp;
  #L21337c.  call temp:= `getColorForState`(v3, v0, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L213382.  v0:= temp;
  #L213384.  return v0;
}
procedure `float` `getValueOfTouchPosition`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPosition:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L213158.  v0:= v6.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float`;
  #L21315c.  call temp:= `snapPosition`(v6, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.snapPosition:(F)D` @kind direct;
  #L213162.  v0:= temp @kind wide;
  #L213164.  call temp:= `isRtl`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L21316a.  v2:= temp;
  #L21316c.  if v2 == 0 then goto L213178;
  #L213170.  v2:= 1.0D;
  #L213174.  v0:= v2 - v0 @kind double;
  #L213178.  v2:= v6.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L21317c.  v3:= v6.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L213180.  v2:= v2 - v3 @kind float;
  #L213182.  v4:= (`double`) v2 @kind f2d;
  #L213184.  v4:= v4 * v0 @kind double;
  #L213186.  v2:= (`double`) v3 @kind f2d;
  #L213188.  v4:= v4 + v2 @kind double;
  #L21318a.  v2:= (`float`) v4 @kind d2f;
  #L21318c.  return v2;
}
procedure `float` `getValueOfTouchPositionAbsolute`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPositionAbsolute:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2131a0.  v0:= v3.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float`;
  #L2131a4.  call temp:= `isRtl`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L2131aa.  v1:= temp;
  #L2131ac.  if v1 == 0 then goto L2131b8;
  #L2131b0.  v1:= 1.0F;
  #L2131b4.  v0:= v1 - v0 @kind float;
  #L2131b8.  v1:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L2131bc.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L2131c0.  v1:= v1 - v2 @kind float;
  #L2131c2.  v1:= v1 * v0 @kind float;
  #L2131c4.  v1:= v1 + v2 @kind float;
  #L2131c6.  return v1;
}
procedure `void` `invalidateTrack`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidateTrack:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L214098.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L21409c.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L2140a0.  v1:= (`float`) v1 @kind i2f;
  #L2140a2.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L2140a8.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L2140ac.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L2140b0.  v1:= (`float`) v1 @kind i2f;
  #L2140b2.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L2140b8.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L2140bc.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L2140c0.  v1:= (`float`) v1 @kind i2f;
  #L2140c2.  v2:= 2.0F;
  #L2140c6.  v1:= v1 / v2 @kind float;
  #L2140c8.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L2140ce.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L2140d2.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L2140d6.  v1:= (`float`) v1 @kind i2f;
  #L2140d8.  v1:= v1 / v2 @kind float;
  #L2140da.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L2140e0.  return @kind void;
}
procedure `boolean` `isInVerticalScrollingContainer`(`com.google.android.material.slider.BaseSlider` v5 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.isInVerticalScrollingContainer:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L212710.  call temp:= `getParent`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L212716.  v0:= temp @kind object;
  #L212718.  v1:= instanceof @variable v0 @type ^`android.view.ViewGroup` @kind boolean;
  #L21271c.  v2:= 0I;
  #L21271e.  if v1 == 0 then goto L212762;
  #L212722.  v1:= v0 @kind object;
  #L212724.  v1:= (`android.view.ViewGroup`) v1 @kind object;
  #L212728.  v3:= 1I;
  #L21272a.  call temp:= `canScrollVertically`(v1, v3) @signature `Landroid/view/ViewGroup;.canScrollVertically:(I)Z` @kind virtual;
  #L212730.  v4:= temp;
  #L212732.  if v4 != 0 then goto L212744;
  #L212736.  v4:= -1I;
  #L212738.  call temp:= `canScrollVertically`(v1, v4) @signature `Landroid/view/ViewGroup;.canScrollVertically:(I)Z` @kind virtual;
  #L21273e.  v4:= temp;
  #L212740.  if v4 == 0 then goto L212746;
  #L212744.  v2:= v3;
  #L212746.  if v2 == 0 then goto L212758;
  #L21274a.  call temp:= `shouldDelayChildPressedState`(v1) @signature `Landroid/view/ViewGroup;.shouldDelayChildPressedState:()Z` @kind virtual;
  #L212750.  v4:= temp;
  #L212752.  if v4 == 0 then goto L212758;
  #L212756.  return v3;
  #L212758.  call temp:= `getParent`(v0) @signature `Landroid/view/ViewParent;.getParent:()Landroid/view/ViewParent;` @kind interface;
  #L21275e.  v0:= temp @kind object;
  #L212760.  goto L212718;
  #L212762.  return v2;
}
procedure `void` `loadResources`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.Resources` v2 @kind object @name `resources`) @signature `Lcom/google/android/material/slider/BaseSlider;.loadResources:(Landroid/content/res/Resources;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2140f4.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_widget_height` @type ^`int`;
  #L2140f8.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L2140fe.  v0:= temp;
  #L214100.  v1.`com.google.android.material.slider.BaseSlider.widgetHeight` @type ^`int` := v0;
  #L214104.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_track_side_padding` @type ^`int`;
  #L214108.  call temp:= `getDimensionPixelOffset`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L21410e.  v0:= temp;
  #L214110.  v1.`com.google.android.material.slider.BaseSlider.minTrackSidePadding` @type ^`int` := v0;
  #L214114.  v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int` := v0;
  #L214118.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_thumb_radius` @type ^`int`;
  #L21411c.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L214122.  v0:= temp;
  #L214124.  v1.`com.google.android.material.slider.BaseSlider.defaultThumbRadius` @type ^`int` := v0;
  #L214128.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_track_top` @type ^`int`;
  #L21412c.  call temp:= `getDimensionPixelOffset`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L214132.  v0:= temp;
  #L214134.  v1.`com.google.android.material.slider.BaseSlider.trackTop` @type ^`int` := v0;
  #L214138.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_label_padding` @type ^`int`;
  #L21413c.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L214142.  v0:= temp;
  #L214144.  v1.`com.google.android.material.slider.BaseSlider.labelPadding` @type ^`int` := v0;
  #L214148.  return @kind void;
}
procedure `void` `maybeCalculateTicksCoordinates`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeCalculateTicksCoordinates:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21415c.  v0:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L214160.  v1:= 0I;
  #L214162.  v0:= fcmpg(v0, v1);
  #L214166.  if v0 > 0 then goto L21416c;
  #L21416a.  return @kind void;
  #L21416c.  call `validateConfigurationIfDirty`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.validateConfigurationIfDirty:()V` @kind direct;
  #L214172.  v0:= v6.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L214176.  v1:= v6.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L21417a.  v0:= v0 - v1 @kind float;
  #L21417c.  v1:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L214180.  v0:= v0 / v1 @kind float;
  #L214182.  v1:= 1.0F;
  #L214186.  v0:= v0 + v1 @kind float;
  #L214188.  v0:= (`int`) v0 @kind f2i;
  #L21418a.  v1:= v6.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L21418e.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L214192.  v2:= v2 * 2;
  #L214196.  v1:= v1 / v2 @kind int;
  #L214198.  v1:= v1 + 1;
  #L21419c.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2141a2.  v0:= temp;
  #L2141a4.  v1:= v6.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L2141a8.  if v1 == 0 then goto L2141b6;
  #L2141ac.  v1:= length @variable v1;
  #L2141ae.  v2:= v0 * 2;
  #L2141b2.  if v1 == v2 then goto L2141c2;
  #L2141b6.  v1:= v0 * 2;
  #L2141ba.  v1:= new `float`[v1];
  #L2141be.  v6.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] := v1 @kind object;
  #L2141c2.  v1:= v6.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L2141c6.  v1:= (`float`) v1 @kind i2f;
  #L2141c8.  v2:= v0 + -1;
  #L2141cc.  v2:= (`float`) v2 @kind i2f;
  #L2141ce.  v1:= v1 / v2 @kind float;
  #L2141d0.  v2:= 0I;
  #L2141d2.  v3:= v0 * 2;
  #L2141d6.  if v2 >= v3 then goto L21420a;
  #L2141da.  v3:= v6.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L2141de.  v4:= v6.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L2141e2.  v4:= (`float`) v4 @kind i2f;
  #L2141e4.  v5:= v2 / 2;
  #L2141e8.  v5:= (`float`) v5 @kind i2f;
  #L2141ea.  v5:= v5 * v1 @kind float;
  #L2141ec.  v4:= v4 + v5 @kind float;
  #L2141ee.  v3[v2]:= v4;
  #L2141f2.  v4:= v2 + 1;
  #L2141f6.  call temp:= `calculateTop`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L2141fc.  v5:= temp;
  #L2141fe.  v5:= (`float`) v5 @kind i2f;
  #L214200.  v3[v4]:= v5;
  #L214204.  v2:= v2 + 2;
  #L214208.  goto L2141d2;
  #L21420a.  return @kind void;
}
procedure `void` `maybeDrawHalo`(`com.google.android.material.slider.BaseSlider` v9 @kind this, `android.graphics.Canvas` v10 @kind object @name `canvas`, `int` v11 @name `width`, `int` v12 @name `top`) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawHalo:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L21421c.  call temp:= `shouldDrawCompatHalo`(v9) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L214222.  v0:= temp;
  #L214224.  if v0 == 0 then goto L2142a0;
  #L214228.  v0:= v9.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L21422c.  v0:= (`float`) v0 @kind i2f;
  #L21422e.  v1:= v9.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L214232.  v2:= v9.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L214236.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L21423c.  v1:= temp @kind object;
  #L21423e.  v1:= (`java.lang.Float`) v1 @kind object;
  #L214242.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L214248.  v1:= temp;
  #L21424a.  call temp:= `normalizeValue`(v9, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L214250.  v1:= temp;
  #L214252.  v2:= (`float`) v11 @kind i2f;
  #L214254.  v1:= v1 * v2 @kind float;
  #L214256.  v0:= v0 + v1 @kind float;
  #L214258.  v0:= (`int`) v0 @kind f2i;
  #L21425a.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L21425e.  v2:= 28I;
  #L214262.  if v1 >= v2 then goto L21428c;
  #L214266.  v1:= v9.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L21426a.  v2:= v0 - v1 @kind int;
  #L21426e.  v4:= (`float`) v2 @kind i2f;
  #L214270.  v2:= v12 - v1 @kind int;
  #L214274.  v5:= (`float`) v2 @kind i2f;
  #L214276.  v2:= v0 + v1 @kind int;
  #L21427a.  v6:= (`float`) v2 @kind i2f;
  #L21427c.  v1:= v1 + v12 @kind int;
  #L21427e.  v7:= (`float`) v1 @kind i2f;
  #L214280.  v8:= `@@android.graphics.Region$Op.UNION` @type ^`android.graphics.Region$Op` @kind object;
  #L214284.  v3:= v10 @kind object;
  #L214286.  call temp:= `clipRect`(v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.clipRect:(FFFFLandroid/graphics/Region$Op;)Z` @kind virtual;
  #L21428c.  v1:= (`float`) v0 @kind i2f;
  #L21428e.  v2:= (`float`) v12 @kind i2f;
  #L214290.  v3:= v9.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L214294.  v3:= (`float`) v3 @kind i2f;
  #L214296.  v4:= v9.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L21429a.  call `drawCircle`(v10, v1, v2, v3, v4) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L2142a0.  return @kind void;
}
procedure `void` `maybeDrawTicks`(`com.google.android.material.slider.BaseSlider` v7 @kind this, `android.graphics.Canvas` v8 @kind object @name `canvas`) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawTicks:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2142b4.  v0:= v7.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` @kind boolean;
  #L2142b8.  if v0 == 0 then goto L214342;
  #L2142bc.  v0:= v7.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L2142c0.  v1:= 0I;
  #L2142c2.  v0:= fcmpg(v0, v1);
  #L2142c6.  if v0 > 0 then goto L2142cc;
  #L2142ca.  goto L214342;
  #L2142cc.  call temp:= `getActiveRange`(v7) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @kind direct;
  #L2142d2.  v0:= temp @kind object;
  #L2142d4.  v1:= v7.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L2142d8.  v2:= 0I;
  #L2142da.  v3:= v0[v2];
  #L2142de.  call temp:= `pivotIndex`(v1, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.pivotIndex:([FF)I` @kind static;
  #L2142e4.  v1:= temp;
  #L2142e6.  v3:= v7.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L2142ea.  v4:= 1I;
  #L2142ec.  v4:= v0[v4];
  #L2142f0.  call temp:= `pivotIndex`(v3, v4) @signature `Lcom/google/android/material/slider/BaseSlider;.pivotIndex:([FF)I` @kind static;
  #L2142f6.  v3:= temp;
  #L2142f8.  v4:= v7.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L2142fc.  v5:= v1 * 2;
  #L214300.  v6:= v7.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L214304.  call `drawPoints`(v8, v4, v2, v5, v6) @signature `Landroid/graphics/Canvas;.drawPoints:([FIILandroid/graphics/Paint;)V` @kind virtual;
  #L21430a.  v2:= v7.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L21430e.  v4:= v1 * 2;
  #L214312.  v5:= v3 * 2;
  #L214316.  v6:= v1 * 2;
  #L21431a.  v5:= v5 - v6 @kind int;
  #L21431c.  v6:= v7.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L214320.  call `drawPoints`(v8, v2, v4, v5, v6) @signature `Landroid/graphics/Canvas;.drawPoints:([FIILandroid/graphics/Paint;)V` @kind virtual;
  #L214326.  v2:= v7.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L21432a.  v4:= v3 * 2;
  #L21432e.  v5:= length @variable v2;
  #L214330.  v6:= v3 * 2;
  #L214334.  v5:= v5 - v6 @kind int;
  #L214336.  v6:= v7.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L21433a.  call `drawPoints`(v8, v2, v4, v5, v6) @signature `Landroid/graphics/Canvas;.drawPoints:([FIILandroid/graphics/Paint;)V` @kind virtual;
  #L214340.  return @kind void;
  #L214342.  return @kind void;
}
procedure `void` `maybeIncreaseTrackSidePadding`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeIncreaseTrackSidePadding:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L214354.  v0:= v2.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L214358.  v1:= v2.`com.google.android.material.slider.BaseSlider.defaultThumbRadius` @type ^`int`;
  #L21435c.  v0:= v0 - v1 @kind int;
  #L21435e.  v1:= 0I;
  #L214360.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L214366.  v0:= temp;
  #L214368.  v1:= v2.`com.google.android.material.slider.BaseSlider.minTrackSidePadding` @type ^`int`;
  #L21436c.  v1:= v1 + v0 @kind int;
  #L21436e.  v2.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int` := v1;
  #L214372.  call temp:= `isLaidOut`(v2) @signature `Landroidx/core/view/ViewCompat;.isLaidOut:(Landroid/view/View;)Z` @kind static;
  #L214378.  v1:= temp;
  #L21437a.  if v1 == 0 then goto L21438c;
  #L21437e.  call temp:= `getWidth`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getWidth:()I` @kind virtual;
  #L214384.  v1:= temp;
  #L214386.  call `updateTrackWidth`(v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.updateTrackWidth:(I)V` @kind direct;
  #L21438c.  return @kind void;
}
procedure `boolean` `moveFocus`(`com.google.android.material.slider.BaseSlider` v11 @kind this, `int` v12 @name `direction`) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2127b0.  v0:= v11.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L2127b4.  v1:= (`long`) v0 @kind i2l;
  #L2127b6.  v3:= (`long`) v12 @kind i2l;
  #L2127b8.  v1:= v1 + v3 @kind long;
  #L2127ba.  v3:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L2127be.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2127c4.  v3:= temp;
  #L2127c6.  v4:= 1I;
  #L2127c8.  v3:= v3 - v4 @kind int;
  #L2127ca.  v9:= (`long`) v3 @kind i2l;
  #L2127cc.  v7:= 0L;
  #L2127d0.  v5:= v1 @kind wide;
  #L2127d2.  call temp:= `clamp`(v5, v7, v9) @signature `Landroidx/core/math/MathUtils;.clamp:(JJJ)J` @kind static;
  #L2127d8.  v5:= temp @kind wide;
  #L2127da.  v3:= (`int`) v5 @kind l2i;
  #L2127dc.  v11.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v3;
  #L2127e0.  if v3 != v0 then goto L2127e8;
  #L2127e4.  v3:= 0I;
  #L2127e6.  return v3;
  #L2127e8.  v5:= v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L2127ec.  v6:= -1I;
  #L2127ee.  if v5 == v6 then goto L2127f6;
  #L2127f2.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v3;
  #L2127f6.  call `updateHaloHotspot`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L2127fc.  call `postInvalidate`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L212802.  return v4;
}
procedure `boolean` `moveFocusInAbsoluteDirection`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 @name `direction`) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L212814.  call temp:= `isRtl`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L21281a.  v0:= temp;
  #L21281c.  if v0 == 0 then goto L212834;
  #L212820.  v0:= -2147483648I;
  #L212824.  if v2 != v0 then goto L212830;
  #L212828.  v0:= 2147483647I;
  #L21282e.  goto L212832;
  #L212830.  v0:= -v2 @kind int;
  #L212832.  v2:= v0;
  #L212834.  call temp:= `moveFocus`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L21283a.  v0:= temp;
  #L21283c.  return v0;
}
procedure `float` `normalizeValue`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `float` v4 @name `value`) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2131f0.  v0:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L2131f4.  v1:= v4 - v0 @kind float;
  #L2131f8.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L2131fc.  v2:= v2 - v0 @kind float;
  #L2131fe.  v1:= v1 / v2 @kind float;
  #L213200.  call temp:= `isRtl`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L213206.  v0:= temp;
  #L213208.  if v0 == 0 then goto L213214;
  #L21320c.  v0:= 1.0F;
  #L213210.  v0:= v0 - v1 @kind float;
  #L213212.  return v0;
  #L213214.  return v1;
}
procedure `java.lang.Boolean` `onKeyDownNoActiveThumb`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 @name `keyCode`, `android.view.KeyEvent` v5 @kind object @name `event`) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyDownNoActiveThumb:(ILandroid/view/KeyEvent;)Ljava/lang/Boolean;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L213468.  v0:= 61I;
  #L21346c.  v1:= -1I;
  #L21346e.  v2:= 1I;
  #L213470.  if v4 == v0 then goto L2134f6;
  #L213474.  v0:= 66I;
  #L213478.  if v4 == v0 then goto L2134de;
  #L21347c.  v0:= 81I;
  #L213480.  if v4 == v0 then goto L2134ce;
  #L213484.  v0:= 69I;
  #L213488.  if v4 == v0 then goto L2134be;
  #L21348c.  v0:= 70I;
  #L213490.  if v4 == v0 then goto L2134ce;
  #L213494.  goto L213540;
  #L21349a.  v0:= 0I;
  #L21349c.  return v0 @kind object;
  #L21349e.  call temp:= `moveFocusInAbsoluteDirection`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L2134a4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2134aa.  v0:= temp @kind object;
  #L2134ac.  return v0 @kind object;
  #L2134ae.  call temp:= `moveFocusInAbsoluteDirection`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L2134b4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2134ba.  v0:= temp @kind object;
  #L2134bc.  return v0 @kind object;
  #L2134be.  call temp:= `moveFocus`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L2134c4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2134ca.  v0:= temp @kind object;
  #L2134cc.  return v0 @kind object;
  #L2134ce.  call temp:= `moveFocus`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L2134d4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2134da.  v0:= temp @kind object;
  #L2134dc.  return v0 @kind object;
  #L2134de.  v0:= v3.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L2134e2.  v3.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v0;
  #L2134e6.  call `postInvalidate`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L2134ec.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2134f2.  v0:= temp @kind object;
  #L2134f4.  return v0 @kind object;
  #L2134f6.  call temp:= `hasNoModifiers`(v5) @signature `Landroid/view/KeyEvent;.hasNoModifiers:()Z` @kind virtual;
  #L2134fc.  v0:= temp;
  #L2134fe.  if v0 == 0 then goto L213514;
  #L213502.  call temp:= `moveFocus`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L213508.  v0:= temp;
  #L21350a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L213510.  v0:= temp @kind object;
  #L213512.  return v0 @kind object;
  #L213514.  call temp:= `isShiftPressed`(v5) @signature `Landroid/view/KeyEvent;.isShiftPressed:()Z` @kind virtual;
  #L21351a.  v0:= temp;
  #L21351c.  if v0 == 0 then goto L213532;
  #L213520.  call temp:= `moveFocus`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L213526.  v0:= temp;
  #L213528.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L21352e.  v0:= temp @kind object;
  #L213530.  return v0 @kind object;
  #L213532.  v0:= 0I;
  #L213534.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L21353a.  v0:= temp @kind object;
  #L21353c.  return v0 @kind object;
  #L21353e.  
  #L213540.  switch v4
                  | 21 => goto L2134ae
                  | 22 => goto L21349e
                  | 23 => goto L2134de
                  | else => goto L21349a;
}
procedure `void` `onStartTrackingTouch`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L214614.  v0:= v2.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L214618.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L21461e.  v0:= temp @kind object;
  #L214620.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L214626.  v1:= temp;
  #L214628.  if v1 == 0 then goto L214640;
  #L21462c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L214632.  v1:= temp @kind object;
  #L214634.  v1:= (`com.google.android.material.slider.BaseOnSliderTouchListener`) v1 @kind object;
  #L214638.  call `onStartTrackingTouch`(v1, v2) @signature `Lcom/google/android/material/slider/BaseOnSliderTouchListener;.onStartTrackingTouch:(Ljava/lang/Object;)V` @kind interface;
  #L21463e.  goto L214620;
  #L214640.  return @kind void;
}
procedure `void` `onStopTrackingTouch`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onStopTrackingTouch:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L214654.  v0:= v2.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L214658.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L21465e.  v0:= temp @kind object;
  #L214660.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L214666.  v1:= temp;
  #L214668.  if v1 == 0 then goto L214680;
  #L21466c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L214672.  v1:= temp @kind object;
  #L214674.  v1:= (`com.google.android.material.slider.BaseOnSliderTouchListener`) v1 @kind object;
  #L214678.  call `onStopTrackingTouch`(v1, v2) @signature `Lcom/google/android/material/slider/BaseOnSliderTouchListener;.onStopTrackingTouch:(Ljava/lang/Object;)V` @kind interface;
  #L21467e.  goto L214660;
  #L214680.  return @kind void;
}
procedure `com.google.android.material.tooltip.TooltipDrawable` `parseLabelDrawable`(`android.content.Context` v3 @kind object @name `context`, `android.content.res.TypedArray` v4 @kind object @name `a`) @signature `Lcom/google/android/material/slider/BaseSlider;.parseLabelDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;)Lcom/google/android/material/tooltip/TooltipDrawable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L212ea0.  v0:= `@@com.google.android.material.R$styleable.Slider_labelStyle` @type ^`int`;
  #L212ea4.  v1:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Tooltip` @type ^`int`;
  #L212ea8.  call temp:= `getResourceId`(v4, v0, v1) @signature `Landroid/content/res/TypedArray;.getResourceId:(II)I` @kind virtual;
  #L212eae.  v0:= temp;
  #L212eb0.  v1:= 0I;
  #L212eb2.  v2:= 0I;
  #L212eb4.  call temp:= `createFromAttributes`(v3, v1, v2, v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/tooltip/TooltipDrawable;` @kind static;
  #L212eba.  v0:= temp @kind object;
  #L212ebc.  return v0 @kind object;
}
procedure `int` `pivotIndex`(`float`[] v1 @kind object @name `coordinates`, `float` v2 @name `position`) @signature `Lcom/google/android/material/slider/BaseSlider;.pivotIndex:([FF)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L213440.  v0:= length @variable v1;
  #L213442.  v0:= v0 / 2;
  #L213446.  v0:= v0 + -1;
  #L21344a.  v0:= (`float`) v0 @kind i2f;
  #L21344c.  v0:= v0 * v2 @kind float;
  #L21344e.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L213454.  v0:= temp;
  #L213456.  return v0;
}
procedure `void` `processAttributes`(`com.google.android.material.slider.BaseSlider` v17 @kind this, `android.content.Context` v18 @kind object @name `context`, `android.util.AttributeSet` v19 @kind object @name `attrs`, `int` v20 @name `defStyleAttr`) @signature `Lcom/google/android/material/slider/BaseSlider;.processAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L214694.  v0:= v17 @kind object;
  #L214698.  v7:= v18 @kind object;
  #L21469c.  v3:= `@@com.google.android.material.R$styleable.Slider` @type ^`int`[] @kind object;
  #L2146a0.  v5:= `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @type ^`int`;
  #L2146a4.  v8:= 0I;
  #L2146a6.  v6:= new `int`[v8];
  #L2146aa.  v1:= v18 @kind object;
  #L2146ae.  v2:= v19 @kind object;
  #L2146b2.  v4:= v20;
  #L2146b6.  call temp:= `obtainStyledAttributes`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L2146bc.  v1:= temp @kind object;
  #L2146be.  v2:= `@@com.google.android.material.R$styleable.Slider_android_valueFrom` @type ^`int`;
  #L2146c2.  v3:= 0I;
  #L2146c4.  call temp:= `getFloat`(v1, v2, v3) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L2146ca.  v2:= temp;
  #L2146cc.  v0.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float` := v2;
  #L2146d0.  v2:= `@@com.google.android.material.R$styleable.Slider_android_valueTo` @type ^`int`;
  #L2146d4.  v4:= 1.0F;
  #L2146d8.  call temp:= `getFloat`(v1, v2, v4) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L2146de.  v2:= temp;
  #L2146e0.  v0.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float` := v2;
  #L2146e4.  v2:= 1I;
  #L2146e6.  v4:= new `java.lang.Float`[v2];
  #L2146ea.  v5:= v0.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L2146ee.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2146f4.  v5:= temp @kind object;
  #L2146f6.  v4[v8]:= v5 @kind object;
  #L2146fa.  call `setValues`(v0, v4) @signature `Lcom/google/android/material/slider/BaseSlider;.setValues:([Ljava/lang/Float;)V` @kind virtual;
  #L214700.  v4:= `@@com.google.android.material.R$styleable.Slider_android_stepSize` @type ^`int`;
  #L214704.  call temp:= `getFloat`(v1, v4, v3) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L21470a.  v4:= temp;
  #L21470c.  v0.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v4;
  #L214710.  v4:= `@@com.google.android.material.R$styleable.Slider_trackColor` @type ^`int`;
  #L214714.  call temp:= `hasValue`(v1, v4) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L21471a.  v4:= temp;
  #L21471c.  if v4 == 0 then goto L214726;
  #L214720.  v5:= `@@com.google.android.material.R$styleable.Slider_trackColor` @type ^`int`;
  #L214724.  goto L21472a;
  #L214726.  v5:= `@@com.google.android.material.R$styleable.Slider_trackColorInactive` @type ^`int`;
  #L21472a.  if v4 == 0 then goto L214734;
  #L21472e.  v6:= `@@com.google.android.material.R$styleable.Slider_trackColor` @type ^`int`;
  #L214732.  goto L214738;
  #L214734.  v6:= `@@com.google.android.material.R$styleable.Slider_trackColorActive` @type ^`int`;
  #L214738.  
  #L21473a.  call temp:= `getColorStateList`(v7, v1, v5) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L214740.  v9:= temp @kind object;
  #L214742.  if v9 == 0 then goto L21474a;
  #L214746.  v10:= v9 @kind object;
  #L214748.  goto L214756;
  #L21474a.  v10:= `@@com.google.android.material.R$color.material_slider_inactive_track_color` @type ^`int`;
  #L21474e.  call temp:= `getColorStateList`(v7, v10) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L214754.  v10:= temp @kind object;
  #L214756.  call `setTrackInactiveTintList`(v0, v10) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L21475c.  
  #L21475e.  call temp:= `getColorStateList`(v7, v1, v6) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L214764.  v10:= temp @kind object;
  #L214766.  if v10 == 0 then goto L21476e;
  #L21476a.  v11:= v10 @kind object;
  #L21476c.  goto L21477a;
  #L21476e.  v11:= `@@com.google.android.material.R$color.material_slider_active_track_color` @type ^`int`;
  #L214772.  call temp:= `getColorStateList`(v7, v11) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L214778.  v11:= temp @kind object;
  #L21477a.  call `setTrackActiveTintList`(v0, v11) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214780.  v11:= `@@com.google.android.material.R$styleable.Slider_thumbColor` @type ^`int`;
  #L214784.  call temp:= `getColorStateList`(v7, v1, v11) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L21478a.  v11:= temp @kind object;
  #L21478c.  v12:= v0.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L214790.  call `setFillColor`(v12, v11) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214796.  v12:= `@@com.google.android.material.R$styleable.Slider_thumbStrokeColor` @type ^`int`;
  #L21479a.  call temp:= `hasValue`(v1, v12) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L2147a0.  v12:= temp;
  #L2147a2.  if v12 == 0 then goto L2147b8;
  #L2147a6.  v12:= `@@com.google.android.material.R$styleable.Slider_thumbStrokeColor` @type ^`int`;
  #L2147aa.  call temp:= `getColorStateList`(v7, v1, v12) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L2147b0.  v12:= temp @kind object;
  #L2147b2.  call `setThumbStrokeColor`(v0, v12) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L2147b8.  v12:= `@@com.google.android.material.R$styleable.Slider_thumbStrokeWidth` @type ^`int`;
  #L2147bc.  call temp:= `getDimension`(v1, v12, v3) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L2147c2.  v12:= temp;
  #L2147c4.  call `setThumbStrokeWidth`(v0, v12) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidth:(F)V` @kind virtual;
  #L2147ca.  v12:= `@@com.google.android.material.R$styleable.Slider_haloColor` @type ^`int`;
  #L2147ce.  call temp:= `getColorStateList`(v7, v1, v12) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L2147d4.  v12:= temp @kind object;
  #L2147d6.  if v12 == 0 then goto L2147de;
  #L2147da.  v13:= v12 @kind object;
  #L2147dc.  goto L2147ea;
  #L2147de.  v13:= `@@com.google.android.material.R$color.material_slider_halo_color` @type ^`int`;
  #L2147e2.  call temp:= `getColorStateList`(v7, v13) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L2147e8.  v13:= temp @kind object;
  #L2147ea.  call `setHaloTintList`(v0, v13) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L2147f0.  v13:= `@@com.google.android.material.R$styleable.Slider_tickVisible` @type ^`int`;
  #L2147f4.  call temp:= `getBoolean`(v1, v13, v2) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L2147fa.  v13:= temp;
  #L2147fc.  v0.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` := v13 @kind boolean;
  #L214800.  v13:= `@@com.google.android.material.R$styleable.Slider_tickColor` @type ^`int`;
  #L214804.  call temp:= `hasValue`(v1, v13) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L21480a.  v13:= temp;
  #L21480c.  if v13 == 0 then goto L214816;
  #L214810.  v14:= `@@com.google.android.material.R$styleable.Slider_tickColor` @type ^`int`;
  #L214814.  goto L21481a;
  #L214816.  v14:= `@@com.google.android.material.R$styleable.Slider_tickColorInactive` @type ^`int`;
  #L21481a.  if v13 == 0 then goto L214824;
  #L21481e.  v15:= `@@com.google.android.material.R$styleable.Slider_tickColor` @type ^`int`;
  #L214822.  goto L214828;
  #L214824.  v15:= `@@com.google.android.material.R$styleable.Slider_tickColorActive` @type ^`int`;
  #L214828.  
  #L21482a.  call temp:= `getColorStateList`(v7, v1, v14) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L214830.  v16:= temp @kind object;
  #L214832.  if v16 == 0 then goto L21483c;
  #L214836.  v2:= v16 @kind object;
  #L21483a.  goto L214848;
  #L21483c.  v2:= `@@com.google.android.material.R$color.material_slider_inactive_tick_marks_color` @type ^`int`;
  #L214840.  call temp:= `getColorStateList`(v7, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L214846.  v2:= temp @kind object;
  #L214848.  call `setTickInactiveTintList`(v0, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L21484e.  
  #L214850.  call temp:= `getColorStateList`(v7, v1, v15) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L214856.  v2:= temp @kind object;
  #L214858.  if v2 == 0 then goto L214860;
  #L21485c.  v3:= v2 @kind object;
  #L21485e.  goto L21486c;
  #L214860.  v3:= `@@com.google.android.material.R$color.material_slider_active_tick_marks_color` @type ^`int`;
  #L214864.  call temp:= `getColorStateList`(v7, v3) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L21486a.  v3:= temp @kind object;
  #L21486c.  call `setTickActiveTintList`(v0, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214872.  v3:= `@@com.google.android.material.R$styleable.Slider_thumbRadius` @type ^`int`;
  #L214876.  call temp:= `getDimensionPixelSize`(v1, v3, v8) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L21487c.  v3:= temp;
  #L21487e.  call `setThumbRadius`(v0, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadius:(I)V` @kind virtual;
  #L214884.  v3:= `@@com.google.android.material.R$styleable.Slider_haloRadius` @type ^`int`;
  #L214888.  call temp:= `getDimensionPixelSize`(v1, v3, v8) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L21488e.  v3:= temp;
  #L214890.  call `setHaloRadius`(v0, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadius:(I)V` @kind virtual;
  #L214896.  v3:= `@@com.google.android.material.R$styleable.Slider_thumbElevation` @type ^`int`;
  #L21489a.  v8:= 0I;
  #L21489c.  call temp:= `getDimension`(v1, v3, v8) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L2148a2.  v3:= temp;
  #L2148a4.  call `setThumbElevation`(v0, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevation:(F)V` @kind virtual;
  #L2148aa.  v3:= `@@com.google.android.material.R$styleable.Slider_trackHeight` @type ^`int`;
  #L2148ae.  v8:= 0I;
  #L2148b0.  call temp:= `getDimensionPixelSize`(v1, v3, v8) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L2148b6.  v3:= temp;
  #L2148b8.  call `setTrackHeight`(v0, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackHeight:(I)V` @kind virtual;
  #L2148be.  v3:= `@@com.google.android.material.R$styleable.Slider_labelBehavior` @type ^`int`;
  #L2148c2.  call temp:= `getInt`(v1, v3, v8) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L2148c8.  v3:= temp;
  #L2148ca.  v0.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int` := v3;
  #L2148ce.  v3:= `@@com.google.android.material.R$styleable.Slider_android_enabled` @type ^`int`;
  #L2148d2.  v8:= 1I;
  #L2148d4.  call temp:= `getBoolean`(v1, v3, v8) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L2148da.  v3:= temp;
  #L2148dc.  if v3 != 0 then goto L2148e8;
  #L2148e0.  v3:= 0I;
  #L2148e2.  call `setEnabled`(v0, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.setEnabled:(Z)V` @kind virtual;
  #L2148e8.  call `recycle`(v1) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L2148ee.  return @kind void;
}
procedure `void` `scheduleAccessibilityEventSender`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 @name `idx`) @signature `Lcom/google/android/material/slider/BaseSlider;.scheduleAccessibilityEventSender:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L214938.  v0:= v3.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L21493c.  if v0 != 0 then goto L214952;
  #L214940.  v0:= new `com.google.android.material.slider.BaseSlider$AccessibilityEventSender`;
  #L214944.  v1:= 0I;
  #L214946.  call `<init>`(v0, v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityEventSender;.<init>:(Lcom/google/android/material/slider/BaseSlider;Lcom/google/android/material/slider/BaseSlider$1;)V` @kind direct;
  #L21494c.  v3.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` := v0 @kind object;
  #L214950.  goto L214958;
  #L214952.  call temp:= `removeCallbacks`(v3, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.removeCallbacks:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L214958.  v0:= v3.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L21495c.  call `setVirtualViewId`(v0, v4) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityEventSender;.setVirtualViewId:(I)V` @kind virtual;
  #L214962.  v0:= v3.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L214966.  v1:= 200L;
  #L21496a.  call temp:= `postDelayed`(v3, v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.postDelayed:(Ljava/lang/Runnable;J)Z` @kind virtual;
  #L214970.  return @kind void;
}
procedure `void` `setValueForLabel`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `com.google.android.material.tooltip.TooltipDrawable` v5 @kind object @name `label`, `float` v6 @name `value`) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueForLabel:(Lcom/google/android/material/tooltip/TooltipDrawable;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L214f2c.  call temp:= `formatValue`(v4, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.formatValue:(F)Ljava/lang/String;` @kind direct;
  #L214f32.  v0:= temp @kind object;
  #L214f34.  call `setText`(v5, v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L214f3a.  v0:= v4.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L214f3e.  call temp:= `normalizeValue`(v4, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L214f44.  v1:= temp;
  #L214f46.  v2:= v4.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L214f4a.  v2:= (`float`) v2 @kind i2f;
  #L214f4c.  v1:= v1 * v2 @kind float;
  #L214f4e.  v1:= (`int`) v1 @kind f2i;
  #L214f50.  v0:= v0 + v1 @kind int;
  #L214f52.  call temp:= `getIntrinsicWidth`(v5) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L214f58.  v1:= temp;
  #L214f5a.  v1:= v1 / 2;
  #L214f5e.  v0:= v0 - v1 @kind int;
  #L214f60.  call temp:= `calculateTop`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L214f66.  v1:= temp;
  #L214f68.  v2:= v4.`com.google.android.material.slider.BaseSlider.labelPadding` @type ^`int`;
  #L214f6c.  v3:= v4.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L214f70.  v2:= v2 + v3 @kind int;
  #L214f72.  v1:= v1 - v2 @kind int;
  #L214f74.  call temp:= `getIntrinsicHeight`(v5) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L214f7a.  v2:= temp;
  #L214f7c.  v2:= v1 - v2 @kind int;
  #L214f80.  call temp:= `getIntrinsicWidth`(v5) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L214f86.  v3:= temp;
  #L214f88.  v3:= v3 + v0 @kind int;
  #L214f8a.  call `setBounds`(v5, v0, v2, v3, v1) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setBounds:(IIII)V` @kind virtual;
  #L214f90.  v2:= new `android.graphics.Rect`;
  #L214f94.  call temp:= `getBounds`(v5) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L214f9a.  v3:= temp @kind object;
  #L214f9c.  call `<init>`(v2, v3) @signature `Landroid/graphics/Rect;.<init>:(Landroid/graphics/Rect;)V` @kind direct;
  #L214fa2.  call temp:= `getContentView`(v4) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L214fa8.  v3:= temp @kind object;
  #L214faa.  call `offsetDescendantRect`(v3, v4, v2) @signature `Lcom/google/android/material/internal/DescendantOffsetUtils;.offsetDescendantRect:(Landroid/view/ViewGroup;Landroid/view/View;Landroid/graphics/Rect;)V` @kind static;
  #L214fb0.  call `setBounds`(v5, v2) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L214fb6.  call temp:= `getContentViewOverlay`(v4) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentViewOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @kind static;
  #L214fbc.  v3:= temp @kind object;
  #L214fbe.  call `add`(v3, v5) @signature `Lcom/google/android/material/internal/ViewOverlayImpl;.add:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L214fc4.  return @kind void;
}
procedure `void` `setValuesInternal`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `java.util.ArrayList` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L21506c.  call temp:= `isEmpty`(v3) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L215072.  v0:= temp;
  #L215074.  if v0 != 0 then goto L2150d2;
  #L215078.  call `sort`(v3) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L21507e.  v0:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L215082.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L215088.  v0:= temp;
  #L21508a.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L215090.  v1:= temp;
  #L215092.  if v0 != v1 then goto L2150a8;
  #L215096.  v0:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L21509a.  call temp:= `equals`(v0, v3) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2150a0.  v0:= temp;
  #L2150a2.  if v0 == 0 then goto L2150a8;
  #L2150a6.  return @kind void;
  #L2150a8.  v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` := v3 @kind object;
  #L2150ac.  v0:= 1I;
  #L2150ae.  v2.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v0 @kind boolean;
  #L2150b2.  v0:= 0I;
  #L2150b4.  v2.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v0;
  #L2150b8.  call `updateHaloHotspot`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L2150be.  call `createLabelPool`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelPool:()V` @kind direct;
  #L2150c4.  call `dispatchOnChangedProgramatically`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedProgramatically:()V` @kind direct;
  #L2150ca.  call `postInvalidate`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L2150d0.  return @kind void;
  #L2150d2.  v0:= new `java.lang.IllegalArgumentException`;
  #L2150d6.  v1:= "At least one value must be set" @kind object;
  #L2150da.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2150e0.  throw v0;
}
procedure `boolean` `shouldDrawCompatHalo`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L212cdc.  v0:= v2.`com.google.android.material.slider.BaseSlider.forceDrawCompatHalo` @type ^`boolean` @kind boolean;
  #L212ce0.  if v0 != 0 then goto L212d06;
  #L212ce4.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L212ce8.  v1:= 21I;
  #L212cec.  if v0 < v1 then goto L212d06;
  #L212cf0.  call temp:= `getBackground`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L212cf6.  v0:= temp @kind object;
  #L212cf8.  v0:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L212cfc.  if v0 != 0 then goto L212d02;
  #L212d00.  goto L212d06;
  #L212d02.  v0:= 0I;
  #L212d04.  goto L212d08;
  #L212d06.  v0:= 1I;
  #L212d08.  return v0;
}
procedure `boolean` `snapActiveThumbToValue`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 @name `value`) @signature `Lcom/google/android/material/slider/BaseSlider;.snapActiveThumbToValue:(F)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L212d1c.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L212d20.  call temp:= `snapThumbToValue`(v1, v0, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.snapThumbToValue:(IF)Z` @kind direct;
  #L212d26.  v0:= temp;
  #L212d28.  return v0;
}
procedure `double` `snapPosition`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `float` v6 @name `position`) @signature `Lcom/google/android/material/slider/BaseSlider;.snapPosition:(F)D` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L212ed0.  v0:= v5.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L212ed4.  v1:= 0I;
  #L212ed6.  v1:= fcmpl(v0, v1);
  #L212eda.  if v1 <= 0 then goto L212f00;
  #L212ede.  v1:= v5.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L212ee2.  v2:= v5.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L212ee6.  v1:= v1 - v2 @kind float;
  #L212ee8.  v1:= v1 / v0 @kind float;
  #L212eea.  v0:= (`int`) v1 @kind f2i;
  #L212eec.  v1:= (`float`) v0 @kind i2f;
  #L212eee.  v1:= v1 * v6 @kind float;
  #L212ef0.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L212ef6.  v1:= temp;
  #L212ef8.  v1:= (`double`) v1 @kind i2d;
  #L212efa.  v3:= (`double`) v0 @kind i2d;
  #L212efc.  v1:= v1 / v3 @kind double;
  #L212efe.  return v1 @kind wide;
  #L212f00.  v0:= (`double`) v6 @kind f2d;
  #L212f02.  return v0 @kind wide;
}
procedure `boolean` `snapThumbToValue`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int` v5 @name `idx`, `float` v6 @name `value`) @signature `Lcom/google/android/material/slider/BaseSlider;.snapThumbToValue:(IF)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L212d3c.  v0:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L212d40.  call temp:= `get`(v0, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L212d46.  v0:= temp @kind object;
  #L212d48.  v0:= (`java.lang.Float`) v0 @kind object;
  #L212d4c.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L212d52.  v0:= temp;
  #L212d54.  v0:= v6 - v0 @kind float;
  #L212d58.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L212d5e.  v0:= temp;
  #L212d60.  v0:= (`double`) v0 @kind f2d;
  #L212d62.  v2:= 1.0E-4D;
  #L212d6c.  v0:= dcmpg(v0, v2);
  #L212d70.  if v0 >= 0 then goto L212d78;
  #L212d74.  v0:= 0I;
  #L212d76.  return v0;
  #L212d78.  call temp:= `getClampedValue`(v4, v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.getClampedValue:(IF)F` @kind direct;
  #L212d7e.  v0:= temp;
  #L212d80.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L212d84.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L212d8a.  v2:= temp @kind object;
  #L212d8c.  call temp:= `set`(v1, v5, v2) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L212d92.  v4.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v5;
  #L212d96.  call `dispatchOnChangedFromUser`(v4, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedFromUser:(I)V` @kind direct;
  #L212d9c.  v1:= 1I;
  #L212d9e.  return v1;
}
procedure `boolean` `snapTouchPosition`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L212db0.  call temp:= `getValueOfTouchPosition`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPosition:()F` @kind direct;
  #L212db6.  v0:= temp;
  #L212db8.  call temp:= `snapActiveThumbToValue`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.snapActiveThumbToValue:(F)Z` @kind direct;
  #L212dbe.  v0:= temp;
  #L212dc0.  return v0;
}
procedure `void` `updateHaloHotspot`(`com.google.android.material.slider.BaseSlider` v7 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21515c.  call temp:= `shouldDrawCompatHalo`(v7) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L215162.  v0:= temp;
  #L215164.  if v0 != 0 then goto L2151da;
  #L215168.  call temp:= `getMeasuredWidth`(v7) @signature `Lcom/google/android/material/slider/BaseSlider;.getMeasuredWidth:()I` @kind virtual;
  #L21516e.  v0:= temp;
  #L215170.  if v0 <= 0 then goto L2151da;
  #L215174.  call temp:= `getBackground`(v7) @signature `Lcom/google/android/material/slider/BaseSlider;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L21517a.  v0:= temp @kind object;
  #L21517c.  v1:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L215180.  if v1 == 0 then goto L2151da;
  #L215184.  v1:= v7.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L215188.  v2:= v7.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L21518c.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L215192.  v1:= temp @kind object;
  #L215194.  v1:= (`java.lang.Float`) v1 @kind object;
  #L215198.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L21519e.  v1:= temp;
  #L2151a0.  call temp:= `normalizeValue`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L2151a6.  v1:= temp;
  #L2151a8.  v2:= v7.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L2151ac.  v2:= (`float`) v2 @kind i2f;
  #L2151ae.  v1:= v1 * v2 @kind float;
  #L2151b0.  v2:= v7.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L2151b4.  v2:= (`float`) v2 @kind i2f;
  #L2151b6.  v1:= v1 + v2 @kind float;
  #L2151b8.  v1:= (`int`) v1 @kind f2i;
  #L2151ba.  call temp:= `calculateTop`(v7) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L2151c0.  v2:= temp;
  #L2151c2.  v3:= v7.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L2151c6.  v4:= v1 - v3 @kind int;
  #L2151ca.  v5:= v2 - v3 @kind int;
  #L2151ce.  v6:= v1 + v3 @kind int;
  #L2151d2.  v3:= v3 + v2 @kind int;
  #L2151d4.  call `setHotspotBounds`(v0, v4, v5, v6, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setHotspotBounds:(Landroid/graphics/drawable/Drawable;IIII)V` @kind static;
  #L2151da.  return @kind void;
}
procedure `void` `updateTrackWidth`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `int` v3 @name `width`) @signature `Lcom/google/android/material/slider/BaseSlider;.updateTrackWidth:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2151ec.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L2151f0.  v0:= v0 * 2;
  #L2151f4.  v0:= v3 - v0 @kind int;
  #L2151f8.  v1:= 0I;
  #L2151fa.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L215200.  v0:= temp;
  #L215202.  v2.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int` := v0;
  #L215206.  call `maybeCalculateTicksCoordinates`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeCalculateTicksCoordinates:()V` @kind direct;
  #L21520c.  return @kind void;
}
procedure `void` `validateConfigurationIfDirty`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateConfigurationIfDirty:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L215220.  v0:= v1.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` @kind boolean;
  #L215224.  if v0 == 0 then goto L21524c;
  #L215228.  call `validateValueFrom`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueFrom:()V` @kind direct;
  #L21522e.  call `validateValueTo`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueTo:()V` @kind direct;
  #L215234.  call `validateStepSize`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateStepSize:()V` @kind direct;
  #L21523a.  call `validateValues`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValues:()V` @kind direct;
  #L215240.  call `warnAboutFloatingPointError`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.warnAboutFloatingPointError:()V` @kind direct;
  #L215246.  v0:= 0I;
  #L215248.  v1.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v0 @kind boolean;
  #L21524c.  return @kind void;
}
procedure `void` `validateStepSize`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateStepSize:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L215260.  v0:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L215264.  v1:= 0I;
  #L215266.  v0:= fcmpl(v0, v1);
  #L21526a.  if v0 <= 0 then goto L2152d4;
  #L21526e.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L215272.  call temp:= `valueLandsOnTick`(v4, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.valueLandsOnTick:(F)Z` @kind direct;
  #L215278.  v0:= temp;
  #L21527a.  if v0 == 0 then goto L215280;
  #L21527e.  goto L2152d4;
  #L215280.  v0:= new `java.lang.IllegalStateException`;
  #L215284.  v1:= 3I;
  #L215286.  v1:= new `java.lang.Object`[v1];
  #L21528a.  v2:= 0I;
  #L21528c.  v3:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L215290.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L215296.  v3:= temp @kind object;
  #L215298.  v1[v2]:= v3 @kind object;
  #L21529c.  v2:= 1I;
  #L21529e.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L2152a2.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L2152a8.  v3:= temp @kind object;
  #L2152aa.  v1[v2]:= v3 @kind object;
  #L2152ae.  v2:= 2I;
  #L2152b0.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L2152b4.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L2152ba.  v3:= temp @kind object;
  #L2152bc.  v1[v2]:= v3 @kind object;
  #L2152c0.  v2:= "The stepSize(%s) must be 0, or a factor of the valueFrom(%s)-valueTo(%s) range" @kind object;
  #L2152c4.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2152ca.  v1:= temp @kind object;
  #L2152cc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2152d2.  throw v0;
  #L2152d4.  return @kind void;
}
procedure `void` `validateValueFrom`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueFrom:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2152e8.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L2152ec.  v1:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L2152f0.  v0:= fcmpl(v0, v1);
  #L2152f4.  if v0 >= 0 then goto L2152fa;
  #L2152f8.  return @kind void;
  #L2152fa.  v0:= new `java.lang.IllegalStateException`;
  #L2152fe.  v1:= 2I;
  #L215300.  v1:= new `java.lang.Object`[v1];
  #L215304.  v2:= 0I;
  #L215306.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L21530a.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L215310.  v3:= temp @kind object;
  #L215312.  v1[v2]:= v3 @kind object;
  #L215316.  v2:= 1I;
  #L215318.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L21531c.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L215322.  v3:= temp @kind object;
  #L215324.  v1[v2]:= v3 @kind object;
  #L215328.  v2:= "valueFrom(%s) must be smaller than valueTo(%s)" @kind object;
  #L21532c.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L215332.  v1:= temp @kind object;
  #L215334.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21533a.  throw v0;
}
procedure `void` `validateValueTo`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueTo:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21534c.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L215350.  v1:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L215354.  v0:= fcmpg(v0, v1);
  #L215358.  if v0 <= 0 then goto L21535e;
  #L21535c.  return @kind void;
  #L21535e.  v0:= new `java.lang.IllegalStateException`;
  #L215362.  v1:= 2I;
  #L215364.  v1:= new `java.lang.Object`[v1];
  #L215368.  v2:= 0I;
  #L21536a.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L21536e.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L215374.  v3:= temp @kind object;
  #L215376.  v1[v2]:= v3 @kind object;
  #L21537a.  v2:= 1I;
  #L21537c.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L215380.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L215386.  v3:= temp @kind object;
  #L215388.  v1[v2]:= v3 @kind object;
  #L21538c.  v2:= "valueTo(%s) must be greater than valueFrom(%s)" @kind object;
  #L215390.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L215396.  v1:= temp @kind object;
  #L215398.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21539e.  throw v0;
}
procedure `void` `validateValues`(`com.google.android.material.slider.BaseSlider` v8 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValues:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2153b0.  v0:= v8.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L2153b4.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2153ba.  v0:= temp @kind object;
  #L2153bc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2153c2.  v1:= temp;
  #L2153c4.  if v1 == 0 then goto L2154dc;
  #L2153c8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2153ce.  v1:= temp @kind object;
  #L2153d0.  v1:= (`java.lang.Float`) v1 @kind object;
  #L2153d4.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2153da.  v2:= temp;
  #L2153dc.  v3:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L2153e0.  v2:= fcmpg(v2, v3);
  #L2153e4.  v3:= 2I;
  #L2153e6.  v4:= 1I;
  #L2153e8.  v5:= 0I;
  #L2153ea.  v6:= 3I;
  #L2153ec.  if v2 < 0 then goto L21548c;
  #L2153f0.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2153f6.  v2:= temp;
  #L2153f8.  v7:= v8.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L2153fc.  v2:= fcmpl(v2, v7);
  #L215400.  if v2 > 0 then goto L21548c;
  #L215404.  v2:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L215408.  v7:= 0I;
  #L21540a.  v2:= fcmpl(v2, v7);
  #L21540e.  if v2 <= 0 then goto L21548a;
  #L215412.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L215418.  v2:= temp;
  #L21541a.  call temp:= `valueLandsOnTick`(v8, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.valueLandsOnTick:(F)Z` @kind direct;
  #L215420.  v2:= temp;
  #L215422.  if v2 == 0 then goto L215428;
  #L215426.  goto L21548a;
  #L215428.  v0:= new `java.lang.IllegalStateException`;
  #L21542c.  v2:= 4I;
  #L21542e.  v2:= new `java.lang.Object`[v2];
  #L215432.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L215438.  v7:= temp;
  #L21543a.  call temp:= `toString`(v7) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L215440.  v7:= temp @kind object;
  #L215442.  v2[v5]:= v7 @kind object;
  #L215446.  v5:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L21544a.  call temp:= `toString`(v5) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L215450.  v5:= temp @kind object;
  #L215452.  v2[v4]:= v5 @kind object;
  #L215456.  v4:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L21545a.  call temp:= `toString`(v4) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L215460.  v4:= temp @kind object;
  #L215462.  v2[v3]:= v4 @kind object;
  #L215466.  v3:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L21546a.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L215470.  v3:= temp @kind object;
  #L215472.  v2[v6]:= v3 @kind object;
  #L215476.  v3:= "Value(%s) must be equal to valueFrom(%s) plus a multiple of stepSize(%s) when using stepSize(%s)" @kind object;
  #L21547a.  call temp:= `format`(v3, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L215480.  v2:= temp @kind object;
  #L215482.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L215488.  throw v0;
  #L21548a.  goto L2153bc;
  #L21548c.  v0:= new `java.lang.IllegalStateException`;
  #L215490.  v2:= new `java.lang.Object`[v6];
  #L215494.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L21549a.  v6:= temp;
  #L21549c.  call temp:= `toString`(v6) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L2154a2.  v6:= temp @kind object;
  #L2154a4.  v2[v5]:= v6 @kind object;
  #L2154a8.  v5:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L2154ac.  call temp:= `toString`(v5) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L2154b2.  v5:= temp @kind object;
  #L2154b4.  v2[v4]:= v5 @kind object;
  #L2154b8.  v4:= v8.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L2154bc.  call temp:= `toString`(v4) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L2154c2.  v4:= temp @kind object;
  #L2154c4.  v2[v3]:= v4 @kind object;
  #L2154c8.  v3:= "Slider value(%s) must be greater or equal to valueFrom(%s), and lower or equal to valueTo(%s)" @kind object;
  #L2154cc.  call temp:= `format`(v3, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2154d2.  v2:= temp @kind object;
  #L2154d4.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2154da.  throw v0;
  #L2154dc.  return @kind void;
}
procedure `boolean` `valueLandsOnTick`(`com.google.android.material.slider.BaseSlider` v6 @kind this, `float` v7 @name `value`) @signature `Lcom/google/android/material/slider/BaseSlider;.valueLandsOnTick:(F)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L212dd4.  v0:= new `java.math.BigDecimal`;
  #L212dd8.  call temp:= `toString`(v7) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L212dde.  v1:= temp @kind object;
  #L212de0.  call `<init>`(v0, v1) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L212de6.  v1:= new `java.math.BigDecimal`;
  #L212dea.  v2:= v6.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L212dee.  call temp:= `toString`(v2) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L212df4.  v2:= temp @kind object;
  #L212df6.  call `<init>`(v1, v2) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L212dfc.  call temp:= `subtract`(v0, v1) @signature `Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @kind virtual;
  #L212e02.  v0:= temp @kind object;
  #L212e04.  v1:= new `java.math.BigDecimal`;
  #L212e08.  v2:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L212e0c.  call temp:= `toString`(v2) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L212e12.  v2:= temp @kind object;
  #L212e14.  call `<init>`(v1, v2) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L212e1a.  v2:= `@@java.math.MathContext.DECIMAL64` @type ^`java.math.MathContext` @kind object;
  #L212e1e.  call temp:= `divide`(v0, v1, v2) @signature `Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;` @kind virtual;
  #L212e24.  v0:= temp @kind object;
  #L212e26.  call temp:= `doubleValue`(v0) @signature `Ljava/math/BigDecimal;.doubleValue:()D` @kind virtual;
  #L212e2c.  v0:= temp @kind wide;
  #L212e2e.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L212e34.  v2:= temp @kind wide;
  #L212e36.  v2:= (`double`) v2 @kind l2d;
  #L212e38.  v2:= v2 - v0 @kind double;
  #L212e3a.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L212e40.  v2:= temp @kind wide;
  #L212e42.  v4:= 1.0E-4D;
  #L212e4c.  v2:= dcmpg(v2, v4);
  #L212e50.  if v2 >= 0 then goto L212e58;
  #L212e54.  v2:= 1I;
  #L212e56.  goto L212e5a;
  #L212e58.  v2:= 0I;
  #L212e5a.  return v2;
}
procedure `float` `valueToX`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `float` v3 @name `value`) @signature `Lcom/google/android/material/slider/BaseSlider;.valueToX:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L213228.  call temp:= `normalizeValue`(v2, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L21322e.  v0:= temp;
  #L213230.  v1:= v2.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L213234.  v1:= (`float`) v1 @kind i2f;
  #L213236.  v0:= v0 * v1 @kind float;
  #L213238.  v1:= v2.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L21323c.  v1:= (`float`) v1 @kind i2f;
  #L21323e.  v0:= v0 + v1 @kind float;
  #L213240.  return v0;
}
procedure `void` `warnAboutFloatingPointError`(`com.google.android.material.slider.BaseSlider` v8 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.warnAboutFloatingPointError:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2154f0.  v0:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L2154f4.  v1:= 0I;
  #L2154f6.  v1:= fcmpl(v0, v1);
  #L2154fa.  if v1 != 0 then goto L215500;
  #L2154fe.  return @kind void;
  #L215500.  v1:= (`int`) v0 @kind f2i;
  #L215502.  v1:= (`float`) v1 @kind i2f;
  #L215504.  v1:= fcmpl(v1, v0);
  #L215508.  v2:= 1I;
  #L21550a.  v3:= 0I;
  #L21550c.  v4:= 2I;
  #L21550e.  v5:= "Floating point value used for %s(%s). Using floats can have rounding errors which may result in incorrect values. Instead, consider using integers with a custom LabelFormatter to display the  value correctly." @kind object;
  #L215512.  if v1 == 0 then goto L215540;
  #L215516.  v1:= `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` @kind object;
  #L21551a.  v6:= new `java.lang.Object`[v4];
  #L21551e.  v7:= "stepSize" @kind object;
  #L215522.  v6[v3]:= v7 @kind object;
  #L215526.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L21552c.  v0:= temp @kind object;
  #L21552e.  v6[v2]:= v0 @kind object;
  #L215532.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L215538.  v0:= temp @kind object;
  #L21553a.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L215540.  v0:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L215544.  v1:= (`int`) v0 @kind f2i;
  #L215546.  v1:= (`float`) v1 @kind i2f;
  #L215548.  v1:= fcmpl(v1, v0);
  #L21554c.  if v1 == 0 then goto L21557a;
  #L215550.  v1:= `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` @kind object;
  #L215554.  v6:= new `java.lang.Object`[v4];
  #L215558.  v7:= "valueFrom" @kind object;
  #L21555c.  v6[v3]:= v7 @kind object;
  #L215560.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L215566.  v0:= temp @kind object;
  #L215568.  v6[v2]:= v0 @kind object;
  #L21556c.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L215572.  v0:= temp @kind object;
  #L215574.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L21557a.  v0:= v8.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L21557e.  v1:= (`int`) v0 @kind f2i;
  #L215580.  v1:= (`float`) v1 @kind i2f;
  #L215582.  v1:= fcmpl(v1, v0);
  #L215586.  if v1 == 0 then goto L2155b4;
  #L21558a.  v1:= `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` @kind object;
  #L21558e.  v4:= new `java.lang.Object`[v4];
  #L215592.  v6:= "valueTo" @kind object;
  #L215596.  v4[v3]:= v6 @kind object;
  #L21559a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2155a0.  v0:= temp @kind object;
  #L2155a2.  v4[v2]:= v0 @kind object;
  #L2155a6.  call temp:= `format`(v5, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2155ac.  v0:= temp @kind object;
  #L2155ae.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2155b4.  return @kind void;
}
procedure `void` `addOnChangeListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnChangeListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.addOnChangeListener:(Lcom/google/android/material/slider/BaseOnChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213940.  v0:= v1.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L213944.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21394a.  return @kind void;
}
procedure `void` `addOnSliderTouchListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnSliderTouchListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.addOnSliderTouchListener:(Lcom/google/android/material/slider/BaseOnSliderTouchListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21395c.  v0:= v1.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L213960.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L213966.  return @kind void;
}
procedure `void` `clearOnChangeListeners`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.clearOnChangeListeners:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213998.  v0:= v1.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L21399c.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2139a2.  return @kind void;
}
procedure `void` `clearOnSliderTouchListeners`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.clearOnSliderTouchListeners:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2139b4.  v0:= v1.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L2139b8.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2139be.  return @kind void;
}
procedure `boolean` `dispatchHoverEvent`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.view.MotionEvent` v2 @kind object @name `event`) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21269c.  v0:= v1.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L2126a0.  call temp:= `dispatchHoverEvent`(v0, v2) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L2126a6.  v0:= temp;
  #L2126a8.  if v0 != 0 then goto L2126be;
  #L2126ac.  call temp:= `dispatchHoverEvent`(v1, v2) @signature `Landroid/view/View;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L2126b2.  v0:= temp;
  #L2126b4.  if v0 == 0 then goto L2126ba;
  #L2126b8.  goto L2126be;
  #L2126ba.  v0:= 0I;
  #L2126bc.  goto L2126c0;
  #L2126be.  v0:= 1I;
  #L2126c0.  return v0;
}
procedure `boolean` `dispatchKeyEvent`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.view.KeyEvent` v2 @kind object @name `event`) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchKeyEvent:(Landroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2126d4.  call temp:= `dispatchKeyEvent`(v1, v2) @signature `Landroid/view/View;.dispatchKeyEvent:(Landroid/view/KeyEvent;)Z` @kind super;
  #L2126da.  v0:= temp;
  #L2126dc.  return v0;
}
procedure `void` `drawableStateChanged`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.drawableStateChanged:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L213db0.  call `drawableStateChanged`(v3) @signature `Landroid/view/View;.drawableStateChanged:()V` @kind super;
  #L213db6.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L213dba.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L213dbe.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L213dc4.  v1:= temp;
  #L213dc6.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L213dcc.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L213dd0.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L213dd4.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L213dda.  v1:= temp;
  #L213ddc.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L213de2.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L213de6.  v1:= v3.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L213dea.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L213df0.  v1:= temp;
  #L213df2.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L213df8.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L213dfc.  v1:= v3.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L213e00.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L213e06.  v1:= temp;
  #L213e08.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L213e0e.  v0:= v3.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L213e12.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L213e18.  v0:= temp @kind object;
  #L213e1a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213e20.  v1:= temp;
  #L213e22.  if v1 == 0 then goto L213e4e;
  #L213e26.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213e2c.  v1:= temp @kind object;
  #L213e2e.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L213e32.  call temp:= `isStateful`(v1) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.isStateful:()Z` @kind virtual;
  #L213e38.  v2:= temp;
  #L213e3a.  if v2 == 0 then goto L213e4c;
  #L213e3e.  call temp:= `getDrawableState`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getDrawableState:()[I` @kind virtual;
  #L213e44.  v2:= temp @kind object;
  #L213e46.  call temp:= `setState`(v1, v2) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setState:([I)Z` @kind virtual;
  #L213e4c.  goto L213e1a;
  #L213e4e.  v0:= v3.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L213e52.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isStateful:()Z` @kind virtual;
  #L213e58.  v0:= temp;
  #L213e5a.  if v0 == 0 then goto L213e70;
  #L213e5e.  v0:= v3.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L213e62.  call temp:= `getDrawableState`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getDrawableState:()[I` @kind virtual;
  #L213e68.  v1:= temp @kind object;
  #L213e6a.  call temp:= `setState`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setState:([I)Z` @kind virtual;
  #L213e70.  v0:= v3.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L213e74.  v1:= v3.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L213e78.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L213e7e.  v1:= temp;
  #L213e80.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L213e86.  v0:= v3.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L213e8a.  v1:= 63I;
  #L213e8e.  call `setAlpha`(v0, v1) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L213e94.  return @kind void;
}
procedure `void` `forceDrawCompatHalo`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `boolean` v1 @name `force`) @signature `Lcom/google/android/material/slider/BaseSlider;.forceDrawCompatHalo:(Z)V` @AccessFlag  {
    temp;

  #L214080.  v0.`com.google.android.material.slider.BaseSlider.forceDrawCompatHalo` @type ^`boolean` := v1 @kind boolean;
  #L214084.  return @kind void;
}
procedure `java.lang.CharSequence` `getAccessibilityClassName`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getAccessibilityClassName:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213564.  v0:= constclass @type ^`android.widget.SeekBar` @kind object;
  #L213568.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L21356e.  v0:= temp @kind object;
  #L213570.  return v0 @kind object;
}
procedure `int` `getAccessibilityFocusedVirtualViewId`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getAccessibilityFocusedVirtualViewId:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L213334.  v0:= v1.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L213338.  call temp:= `getAccessibilityFocusedVirtualViewId`(v0) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;.getAccessibilityFocusedVirtualViewId:()I` @kind virtual;
  #L21333e.  v0:= temp;
  #L213340.  return v0;
}
procedure `int` `getActiveThumbIndex`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveThumbIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213354.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L213358.  return v0;
}
procedure `int` `getFocusedThumbIndex`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getFocusedThumbIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213398.  v0:= v1.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L21339c.  return v0;
}
procedure `int` `getHaloRadius`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getHaloRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2133b0.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L2133b4.  return v0;
}
procedure `android.content.res.ColorStateList` `getHaloTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getHaloTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2124f4.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L2124f8.  return v0 @kind object;
}
procedure `int` `getLabelBehavior`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getLabelBehavior:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2133c8.  v0:= v1.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L2133cc.  return v0;
}
procedure `float` `getMinSeparation`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getMinSeparation:()F` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2130d4.  v0:= 0I;
  #L2130d6.  return v0;
}
procedure `float` `getStepSize`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getStepSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2130e8.  v0:= v1.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L2130ec.  return v0;
}
procedure `float` `getThumbElevation`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213100.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L213104.  call temp:= `getElevation`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L21310a.  v0:= temp;
  #L21310c.  return v0;
}
procedure `int` `getThumbRadius`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2133e0.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L2133e4.  return v0;
}
procedure `android.content.res.ColorStateList` `getThumbStrokeColor`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21250c.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L212510.  call temp:= `getStrokeColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L212516.  v0:= temp @kind object;
  #L212518.  return v0 @kind object;
}
procedure `float` `getThumbStrokeWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213120.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L213124.  call temp:= `getStrokeWidth`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeWidth:()F` @kind virtual;
  #L21312a.  v0:= temp;
  #L21312c.  return v0;
}
procedure `android.content.res.ColorStateList` `getThumbTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21252c.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L212530.  call temp:= `getFillColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L212536.  v0:= temp @kind object;
  #L212538.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getTickActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTickActiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21254c.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L212550.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getTickInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTickInactiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L212564.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L212568.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getTickTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTickTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21257c.  v0:= v2.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L212580.  v1:= v2.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L212584.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21258a.  v0:= temp;
  #L21258c.  if v0 == 0 then goto L212596;
  #L212590.  v0:= v2.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L212594.  return v0 @kind object;
  #L212596.  v0:= new `java.lang.IllegalStateException`;
  #L21259a.  v1:= "The inactive and active ticks are different colors. Use the getTickColorInactive() and getTickColorActive() methods instead." @kind object;
  #L21259e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2125a4.  throw v0;
}
procedure `android.content.res.ColorStateList` `getTrackActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackActiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2125b8.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L2125bc.  return v0 @kind object;
}
procedure `int` `getTrackHeight`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2133f8.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L2133fc.  return v0;
}
procedure `android.content.res.ColorStateList` `getTrackInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackInactiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2125d0.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L2125d4.  return v0 @kind object;
}
procedure `int` `getTrackSidePadding`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackSidePadding:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213410.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L213414.  return v0;
}
procedure `android.content.res.ColorStateList` `getTrackTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2125e8.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L2125ec.  v1:= v2.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L2125f0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2125f6.  v0:= temp;
  #L2125f8.  if v0 == 0 then goto L212602;
  #L2125fc.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L212600.  return v0 @kind object;
  #L212602.  v0:= new `java.lang.IllegalStateException`;
  #L212606.  v1:= "The inactive and active parts of the track are different colors. Use the getInactiveTrackColor() and getActiveTrackColor() methods instead." @kind object;
  #L21260a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L212610.  throw v0;
}
procedure `int` `getTrackWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213428.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L21342c.  return v0;
}
procedure `float` `getValueFrom`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueFrom:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213140.  v0:= v1.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L213144.  return v0;
}
procedure `float` `getValueTo`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueTo:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2131d8.  v0:= v1.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L2131dc.  return v0;
}
procedure `java.util.List` `getValues`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2136c0.  v0:= new `java.util.ArrayList`;
  #L2136c4.  v1:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L2136c8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2136ce.  return v0 @kind object;
}
procedure `boolean` `hasLabelFormatter`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.hasLabelFormatter:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2126f0.  v0:= v1.`com.google.android.material.slider.BaseSlider.formatter` @type ^`com.google.android.material.slider.LabelFormatter` @kind object;
  #L2126f4.  if v0 == 0 then goto L2126fc;
  #L2126f8.  v0:= 1I;
  #L2126fa.  goto L2126fe;
  #L2126fc.  v0:= 0I;
  #L2126fe.  return v0;
}
procedure `boolean` `isRtl`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L212774.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/view/ViewCompat;.getLayoutDirection:(Landroid/view/View;)I` @kind static;
  #L21277a.  v0:= temp;
  #L21277c.  v1:= 1I;
  #L21277e.  if v0 != v1 then goto L212784;
  #L212782.  goto L212786;
  #L212784.  v1:= 0I;
  #L212786.  return v1;
}
procedure `boolean` `isTickVisible`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.isTickVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L212798.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` @kind boolean;
  #L21279c.  return v0;
}
procedure `void` `onAttachedToWindow`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onAttachedToWindow:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2143a0.  call `onAttachedToWindow`(v2) @signature `Landroid/view/View;.onAttachedToWindow:()V` @kind super;
  #L2143a6.  v0:= v2.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L2143aa.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2143b0.  v0:= temp @kind object;
  #L2143b2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2143b8.  v1:= temp;
  #L2143ba.  if v1 == 0 then goto L2143d2;
  #L2143be.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2143c4.  v1:= temp @kind object;
  #L2143c6.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L2143ca.  call `attachLabelToContentView`(v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.attachLabelToContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L2143d0.  goto L2143b2;
  #L2143d2.  return @kind void;
}
procedure `void` `onDetachedFromWindow`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onDetachedFromWindow:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2143e4.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L2143e8.  if v0 == 0 then goto L2143f2;
  #L2143ec.  call temp:= `removeCallbacks`(v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.removeCallbacks:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L2143f2.  v0:= 0I;
  #L2143f4.  v2.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v0 @kind boolean;
  #L2143f8.  v0:= v2.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L2143fc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L214402.  v0:= temp @kind object;
  #L214404.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L21440a.  v1:= temp;
  #L21440c.  if v1 == 0 then goto L214424;
  #L214410.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L214416.  v1:= temp @kind object;
  #L214418.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L21441c.  call `detachLabelFromContentView`(v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.detachLabelFromContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L214422.  goto L214404;
  #L214424.  call `onDetachedFromWindow`(v2) @signature `Landroid/view/View;.onDetachedFromWindow:()V` @kind super;
  #L21442a.  return @kind void;
}
procedure `void` `onDraw`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `android.graphics.Canvas` v4 @kind object @name `canvas`) @signature `Lcom/google/android/material/slider/BaseSlider;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L21443c.  v0:= v3.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` @kind boolean;
  #L214440.  if v0 == 0 then goto L214450;
  #L214444.  call `validateConfigurationIfDirty`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.validateConfigurationIfDirty:()V` @kind direct;
  #L21444a.  call `maybeCalculateTicksCoordinates`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeCalculateTicksCoordinates:()V` @kind direct;
  #L214450.  call `onDraw`(v3, v4) @signature `Landroid/view/View;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L214456.  call temp:= `calculateTop`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L21445c.  v0:= temp;
  #L21445e.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L214462.  call `drawInactiveTrack`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.drawInactiveTrack:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L214468.  call temp:= `getValues`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L21446e.  v1:= temp @kind object;
  #L214470.  call temp:= `max`(v1) @signature `Ljava/util/Collections;.max:(Ljava/util/Collection;)Ljava/lang/Object;` @kind static;
  #L214476.  v1:= temp @kind object;
  #L214478.  v1:= (`java.lang.Float`) v1 @kind object;
  #L21447c.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L214482.  v1:= temp;
  #L214484.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L214488.  v1:= fcmpl(v1, v2);
  #L21448c.  if v1 <= 0 then goto L21449a;
  #L214490.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L214494.  call `drawActiveTrack`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.drawActiveTrack:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L21449a.  call `maybeDrawTicks`(v3, v4) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawTicks:(Landroid/graphics/Canvas;)V` @kind direct;
  #L2144a0.  v1:= v3.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` @kind boolean;
  #L2144a4.  if v1 != 0 then goto L2144b4;
  #L2144a8.  call temp:= `isFocused`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.isFocused:()Z` @kind virtual;
  #L2144ae.  v1:= temp;
  #L2144b0.  if v1 == 0 then goto L2144da;
  #L2144b4.  call temp:= `isEnabled`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.isEnabled:()Z` @kind virtual;
  #L2144ba.  v1:= temp;
  #L2144bc.  if v1 == 0 then goto L2144da;
  #L2144c0.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L2144c4.  call `maybeDrawHalo`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawHalo:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L2144ca.  v1:= v3.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L2144ce.  v2:= -1I;
  #L2144d0.  if v1 == v2 then goto L2144da;
  #L2144d4.  call `ensureLabelsAdded`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsAdded:()V` @kind direct;
  #L2144da.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L2144de.  call `drawThumbs`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbs:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L2144e4.  return @kind void;
}
procedure `void` `onFocusChanged`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `boolean` v3 @name `gainFocus`, `int` v4 @name `direction`, `android.graphics.Rect` v5 @kind object @name `previouslyFocusedRect`) @signature `Lcom/google/android/material/slider/BaseSlider;.onFocusChanged:(ZILandroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2144f8.  call `onFocusChanged`(v2, v3, v4, v5) @signature `Landroid/view/View;.onFocusChanged:(ZILandroid/graphics/Rect;)V` @kind super;
  #L2144fe.  if v3 != 0 then goto L21451e;
  #L214502.  v0:= -1I;
  #L214504.  v2.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v0;
  #L214508.  call `ensureLabelsRemoved`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @kind direct;
  #L21450e.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L214512.  v1:= v2.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L214516.  call temp:= `clearKeyboardFocusForVirtualView`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;.clearKeyboardFocusForVirtualView:(I)Z` @kind virtual;
  #L21451c.  goto L214532;
  #L21451e.  call `focusThumbOnFocusGained`(v2, v4) @signature `Lcom/google/android/material/slider/BaseSlider;.focusThumbOnFocusGained:(I)V` @kind direct;
  #L214524.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L214528.  v1:= v2.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L21452c.  call temp:= `requestKeyboardFocusForVirtualView`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;.requestKeyboardFocusForVirtualView:(I)Z` @kind virtual;
  #L214532.  return @kind void;
}
procedure `boolean` `onKeyDown`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `int` v6 @name `keyCode`, `android.view.KeyEvent` v7 @kind object @name `event`) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L212850.  call temp:= `isEnabled`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.isEnabled:()Z` @kind virtual;
  #L212856.  v0:= temp;
  #L212858.  if v0 != 0 then goto L212866;
  #L21285c.  call temp:= `onKeyDown`(v5, v6, v7) @signature `Landroid/view/View;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L212862.  v0:= temp;
  #L212864.  return v0;
  #L212866.  v0:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L21286a.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L212870.  v0:= temp;
  #L212872.  v1:= 0I;
  #L212874.  v2:= 1I;
  #L212876.  if v0 != v2 then goto L21287e;
  #L21287a.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L21287e.  v0:= v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L212882.  v3:= -1I;
  #L212884.  if v0 != v3 then goto L2128a8;
  #L212888.  call temp:= `onKeyDownNoActiveThumb`(v5, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyDownNoActiveThumb:(ILandroid/view/KeyEvent;)Ljava/lang/Boolean;` @kind direct;
  #L21288e.  v0:= temp @kind object;
  #L212890.  if v0 == 0 then goto L21289e;
  #L212894.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L21289a.  v1:= temp;
  #L21289c.  goto L2128a6;
  #L21289e.  call temp:= `onKeyDown`(v5, v6, v7) @signature `Landroid/view/View;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L2128a4.  v1:= temp;
  #L2128a6.  return v1;
  #L2128a8.  v0:= v5.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` @kind boolean;
  #L2128ac.  call temp:= `isLongPress`(v7) @signature `Landroid/view/KeyEvent;.isLongPress:()Z` @kind virtual;
  #L2128b2.  v4:= temp;
  #L2128b4.  v0:= v0 ^| v4 @kind int;
  #L2128b6.  v5.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` := v0 @kind boolean;
  #L2128ba.  call temp:= `calculateIncrementForKey`(v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateIncrementForKey:(I)Ljava/lang/Float;` @kind direct;
  #L2128c0.  v0:= temp @kind object;
  #L2128c2.  if v0 == 0 then goto L212906;
  #L2128c6.  v1:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L2128ca.  v3:= v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L2128ce.  call temp:= `get`(v1, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2128d4.  v1:= temp @kind object;
  #L2128d6.  v1:= (`java.lang.Float`) v1 @kind object;
  #L2128da.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2128e0.  v1:= temp;
  #L2128e2.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2128e8.  v3:= temp;
  #L2128ea.  v1:= v1 + v3 @kind float;
  #L2128ec.  call temp:= `snapActiveThumbToValue`(v5, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.snapActiveThumbToValue:(F)Z` @kind direct;
  #L2128f2.  v1:= temp;
  #L2128f4.  if v1 == 0 then goto L212904;
  #L2128f8.  call `updateHaloHotspot`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L2128fe.  call `postInvalidate`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L212904.  return v2;
  #L212906.  v4:= 23I;
  #L21290a.  if v6 == v4 then goto L212956;
  #L21290e.  v4:= 61I;
  #L212912.  if v6 == v4 then goto L212928;
  #L212916.  v1:= 66I;
  #L21291a.  if v6 == v1 then goto L212956;
  #L21291e.  call temp:= `onKeyDown`(v5, v6, v7) @signature `Landroid/view/View;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L212924.  v1:= temp;
  #L212926.  return v1;
  #L212928.  call temp:= `hasNoModifiers`(v7) @signature `Landroid/view/KeyEvent;.hasNoModifiers:()Z` @kind virtual;
  #L21292e.  v4:= temp;
  #L212930.  if v4 == 0 then goto L21293e;
  #L212934.  call temp:= `moveFocus`(v5, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L21293a.  v1:= temp;
  #L21293c.  return v1;
  #L21293e.  call temp:= `isShiftPressed`(v7) @signature `Landroid/view/KeyEvent;.isShiftPressed:()Z` @kind virtual;
  #L212944.  v2:= temp;
  #L212946.  if v2 == 0 then goto L212954;
  #L21294a.  call temp:= `moveFocus`(v5, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L212950.  v1:= temp;
  #L212952.  return v1;
  #L212954.  return v1;
  #L212956.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v3;
  #L21295a.  call `ensureLabelsRemoved`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @kind direct;
  #L212960.  call `postInvalidate`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L212966.  return v2;
}
procedure `boolean` `onKeyUp`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 @name `keyCode`, `android.view.KeyEvent` v3 @kind object @name `event`) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyUp:(ILandroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L212978.  v0:= 0I;
  #L21297a.  v1.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` := v0 @kind boolean;
  #L21297e.  call temp:= `onKeyUp`(v1, v2, v3) @signature `Landroid/view/View;.onKeyUp:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L212984.  v0:= temp;
  #L212986.  return v0;
}
procedure `void` `onMeasure`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int` v5 @name `widthMeasureSpec`, `int` v6 @name `heightMeasureSpec`) @signature `Lcom/google/android/material/slider/BaseSlider;.onMeasure:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L214544.  v0:= v4.`com.google.android.material.slider.BaseSlider.widgetHeight` @type ^`int`;
  #L214548.  v1:= v4.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L21454c.  v2:= 0I;
  #L21454e.  v3:= 1I;
  #L214550.  if v1 != v3 then goto L21456e;
  #L214554.  v1:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L214558.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L21455e.  v1:= temp @kind object;
  #L214560.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L214564.  call temp:= `getIntrinsicHeight`(v1) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L21456a.  v2:= temp;
  #L21456c.  goto L214570;
  #L21456e.  
  #L214570.  v0:= v0 + v2 @kind int;
  #L214572.  v1:= 2.0F;
  #L214576.  call temp:= `makeMeasureSpec`(v0, v1) @signature `Landroid/view/View$MeasureSpec;.makeMeasureSpec:(II)I` @kind static;
  #L21457c.  v0:= temp;
  #L21457e.  call `onMeasure`(v4, v5, v0) @signature `Landroid/view/View;.onMeasure:(II)V` @kind super;
  #L214584.  return @kind void;
}
procedure `void` `onRestoreInstanceState`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.os.Parcelable` v3 @kind object @name `state`) @signature `Lcom/google/android/material/slider/BaseSlider;.onRestoreInstanceState:(Landroid/os/Parcelable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L214598.  v0:= v3 @kind object;
  #L21459a.  v0:= (`com.google.android.material.slider.BaseSlider$SliderState`) v0 @kind object;
  #L21459e.  call temp:= `getSuperState`(v0) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.getSuperState:()Landroid/os/Parcelable;` @kind virtual;
  #L2145a4.  v1:= temp @kind object;
  #L2145a6.  call `onRestoreInstanceState`(v2, v1) @signature `Landroid/view/View;.onRestoreInstanceState:(Landroid/os/Parcelable;)V` @kind super;
  #L2145ac.  v1:= v0.`com.google.android.material.slider.BaseSlider$SliderState.valueFrom` @type ^`float`;
  #L2145b0.  v2.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float` := v1;
  #L2145b4.  v1:= v0.`com.google.android.material.slider.BaseSlider$SliderState.valueTo` @type ^`float`;
  #L2145b8.  v2.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float` := v1;
  #L2145bc.  v1:= v0.`com.google.android.material.slider.BaseSlider$SliderState.values` @type ^`java.util.ArrayList` @kind object;
  #L2145c0.  call `setValuesInternal`(v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @kind direct;
  #L2145c6.  v1:= v0.`com.google.android.material.slider.BaseSlider$SliderState.stepSize` @type ^`float`;
  #L2145ca.  v2.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v1;
  #L2145ce.  v1:= v0.`com.google.android.material.slider.BaseSlider$SliderState.hasFocus` @type ^`boolean` @kind boolean;
  #L2145d2.  if v1 == 0 then goto L2145dc;
  #L2145d6.  call temp:= `requestFocus`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.requestFocus:()Z` @kind virtual;
  #L2145dc.  call `dispatchOnChangedProgramatically`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedProgramatically:()V` @kind direct;
  #L2145e2.  return @kind void;
}
procedure `android.os.Parcelable` `onSaveInstanceState`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onSaveInstanceState:()Landroid/os/Parcelable;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L212624.  call temp:= `onSaveInstanceState`(v4) @signature `Landroid/view/View;.onSaveInstanceState:()Landroid/os/Parcelable;` @kind super;
  #L21262a.  v0:= temp @kind object;
  #L21262c.  v1:= new `com.google.android.material.slider.BaseSlider$SliderState`;
  #L212630.  call `<init>`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.<init>:(Landroid/os/Parcelable;)V` @kind direct;
  #L212636.  v2:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L21263a.  v1.`com.google.android.material.slider.BaseSlider$SliderState.valueFrom` @type ^`float` := v2;
  #L21263e.  v2:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L212642.  v1.`com.google.android.material.slider.BaseSlider$SliderState.valueTo` @type ^`float` := v2;
  #L212646.  v2:= new `java.util.ArrayList`;
  #L21264a.  v3:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L21264e.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L212654.  v1.`com.google.android.material.slider.BaseSlider$SliderState.values` @type ^`java.util.ArrayList` := v2 @kind object;
  #L212658.  v2:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L21265c.  v1.`com.google.android.material.slider.BaseSlider$SliderState.stepSize` @type ^`float` := v2;
  #L212660.  call temp:= `hasFocus`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.hasFocus:()Z` @kind virtual;
  #L212666.  v2:= temp;
  #L212668.  v1.`com.google.android.material.slider.BaseSlider$SliderState.hasFocus` @type ^`boolean` := v2 @kind boolean;
  #L21266c.  return v1 @kind object;
}
procedure `void` `onSizeChanged`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `int` v1 @name `w`, `int` v2 @name `h`, `int` v3 @name `oldw`, `int` v4 @name `oldh`) @signature `Lcom/google/android/material/slider/BaseSlider;.onSizeChanged:(IIII)V` @AccessFlag PROTECTED {
    temp;

  #L2145f4.  call `updateTrackWidth`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.updateTrackWidth:(I)V` @kind direct;
  #L2145fa.  call `updateHaloHotspot`(v0) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L214600.  return @kind void;
}
procedure `boolean` `onTouchEvent`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `android.view.MotionEvent` v6 @kind object @name `event`) @signature `Lcom/google/android/material/slider/BaseSlider;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L212998.  call temp:= `isEnabled`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.isEnabled:()Z` @kind virtual;
  #L21299e.  v0:= temp;
  #L2129a0.  v1:= 0I;
  #L2129a2.  if v0 != 0 then goto L2129a8;
  #L2129a6.  return v1;
  #L2129a8.  call temp:= `getX`(v6) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L2129ae.  v0:= temp;
  #L2129b0.  v2:= v5.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L2129b4.  v2:= (`float`) v2 @kind i2f;
  #L2129b6.  v2:= v0 - v2 @kind float;
  #L2129ba.  v3:= v5.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L2129be.  v3:= (`float`) v3 @kind i2f;
  #L2129c0.  v2:= v2 / v3 @kind float;
  #L2129c2.  v5.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float` := v2;
  #L2129c6.  v3:= 0I;
  #L2129c8.  call temp:= `max`(v3, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2129ce.  v2:= temp;
  #L2129d0.  v5.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float` := v2;
  #L2129d4.  v3:= 1.0F;
  #L2129d8.  call temp:= `min`(v3, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2129de.  v2:= temp;
  #L2129e0.  v5.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float` := v2;
  #L2129e4.  call temp:= `getActionMasked`(v6) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L2129ea.  v2:= temp;
  #L2129ec.  v3:= 1I;
  #L2129ee.  if v2 == 0 then goto L212b1c;
  #L2129f2.  if v2 == v3 then goto L212a72;
  #L2129f6.  v4:= 2I;
  #L2129f8.  if v2 == v4 then goto L212a00;
  #L2129fc.  goto L212b6e;
  #L212a00.  v2:= v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` @kind boolean;
  #L212a04.  if v2 != 0 then goto L212a48;
  #L212a08.  call temp:= `isInVerticalScrollingContainer`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.isInVerticalScrollingContainer:()Z` @kind direct;
  #L212a0e.  v2:= temp;
  #L212a10.  if v2 == 0 then goto L212a34;
  #L212a14.  v2:= v5.`com.google.android.material.slider.BaseSlider.touchDownX` @type ^`float`;
  #L212a18.  v2:= v0 - v2 @kind float;
  #L212a1c.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L212a22.  v2:= temp;
  #L212a24.  v4:= v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L212a28.  v4:= (`float`) v4 @kind i2f;
  #L212a2a.  v2:= fcmpg(v2, v4);
  #L212a2e.  if v2 >= 0 then goto L212a34;
  #L212a32.  return v1;
  #L212a34.  call temp:= `getParent`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L212a3a.  v1:= temp @kind object;
  #L212a3c.  call `requestDisallowInterceptTouchEvent`(v1, v3) @signature `Landroid/view/ViewParent;.requestDisallowInterceptTouchEvent:(Z)V` @kind interface;
  #L212a42.  call `onStartTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @kind direct;
  #L212a48.  call temp:= `pickActiveThumb`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @kind virtual;
  #L212a4e.  v1:= temp;
  #L212a50.  if v1 != 0 then goto L212a58;
  #L212a54.  goto L212b6e;
  #L212a58.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v3 @kind boolean;
  #L212a5c.  call temp:= `snapTouchPosition`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @kind direct;
  #L212a62.  call `updateHaloHotspot`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L212a68.  call `invalidate`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidate:()V` @kind virtual;
  #L212a6e.  goto L212b6e;
  #L212a72.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v1 @kind boolean;
  #L212a76.  v1:= v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` @kind object;
  #L212a7a.  if v1 == 0 then goto L212af4;
  #L212a7e.  call temp:= `getActionMasked`(v1) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L212a84.  v1:= temp;
  #L212a86.  if v1 != 0 then goto L212af4;
  #L212a8a.  v1:= v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` @kind object;
  #L212a8e.  call temp:= `getX`(v1) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L212a94.  v1:= temp;
  #L212a96.  call temp:= `getX`(v6) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L212a9c.  v2:= temp;
  #L212a9e.  v1:= v1 - v2 @kind float;
  #L212aa0.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L212aa6.  v1:= temp;
  #L212aa8.  v2:= v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L212aac.  v2:= (`float`) v2 @kind i2f;
  #L212aae.  v1:= fcmpg(v1, v2);
  #L212ab2.  if v1 > 0 then goto L212af4;
  #L212ab6.  v1:= v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` @kind object;
  #L212aba.  call temp:= `getY`(v1) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L212ac0.  v1:= temp;
  #L212ac2.  call temp:= `getY`(v6) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L212ac8.  v2:= temp;
  #L212aca.  v1:= v1 - v2 @kind float;
  #L212acc.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L212ad2.  v1:= temp;
  #L212ad4.  v2:= v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L212ad8.  v2:= (`float`) v2 @kind i2f;
  #L212ada.  v1:= fcmpg(v1, v2);
  #L212ade.  if v1 > 0 then goto L212af4;
  #L212ae2.  call temp:= `pickActiveThumb`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @kind virtual;
  #L212ae8.  v1:= temp;
  #L212aea.  if v1 == 0 then goto L212af4;
  #L212aee.  call `onStartTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @kind direct;
  #L212af4.  v1:= v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L212af8.  v2:= -1I;
  #L212afa.  if v1 == v2 then goto L212b0e;
  #L212afe.  call temp:= `snapTouchPosition`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @kind direct;
  #L212b04.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v2;
  #L212b08.  call `onStopTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStopTrackingTouch:()V` @kind direct;
  #L212b0e.  call `ensureLabelsRemoved`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @kind direct;
  #L212b14.  call `invalidate`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidate:()V` @kind virtual;
  #L212b1a.  goto L212b6e;
  #L212b1c.  v5.`com.google.android.material.slider.BaseSlider.touchDownX` @type ^`float` := v0;
  #L212b20.  call temp:= `isInVerticalScrollingContainer`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.isInVerticalScrollingContainer:()Z` @kind direct;
  #L212b26.  v1:= temp;
  #L212b28.  if v1 == 0 then goto L212b2e;
  #L212b2c.  goto L212b6e;
  #L212b2e.  call temp:= `getParent`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L212b34.  v1:= temp @kind object;
  #L212b36.  call `requestDisallowInterceptTouchEvent`(v1, v3) @signature `Landroid/view/ViewParent;.requestDisallowInterceptTouchEvent:(Z)V` @kind interface;
  #L212b3c.  call temp:= `pickActiveThumb`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @kind virtual;
  #L212b42.  v1:= temp;
  #L212b44.  if v1 != 0 then goto L212b4a;
  #L212b48.  goto L212b6e;
  #L212b4a.  call temp:= `requestFocus`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.requestFocus:()Z` @kind virtual;
  #L212b50.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v3 @kind boolean;
  #L212b54.  call temp:= `snapTouchPosition`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @kind direct;
  #L212b5a.  call `updateHaloHotspot`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L212b60.  call `invalidate`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidate:()V` @kind virtual;
  #L212b66.  call `onStartTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @kind direct;
  #L212b6c.  
  #L212b6e.  v1:= v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` @kind boolean;
  #L212b72.  call `setPressed`(v5, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setPressed:(Z)V` @kind virtual;
  #L212b78.  call temp:= `obtain`(v6) @signature `Landroid/view/MotionEvent;.obtain:(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;` @kind static;
  #L212b7e.  v1:= temp @kind object;
  #L212b80.  v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` := v1 @kind object;
  #L212b84.  return v3;
}
procedure `boolean` `pickActiveThumb`(`com.google.android.material.slider.BaseSlider` v12 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L212b98.  v0:= v12.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L212b9c.  v1:= -1I;
  #L212b9e.  v2:= 1I;
  #L212ba0.  if v0 == v1 then goto L212ba6;
  #L212ba4.  return v2;
  #L212ba6.  call temp:= `getValueOfTouchPositionAbsolute`(v12) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPositionAbsolute:()F` @kind direct;
  #L212bac.  v0:= temp;
  #L212bae.  call temp:= `valueToX`(v12, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.valueToX:(F)F` @kind direct;
  #L212bb4.  v3:= temp;
  #L212bb6.  v4:= 0I;
  #L212bb8.  v12.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v4;
  #L212bbc.  v5:= v12.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L212bc0.  call temp:= `get`(v5, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L212bc6.  v5:= temp @kind object;
  #L212bc8.  v5:= (`java.lang.Float`) v5 @kind object;
  #L212bcc.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L212bd2.  v5:= temp;
  #L212bd4.  v5:= v5 - v0 @kind float;
  #L212bd6.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L212bdc.  v5:= temp;
  #L212bde.  v6:= 1I;
  #L212be0.  v7:= v12.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L212be4.  call temp:= `size`(v7) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L212bea.  v7:= temp;
  #L212bec.  if v6 >= v7 then goto L212cbe;
  #L212bf0.  v7:= v12.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L212bf4.  call temp:= `get`(v7, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L212bfa.  v7:= temp @kind object;
  #L212bfc.  v7:= (`java.lang.Float`) v7 @kind object;
  #L212c00.  call temp:= `floatValue`(v7) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L212c06.  v7:= temp;
  #L212c08.  v7:= v7 - v0 @kind float;
  #L212c0a.  call temp:= `abs`(v7) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L212c10.  v7:= temp;
  #L212c12.  v8:= v12.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L212c16.  call temp:= `get`(v8, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L212c1c.  v8:= temp @kind object;
  #L212c1e.  v8:= (`java.lang.Float`) v8 @kind object;
  #L212c22.  call temp:= `floatValue`(v8) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L212c28.  v8:= temp;
  #L212c2a.  call temp:= `valueToX`(v12, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.valueToX:(F)F` @kind direct;
  #L212c30.  v8:= temp;
  #L212c32.  call temp:= `compare`(v7, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L212c38.  v9:= temp;
  #L212c3a.  if v9 <= v2 then goto L212c40;
  #L212c3e.  goto L212cbe;
  #L212c40.  call temp:= `isRtl`(v12) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L212c46.  v9:= temp;
  #L212c48.  v10:= 0I;
  #L212c4a.  if v9 == 0 then goto L212c5c;
  #L212c4e.  v9:= v8 - v3 @kind float;
  #L212c52.  v9:= fcmpl(v9, v10);
  #L212c56.  if v9 <= 0 then goto L212c6c;
  #L212c5a.  goto L212c68;
  #L212c5c.  v9:= v8 - v3 @kind float;
  #L212c60.  v9:= fcmpg(v9, v10);
  #L212c64.  if v9 >= 0 then goto L212c6c;
  #L212c68.  v9:= v2;
  #L212c6a.  goto L212c6e;
  #L212c6c.  v9:= v4;
  #L212c6e.  call temp:= `compare`(v7, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L212c74.  v10:= temp;
  #L212c76.  if v10 >= 0 then goto L212c82;
  #L212c7a.  v5:= v7;
  #L212c7c.  v12.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v6;
  #L212c80.  goto L212cb8;
  #L212c82.  call temp:= `compare`(v7, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L212c88.  v10:= temp;
  #L212c8a.  if v10 != 0 then goto L212cb8;
  #L212c8e.  v10:= v8 - v3 @kind float;
  #L212c92.  call temp:= `abs`(v10) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L212c98.  v10:= temp;
  #L212c9a.  v11:= v12.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L212c9e.  v11:= (`float`) v11 @kind i2f;
  #L212ca0.  v10:= fcmpg(v10, v11);
  #L212ca4.  if v10 >= 0 then goto L212cae;
  #L212ca8.  v12.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L212cac.  return v4;
  #L212cae.  if v9 == 0 then goto L212cb8;
  #L212cb2.  v5:= v7;
  #L212cb4.  v12.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v6;
  #L212cb8.  v6:= v6 + 1;
  #L212cbc.  goto L212be0;
  #L212cbe.  v6:= v12.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L212cc2.  if v6 == v1 then goto L212cc8;
  #L212cc6.  goto L212cca;
  #L212cc8.  v2:= v4;
  #L212cca.  return v2;
}
procedure `void` `removeOnChangeListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnChangeListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.removeOnChangeListener:(Lcom/google/android/material/slider/BaseOnChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214900.  v0:= v1.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L214904.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L21490a.  return @kind void;
}
procedure `void` `removeOnSliderTouchListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnSliderTouchListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.removeOnSliderTouchListener:(Lcom/google/android/material/slider/BaseOnSliderTouchListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21491c.  v0:= v1.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L214920.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L214926.  return @kind void;
}
procedure `void` `setActiveThumbIndex`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `int` v1 @name `index`) @signature `Lcom/google/android/material/slider/BaseSlider;.setActiveThumbIndex:(I)V` @AccessFlag PROTECTED {
    temp;

  #L214984.  v0.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L214988.  return @kind void;
}
procedure `void` `setEnabled`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `boolean` v3 @name `enabled`) @signature `Lcom/google/android/material/slider/BaseSlider;.setEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21499c.  call `setEnabled`(v2, v3) @signature `Landroid/view/View;.setEnabled:(Z)V` @kind super;
  #L2149a2.  if v3 == 0 then goto L2149aa;
  #L2149a6.  v0:= 0I;
  #L2149a8.  goto L2149ac;
  #L2149aa.  v0:= 2I;
  #L2149ac.  v1:= 0I;
  #L2149ae.  call `setLayerType`(v2, v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setLayerType:(ILandroid/graphics/Paint;)V` @kind virtual;
  #L2149b4.  return @kind void;
}
procedure `void` `setFocusedThumbIndex`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `int` v3 @name `index`) @signature `Lcom/google/android/material/slider/BaseSlider;.setFocusedThumbIndex:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2149c8.  if v3 < 0 then goto L2149f2;
  #L2149cc.  v0:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L2149d0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2149d6.  v0:= temp;
  #L2149d8.  if v3 >= v0 then goto L2149f2;
  #L2149dc.  v2.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v3;
  #L2149e0.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L2149e4.  call temp:= `requestKeyboardFocusForVirtualView`(v0, v3) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;.requestKeyboardFocusForVirtualView:(I)Z` @kind virtual;
  #L2149ea.  call `postInvalidate`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L2149f0.  return @kind void;
  #L2149f2.  v0:= new `java.lang.IllegalArgumentException`;
  #L2149f6.  v1:= "index out of range" @kind object;
  #L2149fa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L214a00.  throw v0;
}
procedure `void` `setHaloRadius`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 @name `radius`) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L214a14.  v0:= v3.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L214a18.  if v4 != v0 then goto L214a1e;
  #L214a1c.  return @kind void;
  #L214a1e.  v3.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int` := v4;
  #L214a22.  call temp:= `getBackground`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L214a28.  v0:= temp @kind object;
  #L214a2a.  call temp:= `shouldDrawCompatHalo`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L214a30.  v1:= temp;
  #L214a32.  if v1 != 0 then goto L214a50;
  #L214a36.  v1:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L214a3a.  if v1 == 0 then goto L214a50;
  #L214a3e.  v1:= v0 @kind object;
  #L214a40.  v1:= (`android.graphics.drawable.RippleDrawable`) v1 @kind object;
  #L214a44.  v2:= v3.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L214a48.  call `setRippleDrawableRadius`(v1, v2) @signature `Lcom/google/android/material/drawable/DrawableUtils;.setRippleDrawableRadius:(Landroid/graphics/drawable/RippleDrawable;I)V` @kind static;
  #L214a4e.  return @kind void;
  #L214a50.  call `postInvalidate`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L214a56.  return @kind void;
}
procedure `void` `setHaloRadiusResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 @name `radius`) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214a68.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L214a6e.  v0:= temp @kind object;
  #L214a70.  call temp:= `getDimensionPixelSize`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L214a76.  v0:= temp;
  #L214a78.  call `setHaloRadius`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadius:(I)V` @kind virtual;
  #L214a7e.  return @kind void;
}
procedure `void` `setHaloTintList`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `android.content.res.ColorStateList` v4 @kind object @name `haloColor`) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L214a90.  v0:= v3.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L214a94.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L214a9a.  v0:= temp;
  #L214a9c.  if v0 == 0 then goto L214aa2;
  #L214aa0.  return @kind void;
  #L214aa2.  v3.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` := v4 @kind object;
  #L214aa6.  call temp:= `getBackground`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L214aac.  v0:= temp @kind object;
  #L214aae.  call temp:= `shouldDrawCompatHalo`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L214ab4.  v1:= temp;
  #L214ab6.  if v1 != 0 then goto L214ad0;
  #L214aba.  v1:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L214abe.  if v1 == 0 then goto L214ad0;
  #L214ac2.  v1:= v0 @kind object;
  #L214ac4.  v1:= (`android.graphics.drawable.RippleDrawable`) v1 @kind object;
  #L214ac8.  call `setColor`(v1, v4) @signature `Landroid/graphics/drawable/RippleDrawable;.setColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214ace.  return @kind void;
  #L214ad0.  v1:= v3.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L214ad4.  call temp:= `getColorForState`(v3, v4) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L214ada.  v2:= temp;
  #L214adc.  call `setColor`(v1, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L214ae2.  v1:= v3.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L214ae6.  v2:= 63I;
  #L214aea.  call `setAlpha`(v1, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L214af0.  call `invalidate`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidate:()V` @kind virtual;
  #L214af6.  return @kind void;
}
procedure `void` `setLabelBehavior`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 @name `labelBehavior`) @signature `Lcom/google/android/material/slider/BaseSlider;.setLabelBehavior:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214b08.  v0:= v1.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L214b0c.  if v0 == v2 then goto L214b1a;
  #L214b10.  v1.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int` := v2;
  #L214b14.  call `requestLayout`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.requestLayout:()V` @kind virtual;
  #L214b1a.  return @kind void;
}
procedure `void` `setLabelFormatter`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `com.google.android.material.slider.LabelFormatter` v1 @kind object @name `formatter`) @signature `Lcom/google/android/material/slider/BaseSlider;.setLabelFormatter:(Lcom/google/android/material/slider/LabelFormatter;)V` @AccessFlag PUBLIC {
    temp;

  #L214b2c.  v0.`com.google.android.material.slider.BaseSlider.formatter` @type ^`com.google.android.material.slider.LabelFormatter` := v1 @kind object;
  #L214b30.  return @kind void;
}
procedure `void` `setSeparationUnit`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `int` v1 @name `separationUnit`) @signature `Lcom/google/android/material/slider/BaseSlider;.setSeparationUnit:(I)V` @AccessFlag PROTECTED {
    temp;

  #L214b44.  v0.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int` := v1;
  #L214b48.  return @kind void;
}
procedure `void` `setStepSize`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `float` v6 @name `stepSize`) @signature `Lcom/google/android/material/slider/BaseSlider;.setStepSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L214b5c.  v0:= 0I;
  #L214b5e.  v0:= fcmpg(v6, v0);
  #L214b62.  v1:= 1I;
  #L214b64.  if v0 < 0 then goto L214b84;
  #L214b68.  v0:= v5.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L214b6c.  v0:= fcmpl(v0, v6);
  #L214b70.  if v0 == 0 then goto L214b82;
  #L214b74.  v5.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v6;
  #L214b78.  v5.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v1 @kind boolean;
  #L214b7c.  call `postInvalidate`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L214b82.  return @kind void;
  #L214b84.  v0:= new `java.lang.IllegalArgumentException`;
  #L214b88.  v2:= 3I;
  #L214b8a.  v2:= new `java.lang.Object`[v2];
  #L214b8e.  v3:= 0I;
  #L214b90.  call temp:= `toString`(v6) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L214b96.  v4:= temp @kind object;
  #L214b98.  v2[v3]:= v4 @kind object;
  #L214b9c.  v3:= v5.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L214ba0.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L214ba6.  v3:= temp @kind object;
  #L214ba8.  v2[v1]:= v3 @kind object;
  #L214bac.  v1:= 2I;
  #L214bae.  v3:= v5.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L214bb2.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L214bb8.  v3:= temp @kind object;
  #L214bba.  v2[v1]:= v3 @kind object;
  #L214bbe.  v1:= "The stepSize(%s) must be 0, or a factor of the valueFrom(%s)-valueTo(%s) range" @kind object;
  #L214bc2.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L214bc8.  v1:= temp @kind object;
  #L214bca.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L214bd0.  throw v0;
}
procedure `void` `setThumbElevation`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 @name `elevation`) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214be4.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L214be8.  call `setElevation`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L214bee.  return @kind void;
}
procedure `void` `setThumbElevationResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 @name `elevation`) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevationResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214c00.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L214c06.  v0:= temp @kind object;
  #L214c08.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L214c0e.  v0:= temp;
  #L214c10.  call `setThumbElevation`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevation:(F)V` @kind virtual;
  #L214c16.  return @kind void;
}
procedure `void` `setThumbRadius`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int` v5 @name `radius`) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L214c28.  v0:= v4.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L214c2c.  if v5 != v0 then goto L214c32;
  #L214c30.  return @kind void;
  #L214c32.  v4.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int` := v5;
  #L214c36.  call `maybeIncreaseTrackSidePadding`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeIncreaseTrackSidePadding:()V` @kind direct;
  #L214c3c.  v0:= v4.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L214c40.  call temp:= `builder`() @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.builder:()Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind static;
  #L214c46.  v1:= temp @kind object;
  #L214c48.  v2:= v4.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L214c4c.  v2:= (`float`) v2 @kind i2f;
  #L214c4e.  v3:= 0I;
  #L214c50.  call temp:= `setAllCorners`(v1, v3, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.setAllCorners:(IF)Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind virtual;
  #L214c56.  v1:= temp @kind object;
  #L214c58.  call temp:= `build`(v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.build:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L214c5e.  v1:= temp @kind object;
  #L214c60.  call `setShapeAppearanceModel`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L214c66.  v0:= v4.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L214c6a.  v1:= v4.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L214c6e.  v2:= v1 * 2;
  #L214c72.  v1:= v1 * 2;
  #L214c76.  call `setBounds`(v0, v3, v3, v2, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setBounds:(IIII)V` @kind virtual;
  #L214c7c.  call `postInvalidate`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L214c82.  return @kind void;
}
procedure `void` `setThumbRadiusResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 @name `radius`) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214c94.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L214c9a.  v0:= temp @kind object;
  #L214c9c.  call temp:= `getDimensionPixelSize`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L214ca2.  v0:= temp;
  #L214ca4.  call `setThumbRadius`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadius:(I)V` @kind virtual;
  #L214caa.  return @kind void;
}
procedure `void` `setThumbStrokeColor`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `thumbStrokeColor`) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214cbc.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L214cc0.  call `setStrokeColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214cc6.  call `postInvalidate`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L214ccc.  return @kind void;
}
procedure `void` `setThumbStrokeColorResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 @name `thumbStrokeColorResourceId`) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214ce0.  if v2 == 0 then goto L214cfc;
  #L214ce4.  
  #L214ce6.  call temp:= `getContext`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getContext:()Landroid/content/Context;` @kind virtual;
  #L214cec.  v0:= temp @kind object;
  #L214cee.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L214cf4.  v0:= temp @kind object;
  #L214cf6.  call `setThumbStrokeColor`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214cfc.  return @kind void;
}
procedure `void` `setThumbStrokeWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 @name `thumbStrokeWidth`) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214d10.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L214d14.  call `setStrokeWidth`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L214d1a.  call `postInvalidate`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L214d20.  return @kind void;
}
procedure `void` `setThumbStrokeWidthResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 @name `thumbStrokeWidthResourceId`) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214d34.  if v2 == 0 then goto L214d4e;
  #L214d38.  call temp:= `getResources`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L214d3e.  v0:= temp @kind object;
  #L214d40.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L214d46.  v0:= temp;
  #L214d48.  call `setThumbStrokeWidth`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidth:(F)V` @kind virtual;
  #L214d4e.  return @kind void;
}
procedure `void` `setThumbTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `thumbColor`) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214d60.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L214d64.  call temp:= `getFillColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L214d6a.  v0:= temp @kind object;
  #L214d6c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L214d72.  v0:= temp;
  #L214d74.  if v0 == 0 then goto L214d7a;
  #L214d78.  return @kind void;
  #L214d7a.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L214d7e.  call `setFillColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214d84.  call `invalidate`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidate:()V` @kind virtual;
  #L214d8a.  return @kind void;
}
procedure `void` `setTickActiveTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object @name `tickColor`) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickActiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L214d9c.  v0:= v2.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L214da0.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L214da6.  v0:= temp;
  #L214da8.  if v0 == 0 then goto L214dae;
  #L214dac.  return @kind void;
  #L214dae.  v2.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L214db2.  v0:= v2.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L214db6.  call temp:= `getColorForState`(v2, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L214dbc.  v1:= temp;
  #L214dbe.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L214dc4.  call `invalidate`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidate:()V` @kind virtual;
  #L214dca.  return @kind void;
}
procedure `void` `setTickInactiveTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object @name `tickColor`) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickInactiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L214ddc.  v0:= v2.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L214de0.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L214de6.  v0:= temp;
  #L214de8.  if v0 == 0 then goto L214dee;
  #L214dec.  return @kind void;
  #L214dee.  v2.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L214df2.  v0:= v2.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L214df6.  call temp:= `getColorForState`(v2, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L214dfc.  v1:= temp;
  #L214dfe.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L214e04.  call `invalidate`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidate:()V` @kind virtual;
  #L214e0a.  return @kind void;
}
procedure `void` `setTickTintList`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object @name `tickColor`) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L214e1c.  call `setTickInactiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214e22.  call `setTickActiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214e28.  return @kind void;
}
procedure `void` `setTickVisible`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `boolean` v2 @name `tickVisible`) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214e3c.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` @kind boolean;
  #L214e40.  if v0 == v2 then goto L214e4e;
  #L214e44.  v1.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` := v2 @kind boolean;
  #L214e48.  call `postInvalidate`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L214e4e.  return @kind void;
}
procedure `void` `setTrackActiveTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object @name `trackColor`) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackActiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L214e60.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L214e64.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L214e6a.  v0:= temp;
  #L214e6c.  if v0 == 0 then goto L214e72;
  #L214e70.  return @kind void;
  #L214e72.  v2.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L214e76.  v0:= v2.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L214e7a.  call temp:= `getColorForState`(v2, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L214e80.  v1:= temp;
  #L214e82.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L214e88.  call `invalidate`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidate:()V` @kind virtual;
  #L214e8e.  return @kind void;
}
procedure `void` `setTrackHeight`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 @name `trackHeight`) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackHeight:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214ea0.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L214ea4.  if v0 == v2 then goto L214eb8;
  #L214ea8.  v1.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int` := v2;
  #L214eac.  call `invalidateTrack`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidateTrack:()V` @kind direct;
  #L214eb2.  call `postInvalidate`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L214eb8.  return @kind void;
}
procedure `void` `setTrackInactiveTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object @name `trackColor`) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackInactiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L214ecc.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L214ed0.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L214ed6.  v0:= temp;
  #L214ed8.  if v0 == 0 then goto L214ede;
  #L214edc.  return @kind void;
  #L214ede.  v2.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L214ee2.  v0:= v2.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L214ee6.  call temp:= `getColorForState`(v2, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L214eec.  v1:= temp;
  #L214eee.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L214ef4.  call `invalidate`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidate:()V` @kind virtual;
  #L214efa.  return @kind void;
}
procedure `void` `setTrackTintList`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object @name `trackColor`) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L214f0c.  call `setTrackInactiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214f12.  call `setTrackActiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L214f18.  return @kind void;
}
procedure `void` `setValueFrom`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 @name `valueFrom`) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueFrom:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214fd8.  v1.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float` := v2;
  #L214fdc.  v0:= 1I;
  #L214fde.  v1.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v0 @kind boolean;
  #L214fe2.  call `postInvalidate`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L214fe8.  return @kind void;
}
procedure `void` `setValueTo`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 @name `valueTo`) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueTo:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214ffc.  v1.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float` := v2;
  #L215000.  v0:= 1I;
  #L215002.  v1.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v0 @kind boolean;
  #L215006.  call `postInvalidate`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.postInvalidate:()V` @kind virtual;
  #L21500c.  return @kind void;
}
procedure `void` `setValues`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setValues:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;

  #L215048.  v0:= new `java.util.ArrayList`;
  #L21504c.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L215052.  call `setValuesInternal`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @kind direct;
  #L215058.  return @kind void;
}
procedure `void` `setValues`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `java.lang.Float`[] v2 @kind object @name `values`) @signature `Lcom/google/android/material/slider/BaseSlider;.setValues:([Ljava/lang/Float;)V` @AccessFlag  {
    temp;
    v0;

  #L215020.  v0:= new `java.util.ArrayList`;
  #L215024.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L21502a.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L215030.  call `setValuesInternal`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @kind direct;
  #L215036.  return @kind void;
}
procedure `void` `updateBoundsForVirturalViewId`(`com.google.android.material.slider.BaseSlider` v6 @kind this, `int` v7 @name `virtualViewId`, `android.graphics.Rect` v8 @kind object @name `virtualViewBounds`) @signature `Lcom/google/android/material/slider/BaseSlider;.updateBoundsForVirturalViewId:(ILandroid/graphics/Rect;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2150f4.  v0:= v6.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L2150f8.  call temp:= `getValues`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L2150fe.  v1:= temp @kind object;
  #L215100.  call temp:= `get`(v1, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L215106.  v1:= temp @kind object;
  #L215108.  v1:= (`java.lang.Float`) v1 @kind object;
  #L21510c.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L215112.  v1:= temp;
  #L215114.  call temp:= `normalizeValue`(v6, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L21511a.  v1:= temp;
  #L21511c.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L215120.  v2:= (`float`) v2 @kind i2f;
  #L215122.  v1:= v1 * v2 @kind float;
  #L215124.  v1:= (`int`) v1 @kind f2i;
  #L215126.  v0:= v0 + v1 @kind int;
  #L215128.  call temp:= `calculateTop`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L21512e.  v1:= temp;
  #L215130.  v2:= v6.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L215134.  v3:= v0 - v2 @kind int;
  #L215138.  v4:= v1 - v2 @kind int;
  #L21513c.  v5:= v0 + v2 @kind int;
  #L215140.  v2:= v2 + v1 @kind int;
  #L215142.  call `set`(v8, v3, v4, v5, v2) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L215148.  return @kind void;
}
