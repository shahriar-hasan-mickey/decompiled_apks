record `com.google.android.material.badge.BadgeDrawable` @kind class @AccessFlag PUBLIC extends `android.graphics.drawable.Drawable` @kind class, `com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate` @kind interface {
  `java.lang.ref.WeakReference` `com.google.android.material.badge.BadgeDrawable.anchorViewRef` @AccessFlag PRIVATE;
  `android.graphics.Rect` `com.google.android.material.badge.BadgeDrawable.badgeBounds` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.badge.BadgeDrawable.badgeCenterX` @AccessFlag PRIVATE;
  `float` `com.google.android.material.badge.BadgeDrawable.badgeCenterY` @AccessFlag PRIVATE;
  `float` `com.google.android.material.badge.BadgeDrawable.badgeRadius` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.badge.BadgeDrawable.badgeWidePadding` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.badge.BadgeDrawable.badgeWithTextRadius` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.google.android.material.badge.BadgeDrawable.contextRef` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.badge.BadgeDrawable.cornerRadius` @AccessFlag PRIVATE;
  `java.lang.ref.WeakReference` `com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @AccessFlag PRIVATE;
  `float` `com.google.android.material.badge.BadgeDrawable.halfBadgeHeight` @AccessFlag PRIVATE;
  `float` `com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @AccessFlag PRIVATE;
  `int` `com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @AccessFlag PRIVATE;
  `com.google.android.material.badge.BadgeDrawable$SavedState` `com.google.android.material.badge.BadgeDrawable.savedState` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.MaterialShapeDrawable` `com.google.android.material.badge.BadgeDrawable.shapeDrawable` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.internal.TextDrawableHelper` `com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.android.material.badge.BadgeDrawable.BADGE_NUMBER_NONE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.BOTTOM_END` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.BOTTOM_START` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_EXCEED_MAX_BADGE_NUMBER_SUFFIX` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_MAX_BADGE_CHARACTER_COUNT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_STYLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_THEME_ATTR` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.MAX_CIRCULAR_BADGE_NUMBER_COUNT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.TOP_END` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.TOP_START` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/badge/BadgeDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1db888.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Badge` @type ^`int`;
  #L1db88c.  `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_STYLE` @type ^`int` := v0;
  #L1db890.  v0:= `@@com.google.android.material.R$attr.badgeStyle` @type ^`int`;
  #L1db894.  `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_THEME_ATTR` @type ^`int` := v0;
  #L1db898.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.badge.BadgeDrawable` v3 @kind this, `android.content.Context` v4 @kind object @name `context`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.<init>:(Landroid/content/Context;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1db8ac.  call `<init>`(v3) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L1db8b2.  v0:= new `java.lang.ref.WeakReference`;
  #L1db8b6.  call `<init>`(v0, v4) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1db8bc.  v3.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L1db8c0.  call `checkMaterialTheme`(v4) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.checkMaterialTheme:(Landroid/content/Context;)V` @kind static;
  #L1db8c6.  call temp:= `getResources`(v4) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1db8cc.  v0:= temp @kind object;
  #L1db8ce.  v1:= new `android.graphics.Rect`;
  #L1db8d2.  call `<init>`(v1) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L1db8d8.  v3.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` := v1 @kind object;
  #L1db8dc.  v1:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L1db8e0.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L1db8e6.  v3.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` := v1 @kind object;
  #L1db8ea.  v1:= `@@com.google.android.material.R$dimen.mtrl_badge_radius` @type ^`int`;
  #L1db8ee.  call temp:= `getDimensionPixelSize`(v0, v1) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L1db8f4.  v1:= temp;
  #L1db8f6.  v1:= (`float`) v1 @kind i2f;
  #L1db8f8.  v3.`com.google.android.material.badge.BadgeDrawable.badgeRadius` @type ^`float` := v1;
  #L1db8fc.  v1:= `@@com.google.android.material.R$dimen.mtrl_badge_long_text_horizontal_padding` @type ^`int`;
  #L1db900.  call temp:= `getDimensionPixelSize`(v0, v1) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L1db906.  v1:= temp;
  #L1db908.  v1:= (`float`) v1 @kind i2f;
  #L1db90a.  v3.`com.google.android.material.badge.BadgeDrawable.badgeWidePadding` @type ^`float` := v1;
  #L1db90e.  v1:= `@@com.google.android.material.R$dimen.mtrl_badge_with_text_radius` @type ^`int`;
  #L1db912.  call temp:= `getDimensionPixelSize`(v0, v1) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L1db918.  v1:= temp;
  #L1db91a.  v1:= (`float`) v1 @kind i2f;
  #L1db91c.  v3.`com.google.android.material.badge.BadgeDrawable.badgeWithTextRadius` @type ^`float` := v1;
  #L1db920.  v1:= new `com.google.android.material.internal.TextDrawableHelper`;
  #L1db924.  call `<init>`(v1, v3) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.<init>:(Lcom/google/android/material/internal/TextDrawableHelper$TextDrawableDelegate;)V` @kind direct;
  #L1db92a.  v3.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` := v1 @kind object;
  #L1db92e.  call temp:= `getTextPaint`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1db934.  v1:= temp @kind object;
  #L1db936.  v2:= `@@android.graphics.Paint$Align.CENTER` @type ^`android.graphics.Paint$Align` @kind object;
  #L1db93a.  call `setTextAlign`(v1, v2) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L1db940.  v1:= new `com.google.android.material.badge.BadgeDrawable$SavedState`;
  #L1db944.  call `<init>`(v1, v4) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L1db94a.  v3.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` := v1 @kind object;
  #L1db94e.  v1:= `@@com.google.android.material.R$style.TextAppearance_MaterialComponents_Badge` @type ^`int`;
  #L1db952.  call `setTextAppearanceResource`(v3, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setTextAppearanceResource:(I)V` @kind direct;
  #L1db958.  return @kind void;
}
procedure `void` `calculateCenterAndBounds`(`com.google.android.material.badge.BadgeDrawable` v4 @kind this, `android.content.Context` v5 @kind object @name `context`, `android.graphics.Rect` v6 @kind object @name `anchorRect`, `android.view.View` v7 @kind object @name `anchorView`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.calculateCenterAndBounds:(Landroid/content/Context;Landroid/graphics/Rect;Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1db96c.  v0:= v4.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db970.  call temp:= `access$500`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$500:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db976.  v0:= temp;
  #L1db978.  v1:= 8388691I;
  #L1db97e.  if v0 == v1 then goto L1db9a6;
  #L1db982.  v2:= 8388693I;
  #L1db988.  if v0 == v2 then goto L1db9a6;
  #L1db98c.  v0:= v6.`android.graphics.Rect.top` @type ^`int`;
  #L1db990.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db994.  call temp:= `access$700`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$700:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db99a.  v2:= temp;
  #L1db99c.  v0:= v0 + v2 @kind int;
  #L1db99e.  v0:= (`float`) v0 @kind i2f;
  #L1db9a0.  v4.`com.google.android.material.badge.BadgeDrawable.badgeCenterY` @type ^`float` := v0;
  #L1db9a4.  goto L1db9c0;
  #L1db9a6.  v0:= v6.`android.graphics.Rect.bottom` @type ^`int`;
  #L1db9aa.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db9ae.  call temp:= `access$700`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$700:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db9b4.  v2:= temp;
  #L1db9b6.  v0:= v0 - v2 @kind int;
  #L1db9b8.  v0:= (`float`) v0 @kind i2f;
  #L1db9ba.  v4.`com.google.android.material.badge.BadgeDrawable.badgeCenterY` @type ^`float` := v0;
  #L1db9be.  
  #L1db9c0.  call temp:= `getNumber`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L1db9c6.  v0:= temp;
  #L1db9c8.  v2:= 9I;
  #L1db9cc.  if v0 > v2 then goto L1db9f4;
  #L1db9d0.  call temp:= `hasNumber`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L1db9d6.  v0:= temp;
  #L1db9d8.  if v0 != 0 then goto L1db9e2;
  #L1db9dc.  v0:= v4.`com.google.android.material.badge.BadgeDrawable.badgeRadius` @type ^`float`;
  #L1db9e0.  goto L1db9e6;
  #L1db9e2.  v0:= v4.`com.google.android.material.badge.BadgeDrawable.badgeWithTextRadius` @type ^`float`;
  #L1db9e6.  v4.`com.google.android.material.badge.BadgeDrawable.cornerRadius` @type ^`float` := v0;
  #L1db9ea.  v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeHeight` @type ^`float` := v0;
  #L1db9ee.  v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float` := v0;
  #L1db9f2.  goto L1dba24;
  #L1db9f4.  v0:= v4.`com.google.android.material.badge.BadgeDrawable.badgeWithTextRadius` @type ^`float`;
  #L1db9f8.  v4.`com.google.android.material.badge.BadgeDrawable.cornerRadius` @type ^`float` := v0;
  #L1db9fc.  v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeHeight` @type ^`float` := v0;
  #L1dba00.  call temp:= `getBadgeText`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeText:()Ljava/lang/String;` @kind direct;
  #L1dba06.  v0:= temp @kind object;
  #L1dba08.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dba0c.  call temp:= `getTextWidth`(v2, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L1dba12.  v2:= temp;
  #L1dba14.  v3:= 2.0F;
  #L1dba18.  v2:= v2 / v3 @kind float;
  #L1dba1a.  v3:= v4.`com.google.android.material.badge.BadgeDrawable.badgeWidePadding` @type ^`float`;
  #L1dba1e.  v2:= v2 + v3 @kind float;
  #L1dba20.  v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float` := v2;
  #L1dba24.  
  #L1dba26.  call temp:= `getResources`(v5) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1dba2c.  v0:= temp @kind object;
  #L1dba2e.  call temp:= `hasNumber`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L1dba34.  v2:= temp;
  #L1dba36.  if v2 == 0 then goto L1dba40;
  #L1dba3a.  v2:= `@@com.google.android.material.R$dimen.mtrl_badge_text_horizontal_edge_offset` @type ^`int`;
  #L1dba3e.  goto L1dba44;
  #L1dba40.  v2:= `@@com.google.android.material.R$dimen.mtrl_badge_horizontal_edge_offset` @type ^`int`;
  #L1dba44.  call temp:= `getDimensionPixelSize`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L1dba4a.  v0:= temp;
  #L1dba4c.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dba50.  call temp:= `access$500`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$500:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dba56.  v2:= temp;
  #L1dba58.  v3:= 8388659I;
  #L1dba5e.  if v2 == v3 then goto L1dbabc;
  #L1dba62.  if v2 == v1 then goto L1dbabc;
  #L1dba66.  
  #L1dba68.  call temp:= `getLayoutDirection`(v7) @signature `Landroidx/core/view/ViewCompat;.getLayoutDirection:(Landroid/view/View;)I` @kind static;
  #L1dba6e.  v1:= temp;
  #L1dba70.  if v1 != 0 then goto L1dba96;
  #L1dba74.  v1:= v6.`android.graphics.Rect.right` @type ^`int`;
  #L1dba78.  v1:= (`float`) v1 @kind i2f;
  #L1dba7a.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L1dba7e.  v1:= v1 + v2 @kind float;
  #L1dba80.  v2:= (`float`) v0 @kind i2f;
  #L1dba82.  v1:= v1 - v2 @kind float;
  #L1dba84.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dba88.  call temp:= `access$600`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$600:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dba8e.  v2:= temp;
  #L1dba90.  v2:= (`float`) v2 @kind i2f;
  #L1dba92.  v1:= v1 - v2 @kind float;
  #L1dba94.  goto L1dbab6;
  #L1dba96.  v1:= v6.`android.graphics.Rect.left` @type ^`int`;
  #L1dba9a.  v1:= (`float`) v1 @kind i2f;
  #L1dba9c.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L1dbaa0.  v1:= v1 - v2 @kind float;
  #L1dbaa2.  v2:= (`float`) v0 @kind i2f;
  #L1dbaa4.  v1:= v1 + v2 @kind float;
  #L1dbaa6.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbaaa.  call temp:= `access$600`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$600:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbab0.  v2:= temp;
  #L1dbab2.  v2:= (`float`) v2 @kind i2f;
  #L1dbab4.  v1:= v1 + v2 @kind float;
  #L1dbab6.  v4.`com.google.android.material.badge.BadgeDrawable.badgeCenterX` @type ^`float` := v1;
  #L1dbaba.  goto L1dbb12;
  #L1dbabc.  
  #L1dbabe.  call temp:= `getLayoutDirection`(v7) @signature `Landroidx/core/view/ViewCompat;.getLayoutDirection:(Landroid/view/View;)I` @kind static;
  #L1dbac4.  v1:= temp;
  #L1dbac6.  if v1 != 0 then goto L1dbaec;
  #L1dbaca.  v1:= v6.`android.graphics.Rect.left` @type ^`int`;
  #L1dbace.  v1:= (`float`) v1 @kind i2f;
  #L1dbad0.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L1dbad4.  v1:= v1 - v2 @kind float;
  #L1dbad6.  v2:= (`float`) v0 @kind i2f;
  #L1dbad8.  v1:= v1 + v2 @kind float;
  #L1dbada.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbade.  call temp:= `access$600`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$600:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbae4.  v2:= temp;
  #L1dbae6.  v2:= (`float`) v2 @kind i2f;
  #L1dbae8.  v1:= v1 + v2 @kind float;
  #L1dbaea.  goto L1dbb0c;
  #L1dbaec.  v1:= v6.`android.graphics.Rect.right` @type ^`int`;
  #L1dbaf0.  v1:= (`float`) v1 @kind i2f;
  #L1dbaf2.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L1dbaf6.  v1:= v1 + v2 @kind float;
  #L1dbaf8.  v2:= (`float`) v0 @kind i2f;
  #L1dbafa.  v1:= v1 - v2 @kind float;
  #L1dbafc.  v2:= v4.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbb00.  call temp:= `access$600`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$600:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbb06.  v2:= temp;
  #L1dbb08.  v2:= (`float`) v2 @kind i2f;
  #L1dbb0a.  v1:= v1 - v2 @kind float;
  #L1dbb0c.  v4.`com.google.android.material.badge.BadgeDrawable.badgeCenterX` @type ^`float` := v1;
  #L1dbb10.  
  #L1dbb12.  return @kind void;
}
procedure `com.google.android.material.badge.BadgeDrawable` `create`(`android.content.Context` v3 @kind object @name `context`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.create:(Landroid/content/Context;)Lcom/google/android/material/badge/BadgeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1db4c8.  v0:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_THEME_ATTR` @type ^`int`;
  #L1db4cc.  v1:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_STYLE` @type ^`int`;
  #L1db4d0.  v2:= 0I;
  #L1db4d2.  call temp:= `createFromAttributes`(v3, v2, v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/badge/BadgeDrawable;` @kind static;
  #L1db4d8.  v0:= temp @kind object;
  #L1db4da.  return v0 @kind object;
}
procedure `com.google.android.material.badge.BadgeDrawable` `createFromAttributes`(`android.content.Context` v1 @kind object @name `context`, `android.util.AttributeSet` v2 @kind object @name `attrs`, `int` v3 @name `defStyleAttr`, `int` v4 @name `defStyleRes`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/badge/BadgeDrawable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1db4ec.  v0:= new `com.google.android.material.badge.BadgeDrawable`;
  #L1db4f0.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L1db4f6.  call `loadDefaultStateFromAttributes`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.loadDefaultStateFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L1db4fc.  return v0 @kind object;
}
procedure `com.google.android.material.badge.BadgeDrawable` `createFromResource`(`android.content.Context` v3 @kind object @name `context`, `int` v4 @name `id`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/badge/BadgeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1db510.  v0:= "badge" @kind object;
  #L1db514.  call temp:= `parseDrawableXml`(v3, v4, v0) @signature `Lcom/google/android/material/drawable/DrawableUtils;.parseDrawableXml:(Landroid/content/Context;ILjava/lang/CharSequence;)Landroid/util/AttributeSet;` @kind static;
  #L1db51a.  v0:= temp @kind object;
  #L1db51c.  call temp:= `getStyleAttribute`(v0) @signature `Landroid/util/AttributeSet;.getStyleAttribute:()I` @kind interface;
  #L1db522.  v1:= temp;
  #L1db524.  if v1 != 0 then goto L1db52c;
  #L1db528.  v1:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_STYLE` @type ^`int`;
  #L1db52c.  v2:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_THEME_ATTR` @type ^`int`;
  #L1db530.  call temp:= `createFromAttributes`(v3, v0, v2, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/badge/BadgeDrawable;` @kind static;
  #L1db536.  v2:= temp @kind object;
  #L1db538.  return v2 @kind object;
}
procedure `com.google.android.material.badge.BadgeDrawable` `createFromSavedState`(`android.content.Context` v1 @kind object @name `context`, `com.google.android.material.badge.BadgeDrawable$SavedState` v2 @kind object @name `savedState`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.createFromSavedState:(Landroid/content/Context;Lcom/google/android/material/badge/BadgeDrawable$SavedState;)Lcom/google/android/material/badge/BadgeDrawable;` @AccessFlag STATIC {
    temp;
    v0;

  #L1db54c.  v0:= new `com.google.android.material.badge.BadgeDrawable`;
  #L1db550.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L1db556.  call `restoreFromSavedState`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.restoreFromSavedState:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)V` @kind direct;
  #L1db55c.  return v0 @kind object;
}
procedure `void` `drawText`(`com.google.android.material.badge.BadgeDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object @name `canvas`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.drawText:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dbba8.  v0:= new `android.graphics.Rect`;
  #L1dbbac.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L1dbbb2.  call temp:= `getBadgeText`(v5) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeText:()Ljava/lang/String;` @kind direct;
  #L1dbbb8.  v1:= temp @kind object;
  #L1dbbba.  v2:= v5.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dbbbe.  call temp:= `getTextPaint`(v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1dbbc4.  v2:= temp @kind object;
  #L1dbbc6.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1dbbcc.  v3:= temp;
  #L1dbbce.  v4:= 0I;
  #L1dbbd0.  call `getTextBounds`(v2, v1, v4, v3, v0) @signature `Landroid/text/TextPaint;.getTextBounds:(Ljava/lang/String;IILandroid/graphics/Rect;)V` @kind virtual;
  #L1dbbd6.  v2:= v5.`com.google.android.material.badge.BadgeDrawable.badgeCenterX` @type ^`float`;
  #L1dbbda.  v3:= v5.`com.google.android.material.badge.BadgeDrawable.badgeCenterY` @type ^`float`;
  #L1dbbde.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1dbbe4.  v4:= temp;
  #L1dbbe6.  v4:= v4 / 2;
  #L1dbbea.  v4:= (`float`) v4 @kind i2f;
  #L1dbbec.  v3:= v3 + v4 @kind float;
  #L1dbbee.  v4:= v5.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dbbf2.  call temp:= `getTextPaint`(v4) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1dbbf8.  v4:= temp @kind object;
  #L1dbbfa.  call `drawText`(v6, v1, v2, v3, v4) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1dbc00.  return @kind void;
}
procedure `java.lang.String` `getBadgeText`(`com.google.android.material.badge.BadgeDrawable` v5 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeText:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1db800.  call temp:= `getNumber`(v5) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L1db806.  v0:= temp;
  #L1db808.  v1:= v5.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int`;
  #L1db80c.  if v0 > v1 then goto L1db82c;
  #L1db810.  call temp:= `getInstance`() @signature `Ljava/text/NumberFormat;.getInstance:()Ljava/text/NumberFormat;` @kind static;
  #L1db816.  v0:= temp @kind object;
  #L1db818.  call temp:= `getNumber`(v5) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L1db81e.  v1:= temp;
  #L1db820.  v1:= (`long`) v1 @kind i2l;
  #L1db822.  call temp:= `format`(v0, v1) @signature `Ljava/text/NumberFormat;.format:(J)Ljava/lang/String;` @kind virtual;
  #L1db828.  v0:= temp @kind object;
  #L1db82a.  return v0 @kind object;
  #L1db82c.  v0:= v5.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1db830.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1db836.  v0:= temp @kind object;
  #L1db838.  v0:= (`android.content.Context`) v0 @kind object;
  #L1db83c.  if v0 != 0 then goto L1db846;
  #L1db840.  v1:= "" @kind object;
  #L1db844.  return v1 @kind object;
  #L1db846.  v1:= `@@com.google.android.material.R$string.mtrl_exceed_max_badge_number_suffix` @type ^`int`;
  #L1db84a.  v2:= 2I;
  #L1db84c.  v2:= new `java.lang.Object`[v2];
  #L1db850.  v3:= 0I;
  #L1db852.  v4:= v5.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int`;
  #L1db856.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1db85c.  v4:= temp @kind object;
  #L1db85e.  v2[v3]:= v4 @kind object;
  #L1db862.  v3:= 1I;
  #L1db864.  v4:= "+" @kind object;
  #L1db868.  v2[v3]:= v4 @kind object;
  #L1db86c.  call temp:= `getString`(v0, v1, v2) @signature `Landroid/content/Context;.getString:(I[Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L1db872.  v1:= temp @kind object;
  #L1db874.  return v1 @kind object;
}
procedure `void` `loadDefaultStateFromAttributes`(`com.google.android.material.badge.BadgeDrawable` v7 @kind this, `android.content.Context` v8 @kind object @name `context`, `android.util.AttributeSet` v9 @kind object @name `attrs`, `int` v10 @name `defStyleAttr`, `int` v11 @name `defStyleRes`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.loadDefaultStateFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1dbc14.  v2:= `@@com.google.android.material.R$styleable.Badge` @type ^`int`[] @kind object;
  #L1dbc18.  v6:= 0I;
  #L1dbc1a.  v5:= new `int`[v6];
  #L1dbc1e.  v0:= v8 @kind object;
  #L1dbc20.  v1:= v9 @kind object;
  #L1dbc22.  v3:= v10;
  #L1dbc24.  v4:= v11;
  #L1dbc26.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L1dbc2c.  v0:= temp @kind object;
  #L1dbc2e.  v1:= `@@com.google.android.material.R$styleable.Badge_maxCharacterCount` @type ^`int`;
  #L1dbc32.  v2:= 4I;
  #L1dbc34.  call temp:= `getInt`(v0, v1, v2) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L1dbc3a.  v1:= temp;
  #L1dbc3c.  call `setMaxCharacterCount`(v7, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setMaxCharacterCount:(I)V` @kind virtual;
  #L1dbc42.  v1:= `@@com.google.android.material.R$styleable.Badge_number` @type ^`int`;
  #L1dbc46.  call temp:= `hasValue`(v0, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L1dbc4c.  v1:= temp;
  #L1dbc4e.  if v1 == 0 then goto L1dbc64;
  #L1dbc52.  v1:= `@@com.google.android.material.R$styleable.Badge_number` @type ^`int`;
  #L1dbc56.  call temp:= `getInt`(v0, v1, v6) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L1dbc5c.  v1:= temp;
  #L1dbc5e.  call `setNumber`(v7, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setNumber:(I)V` @kind virtual;
  #L1dbc64.  v1:= `@@com.google.android.material.R$styleable.Badge_backgroundColor` @type ^`int`;
  #L1dbc68.  call temp:= `readColorFromAttributes`(v8, v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.readColorFromAttributes:(Landroid/content/Context;Landroid/content/res/TypedArray;I)I` @kind static;
  #L1dbc6e.  v1:= temp;
  #L1dbc70.  call `setBackgroundColor`(v7, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBackgroundColor:(I)V` @kind virtual;
  #L1dbc76.  v1:= `@@com.google.android.material.R$styleable.Badge_badgeTextColor` @type ^`int`;
  #L1dbc7a.  call temp:= `hasValue`(v0, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L1dbc80.  v1:= temp;
  #L1dbc82.  if v1 == 0 then goto L1dbc98;
  #L1dbc86.  v1:= `@@com.google.android.material.R$styleable.Badge_badgeTextColor` @type ^`int`;
  #L1dbc8a.  call temp:= `readColorFromAttributes`(v8, v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.readColorFromAttributes:(Landroid/content/Context;Landroid/content/res/TypedArray;I)I` @kind static;
  #L1dbc90.  v1:= temp;
  #L1dbc92.  call `setBadgeTextColor`(v7, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBadgeTextColor:(I)V` @kind virtual;
  #L1dbc98.  v1:= `@@com.google.android.material.R$styleable.Badge_badgeGravity` @type ^`int`;
  #L1dbc9c.  v2:= 8388661I;
  #L1dbca2.  call temp:= `getInt`(v0, v1, v2) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L1dbca8.  v1:= temp;
  #L1dbcaa.  call `setBadgeGravity`(v7, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBadgeGravity:(I)V` @kind virtual;
  #L1dbcb0.  v1:= `@@com.google.android.material.R$styleable.Badge_horizontalOffset` @type ^`int`;
  #L1dbcb4.  call temp:= `getDimensionPixelOffset`(v0, v1, v6) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1dbcba.  v1:= temp;
  #L1dbcbc.  call `setHorizontalOffset`(v7, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setHorizontalOffset:(I)V` @kind virtual;
  #L1dbcc2.  v1:= `@@com.google.android.material.R$styleable.Badge_verticalOffset` @type ^`int`;
  #L1dbcc6.  call temp:= `getDimensionPixelOffset`(v0, v1, v6) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1dbccc.  v1:= temp;
  #L1dbcce.  call `setVerticalOffset`(v7, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVerticalOffset:(I)V` @kind virtual;
  #L1dbcd4.  call `recycle`(v0) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L1dbcda.  return @kind void;
}
procedure `int` `readColorFromAttributes`(`android.content.Context` v1 @kind object @name `context`, `android.content.res.TypedArray` v2 @kind object @name `a`, `int` v3 @name `index`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.readColorFromAttributes:(Landroid/content/Context;Landroid/content/res/TypedArray;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1db6fc.  call temp:= `getColorStateList`(v1, v2, v3) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1db702.  v0:= temp @kind object;
  #L1db704.  call temp:= `getDefaultColor`(v0) @signature `Landroid/content/res/ColorStateList;.getDefaultColor:()I` @kind virtual;
  #L1db70a.  v0:= temp;
  #L1db70c.  return v0;
}
procedure `void` `restoreFromSavedState`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `com.google.android.material.badge.BadgeDrawable$SavedState` v3 @kind object @name `savedState`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.restoreFromSavedState:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1dbd04.  call temp:= `access$100`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$100:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbd0a.  v0:= temp;
  #L1dbd0c.  call `setMaxCharacterCount`(v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setMaxCharacterCount:(I)V` @kind virtual;
  #L1dbd12.  call temp:= `access$200`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$200:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbd18.  v0:= temp;
  #L1dbd1a.  v1:= -1I;
  #L1dbd1c.  if v0 == v1 then goto L1dbd2e;
  #L1dbd20.  call temp:= `access$200`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$200:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbd26.  v0:= temp;
  #L1dbd28.  call `setNumber`(v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setNumber:(I)V` @kind virtual;
  #L1dbd2e.  call temp:= `access$300`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$300:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbd34.  v0:= temp;
  #L1dbd36.  call `setBackgroundColor`(v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBackgroundColor:(I)V` @kind virtual;
  #L1dbd3c.  call temp:= `access$400`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$400:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbd42.  v0:= temp;
  #L1dbd44.  call `setBadgeTextColor`(v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBadgeTextColor:(I)V` @kind virtual;
  #L1dbd4a.  call temp:= `access$500`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$500:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbd50.  v0:= temp;
  #L1dbd52.  call `setBadgeGravity`(v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBadgeGravity:(I)V` @kind virtual;
  #L1dbd58.  call temp:= `access$600`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$600:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbd5e.  v0:= temp;
  #L1dbd60.  call `setHorizontalOffset`(v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setHorizontalOffset:(I)V` @kind virtual;
  #L1dbd66.  call temp:= `access$700`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$700:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbd6c.  v0:= temp;
  #L1dbd6e.  call `setVerticalOffset`(v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVerticalOffset:(I)V` @kind virtual;
  #L1dbd74.  call temp:= `access$000`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$000:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)Z` @kind static;
  #L1dbd7a.  v0:= temp;
  #L1dbd7c.  call `setVisible`(v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVisible:(Z)V` @kind virtual;
  #L1dbd82.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `com.google.android.material.resources.TextAppearance` v3 @kind object @name `textAppearance`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1dbff0.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dbff4.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1dbffa.  v0:= temp @kind object;
  #L1dbffc.  if v0 != v3 then goto L1dc002;
  #L1dc000.  return @kind void;
  #L1dc002.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1dc006.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1dc00c.  v0:= temp @kind object;
  #L1dc00e.  v0:= (`android.content.Context`) v0 @kind object;
  #L1dc012.  if v0 != 0 then goto L1dc018;
  #L1dc016.  return @kind void;
  #L1dc018.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dc01c.  call `setTextAppearance`(v1, v3, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;Landroid/content/Context;)V` @kind virtual;
  #L1dc022.  call `updateCenterAndBounds`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L1dc028.  return @kind void;
}
procedure `void` `setTextAppearanceResource`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `int` v3 @name `id`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setTextAppearanceResource:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1dc03c.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1dc040.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1dc046.  v0:= temp @kind object;
  #L1dc048.  v0:= (`android.content.Context`) v0 @kind object;
  #L1dc04c.  if v0 != 0 then goto L1dc052;
  #L1dc050.  return @kind void;
  #L1dc052.  v1:= new `com.google.android.material.resources.TextAppearance`;
  #L1dc056.  call `<init>`(v1, v0, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.<init>:(Landroid/content/Context;I)V` @kind direct;
  #L1dc05c.  call `setTextAppearance`(v2, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind direct;
  #L1dc062.  return @kind void;
}
procedure `void` `tryWrapAnchorInCompatParent`(`com.google.android.material.badge.BadgeDrawable` v5 @kind this, `android.view.View` v6 @kind object @name `anchorView`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.tryWrapAnchorInCompatParent:(Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dc0f0.  call temp:= `getParent`(v6) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L1dc0f6.  v0:= temp @kind object;
  #L1dc0f8.  v0:= (`android.view.ViewGroup`) v0 @kind object;
  #L1dc0fc.  if v0 == 0 then goto L1dc110;
  #L1dc100.  call temp:= `getId`(v0) @signature `Landroid/view/ViewGroup;.getId:()I` @kind virtual;
  #L1dc106.  v1:= temp;
  #L1dc108.  v2:= `@@com.google.android.material.R$id.mtrl_anchor_parent` @type ^`int`;
  #L1dc10c.  if v1 == v2 then goto L1dc124;
  #L1dc110.  v1:= v5.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1dc114.  if v1 == 0 then goto L1dc126;
  #L1dc118.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1dc11e.  v1:= temp @kind object;
  #L1dc120.  if v1 != v0 then goto L1dc126;
  #L1dc124.  return @kind void;
  #L1dc126.  call `updateAnchorParentToNotClip`(v6) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateAnchorParentToNotClip:(Landroid/view/View;)V` @kind static;
  #L1dc12c.  v1:= new `android.widget.FrameLayout`;
  #L1dc130.  call temp:= `getContext`(v6) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1dc136.  v2:= temp @kind object;
  #L1dc138.  call `<init>`(v1, v2) @signature `Landroid/widget/FrameLayout;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L1dc13e.  v2:= `@@com.google.android.material.R$id.mtrl_anchor_parent` @type ^`int`;
  #L1dc142.  call `setId`(v1, v2) @signature `Landroid/widget/FrameLayout;.setId:(I)V` @kind virtual;
  #L1dc148.  v2:= 0I;
  #L1dc14a.  call `setClipChildren`(v1, v2) @signature `Landroid/widget/FrameLayout;.setClipChildren:(Z)V` @kind virtual;
  #L1dc150.  call `setClipToPadding`(v1, v2) @signature `Landroid/widget/FrameLayout;.setClipToPadding:(Z)V` @kind virtual;
  #L1dc156.  call temp:= `getLayoutParams`(v6) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L1dc15c.  v2:= temp @kind object;
  #L1dc15e.  call `setLayoutParams`(v1, v2) @signature `Landroid/widget/FrameLayout;.setLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)V` @kind virtual;
  #L1dc164.  call temp:= `getWidth`(v6) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L1dc16a.  v2:= temp;
  #L1dc16c.  call `setMinimumWidth`(v1, v2) @signature `Landroid/widget/FrameLayout;.setMinimumWidth:(I)V` @kind virtual;
  #L1dc172.  call temp:= `getHeight`(v6) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L1dc178.  v2:= temp;
  #L1dc17a.  call `setMinimumHeight`(v1, v2) @signature `Landroid/widget/FrameLayout;.setMinimumHeight:(I)V` @kind virtual;
  #L1dc180.  call temp:= `indexOfChild`(v0, v6) @signature `Landroid/view/ViewGroup;.indexOfChild:(Landroid/view/View;)I` @kind virtual;
  #L1dc186.  v2:= temp;
  #L1dc188.  call `removeViewAt`(v0, v2) @signature `Landroid/view/ViewGroup;.removeViewAt:(I)V` @kind virtual;
  #L1dc18e.  v3:= new `android.widget.FrameLayout$LayoutParams`;
  #L1dc192.  v4:= -1I;
  #L1dc194.  call `<init>`(v3, v4, v4) @signature `Landroid/widget/FrameLayout$LayoutParams;.<init>:(II)V` @kind direct;
  #L1dc19a.  call `setLayoutParams`(v6, v3) @signature `Landroid/view/View;.setLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)V` @kind virtual;
  #L1dc1a0.  call `addView`(v1, v6) @signature `Landroid/widget/FrameLayout;.addView:(Landroid/view/View;)V` @kind virtual;
  #L1dc1a6.  call `addView`(v0, v1, v2) @signature `Landroid/view/ViewGroup;.addView:(Landroid/view/View;I)V` @kind virtual;
  #L1dc1ac.  v3:= new `java.lang.ref.WeakReference`;
  #L1dc1b0.  call `<init>`(v3, v1) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1dc1b6.  v5.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` := v3 @kind object;
  #L1dc1ba.  v3:= new `com.google.android.material.badge.BadgeDrawable$1`;
  #L1dc1be.  call `<init>`(v3, v5, v6, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable$1;.<init>:(Lcom/google/android/material/badge/BadgeDrawable;Landroid/view/View;Landroid/widget/FrameLayout;)V` @kind direct;
  #L1dc1c4.  call temp:= `post`(v1, v3) @signature `Landroid/widget/FrameLayout;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L1dc1ca.  return @kind void;
}
procedure `void` `updateAnchorParentToNotClip`(`android.view.View` v2 @kind object @name `anchorView`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateAnchorParentToNotClip:(Landroid/view/View;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1dc1dc.  call temp:= `getParent`(v2) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L1dc1e2.  v0:= temp @kind object;
  #L1dc1e4.  v0:= (`android.view.ViewGroup`) v0 @kind object;
  #L1dc1e8.  v1:= 0I;
  #L1dc1ea.  call `setClipChildren`(v0, v1) @signature `Landroid/view/ViewGroup;.setClipChildren:(Z)V` @kind virtual;
  #L1dc1f0.  call `setClipToPadding`(v0, v1) @signature `Landroid/view/ViewGroup;.setClipToPadding:(Z)V` @kind virtual;
  #L1dc1f6.  return @kind void;
}
procedure `void` `updateCenterAndBounds`(`com.google.android.material.badge.BadgeDrawable` v10 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1dc2b8.  v0:= v10.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1dc2bc.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1dc2c2.  v0:= temp @kind object;
  #L1dc2c4.  v0:= (`android.content.Context`) v0 @kind object;
  #L1dc2c8.  v1:= v10.`com.google.android.material.badge.BadgeDrawable.anchorViewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1dc2cc.  v2:= 0I;
  #L1dc2ce.  if v1 == 0 then goto L1dc2e0;
  #L1dc2d2.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1dc2d8.  v1:= temp @kind object;
  #L1dc2da.  v1:= (`android.view.View`) v1 @kind object;
  #L1dc2de.  goto L1dc2e2;
  #L1dc2e0.  v1:= v2 @kind object;
  #L1dc2e2.  if v0 == 0 then goto L1dc398;
  #L1dc2e6.  if v1 != 0 then goto L1dc2ec;
  #L1dc2ea.  goto L1dc398;
  #L1dc2ec.  v3:= new `android.graphics.Rect`;
  #L1dc2f0.  call `<init>`(v3) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L1dc2f6.  v4:= v10.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L1dc2fa.  call `set`(v3, v4) @signature `Landroid/graphics/Rect;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1dc300.  v4:= new `android.graphics.Rect`;
  #L1dc304.  call `<init>`(v4) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L1dc30a.  call `getDrawingRect`(v1, v4) @signature `Landroid/view/View;.getDrawingRect:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1dc310.  v5:= v10.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1dc314.  if v5 == 0 then goto L1dc324;
  #L1dc318.  call temp:= `get`(v5) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1dc31e.  v2:= temp @kind object;
  #L1dc320.  v2:= (`android.widget.FrameLayout`) v2 @kind object;
  #L1dc324.  if v2 != 0 then goto L1dc330;
  #L1dc328.  v5:= `@@com.google.android.material.badge.BadgeUtils.USE_COMPAT_PARENT` @type ^`boolean` @kind boolean;
  #L1dc32c.  if v5 == 0 then goto L1dc34a;
  #L1dc330.  if v2 != 0 then goto L1dc342;
  #L1dc334.  call temp:= `getParent`(v1) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L1dc33a.  v5:= temp @kind object;
  #L1dc33c.  v5:= (`android.view.ViewGroup`) v5 @kind object;
  #L1dc340.  goto L1dc344;
  #L1dc342.  v5:= v2 @kind object;
  #L1dc344.  call `offsetDescendantRectToMyCoords`(v5, v1, v4) @signature `Landroid/view/ViewGroup;.offsetDescendantRectToMyCoords:(Landroid/view/View;Landroid/graphics/Rect;)V` @kind virtual;
  #L1dc34a.  call `calculateCenterAndBounds`(v10, v0, v4, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.calculateCenterAndBounds:(Landroid/content/Context;Landroid/graphics/Rect;Landroid/view/View;)V` @kind direct;
  #L1dc350.  v5:= v10.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L1dc354.  v6:= v10.`com.google.android.material.badge.BadgeDrawable.badgeCenterX` @type ^`float`;
  #L1dc358.  v7:= v10.`com.google.android.material.badge.BadgeDrawable.badgeCenterY` @type ^`float`;
  #L1dc35c.  v8:= v10.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L1dc360.  v9:= v10.`com.google.android.material.badge.BadgeDrawable.halfBadgeHeight` @type ^`float`;
  #L1dc364.  call `updateBadgeBounds`(v5, v6, v7, v8, v9) @signature `Lcom/google/android/material/badge/BadgeUtils;.updateBadgeBounds:(Landroid/graphics/Rect;FFFF)V` @kind static;
  #L1dc36a.  v5:= v10.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L1dc36e.  v6:= v10.`com.google.android.material.badge.BadgeDrawable.cornerRadius` @type ^`float`;
  #L1dc372.  call `setCornerSize`(v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(F)V` @kind virtual;
  #L1dc378.  v5:= v10.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L1dc37c.  call temp:= `equals`(v3, v5) @signature `Landroid/graphics/Rect;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1dc382.  v5:= temp;
  #L1dc384.  if v5 != 0 then goto L1dc396;
  #L1dc388.  v5:= v10.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L1dc38c.  v6:= v10.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L1dc390.  call `setBounds`(v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1dc396.  return @kind void;
  #L1dc398.  return @kind void;
}
procedure `void` `updateMaxBadgeNumber`(`com.google.android.material.badge.BadgeDrawable` v4 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateMaxBadgeNumber:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dc3ac.  call temp:= `getMaxCharacterCount`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getMaxCharacterCount:()I` @kind virtual;
  #L1dc3b2.  v0:= temp;
  #L1dc3b4.  v0:= (`double`) v0 @kind i2d;
  #L1dc3b6.  v2:= 1.0D;
  #L1dc3ba.  v0:= v0 - v2 @kind double;
  #L1dc3bc.  v2:= 10.0D;
  #L1dc3c0.  call temp:= `pow`(v2, v0) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L1dc3c6.  v0:= temp @kind wide;
  #L1dc3c8.  v0:= (`int`) v0 @kind d2i;
  #L1dc3ca.  v0:= v0 + -1;
  #L1dc3ce.  v4.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int` := v0;
  #L1dc3d2.  return @kind void;
}
procedure `void` `clearNumber`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.clearNumber:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbb24.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbb28.  v1:= -1I;
  #L1dbb2a.  call temp:= `access$202`(v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$202:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbb30.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1dbb36.  return @kind void;
}
procedure `void` `draw`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `android.graphics.Canvas` v3 @kind object @name `canvas`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbb48.  call temp:= `getBounds`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1dbb4e.  v0:= temp @kind object;
  #L1dbb50.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L1dbb56.  v1:= temp;
  #L1dbb58.  if v1 != 0 then goto L1dbb94;
  #L1dbb5c.  call temp:= `getAlpha`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getAlpha:()I` @kind virtual;
  #L1dbb62.  v1:= temp;
  #L1dbb64.  if v1 == 0 then goto L1dbb94;
  #L1dbb68.  call temp:= `isVisible`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.isVisible:()Z` @kind virtual;
  #L1dbb6e.  v1:= temp;
  #L1dbb70.  if v1 != 0 then goto L1dbb76;
  #L1dbb74.  goto L1dbb94;
  #L1dbb76.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L1dbb7a.  call `draw`(v1, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1dbb80.  call temp:= `hasNumber`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L1dbb86.  v1:= temp;
  #L1dbb88.  if v1 == 0 then goto L1dbb92;
  #L1dbb8c.  call `drawText`(v2, v3) @signature `Lcom/google/android/material/badge/BadgeDrawable;.drawText:(Landroid/graphics/Canvas;)V` @kind direct;
  #L1dbb92.  return @kind void;
  #L1dbb94.  return @kind void;
}
procedure `int` `getAlpha`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db588.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db58c.  call temp:= `access$800`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$800:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db592.  v0:= temp;
  #L1db594.  return v0;
}
procedure `int` `getBackgroundColor`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBackgroundColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db5a8.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L1db5ac.  call temp:= `getFillColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L1db5b2.  v0:= temp @kind object;
  #L1db5b4.  call temp:= `getDefaultColor`(v0) @signature `Landroid/content/res/ColorStateList;.getDefaultColor:()I` @kind virtual;
  #L1db5ba.  v0:= temp;
  #L1db5bc.  return v0;
}
procedure `int` `getBadgeGravity`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeGravity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db5d0.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db5d4.  call temp:= `access$500`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$500:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db5da.  v0:= temp;
  #L1db5dc.  return v0;
}
procedure `int` `getBadgeTextColor`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeTextColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db5f0.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1db5f4.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1db5fa.  v0:= temp @kind object;
  #L1db5fc.  call temp:= `getColor`(v0) @signature `Landroid/text/TextPaint;.getColor:()I` @kind virtual;
  #L1db602.  v0:= temp;
  #L1db604.  return v0;
}
procedure `java.lang.CharSequence` `getContentDescription`(`com.google.android.material.badge.BadgeDrawable` v7 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getContentDescription:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1db720.  call temp:= `isVisible`(v7) @signature `Lcom/google/android/material/badge/BadgeDrawable;.isVisible:()Z` @kind virtual;
  #L1db726.  v0:= temp;
  #L1db728.  v1:= 0I;
  #L1db72a.  if v0 != 0 then goto L1db730;
  #L1db72e.  return v1 @kind object;
  #L1db730.  call temp:= `hasNumber`(v7) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L1db736.  v0:= temp;
  #L1db738.  if v0 == 0 then goto L1db7e2;
  #L1db73c.  v0:= v7.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db740.  call temp:= `access$1000`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$1000:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db746.  v0:= temp;
  #L1db748.  if v0 <= 0 then goto L1db7e0;
  #L1db74c.  v0:= v7.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1db750.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1db756.  v0:= temp @kind object;
  #L1db758.  v0:= (`android.content.Context`) v0 @kind object;
  #L1db75c.  if v0 != 0 then goto L1db762;
  #L1db760.  return v1 @kind object;
  #L1db762.  call temp:= `getNumber`(v7) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L1db768.  v1:= temp;
  #L1db76a.  v2:= v7.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int`;
  #L1db76e.  v3:= 0I;
  #L1db770.  v4:= 1I;
  #L1db772.  if v1 > v2 then goto L1db7b6;
  #L1db776.  
  #L1db778.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1db77e.  v1:= temp @kind object;
  #L1db780.  v2:= v7.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db784.  call temp:= `access$1000`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$1000:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db78a.  v2:= temp;
  #L1db78c.  call temp:= `getNumber`(v7) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L1db792.  v5:= temp;
  #L1db794.  v4:= new `java.lang.Object`[v4];
  #L1db798.  call temp:= `getNumber`(v7) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L1db79e.  v6:= temp;
  #L1db7a0.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1db7a6.  v6:= temp @kind object;
  #L1db7a8.  v4[v3]:= v6 @kind object;
  #L1db7ac.  call temp:= `getQuantityString`(v1, v2, v5, v4) @signature `Landroid/content/res/Resources;.getQuantityString:(II[Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L1db7b2.  v1:= temp @kind object;
  #L1db7b4.  return v1 @kind object;
  #L1db7b6.  v1:= v7.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db7ba.  call temp:= `access$1100`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$1100:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db7c0.  v1:= temp;
  #L1db7c2.  v2:= new `java.lang.Object`[v4];
  #L1db7c6.  v4:= v7.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int`;
  #L1db7ca.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1db7d0.  v4:= temp @kind object;
  #L1db7d2.  v2[v3]:= v4 @kind object;
  #L1db7d6.  call temp:= `getString`(v0, v1, v2) @signature `Landroid/content/Context;.getString:(I[Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L1db7dc.  v1:= temp @kind object;
  #L1db7de.  return v1 @kind object;
  #L1db7e0.  return v1 @kind object;
  #L1db7e2.  v0:= v7.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db7e6.  call temp:= `access$900`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$900:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)Ljava/lang/CharSequence;` @kind static;
  #L1db7ec.  v0:= temp @kind object;
  #L1db7ee.  return v0 @kind object;
}
procedure `android.widget.FrameLayout` `getCustomBadgeParent`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getCustomBadgeParent:()Landroid/widget/FrameLayout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db440.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1db444.  if v0 == 0 then goto L1db456;
  #L1db448.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1db44e.  v0:= temp @kind object;
  #L1db450.  v0:= (`android.widget.FrameLayout`) v0 @kind object;
  #L1db454.  goto L1db458;
  #L1db456.  v0:= 0I;
  #L1db458.  return v0 @kind object;
}
procedure `int` `getHorizontalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getHorizontalOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db618.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db61c.  call temp:= `access$600`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$600:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db622.  v0:= temp;
  #L1db624.  return v0;
}
procedure `int` `getIntrinsicHeight`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db638.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L1db63c.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1db642.  v0:= temp;
  #L1db644.  return v0;
}
procedure `int` `getIntrinsicWidth`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db658.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L1db65c.  call temp:= `width`(v0) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1db662.  v0:= temp;
  #L1db664.  return v0;
}
procedure `int` `getMaxCharacterCount`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getMaxCharacterCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db678.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db67c.  call temp:= `access$100`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$100:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db682.  v0:= temp;
  #L1db684.  return v0;
}
procedure `int` `getNumber`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db698.  call temp:= `hasNumber`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L1db69e.  v0:= temp;
  #L1db6a0.  if v0 != 0 then goto L1db6a8;
  #L1db6a4.  v0:= 0I;
  #L1db6a6.  return v0;
  #L1db6a8.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db6ac.  call temp:= `access$200`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$200:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db6b2.  v0:= temp;
  #L1db6b4.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db6c8.  v0:= -3I;
  #L1db6ca.  return v0;
}
procedure `com.google.android.material.badge.BadgeDrawable$SavedState` `getSavedState`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getSavedState:()Lcom/google/android/material/badge/BadgeDrawable$SavedState;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db570.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db574.  return v0 @kind object;
}
procedure `int` `getVerticalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getVerticalOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db6dc.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db6e0.  call temp:= `access$700`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$700:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db6e6.  v0:= temp;
  #L1db6e8.  return v0;
}
procedure `boolean` `hasNumber`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1db46c.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1db470.  call temp:= `access$200`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$200:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1db476.  v0:= temp;
  #L1db478.  v1:= -1I;
  #L1db47a.  if v0 == v1 then goto L1db482;
  #L1db47e.  v0:= 1I;
  #L1db480.  goto L1db484;
  #L1db482.  v0:= 0I;
  #L1db484.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db498.  v0:= 0I;
  #L1db49a.  return v0;
}
procedure `boolean` `onStateChange`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int`[] v2 @kind object @name `state`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onStateChange:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db4ac.  call temp:= `onStateChange`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.onStateChange:([I)Z` @kind super;
  #L1db4b2.  v0:= temp;
  #L1db4b4.  return v0;
}
procedure `void` `onTextSizeChange`(`com.google.android.material.badge.BadgeDrawable` v0 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onTextSizeChange:()V` @AccessFlag PUBLIC {
    temp;

  #L1dbcec.  call `invalidateSelf`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1dbcf2.  return @kind void;
}
procedure `void` `setAlpha`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 @name `alpha`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbd94.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbd98.  call temp:= `access$802`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$802:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbd9e.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dbda2.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1dbda8.  v0:= temp @kind object;
  #L1dbdaa.  call `setAlpha`(v0, v2) @signature `Landroid/text/TextPaint;.setAlpha:(I)V` @kind virtual;
  #L1dbdb0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1dbdb6.  return @kind void;
}
procedure `void` `setBackgroundColor`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `int` v3 @name `backgroundColor`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBackgroundColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbdc8.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbdcc.  call temp:= `access$302`(v0, v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$302:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbdd2.  call temp:= `valueOf`(v3) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L1dbdd8.  v0:= temp @kind object;
  #L1dbdda.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L1dbdde.  call temp:= `getFillColor`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L1dbde4.  v1:= temp @kind object;
  #L1dbde6.  if v1 == v0 then goto L1dbdfa;
  #L1dbdea.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L1dbdee.  call `setFillColor`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1dbdf4.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1dbdfa.  return @kind void;
}
procedure `void` `setBadgeGravity`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `int` v3 @name `gravity`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBadgeGravity:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbe0c.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbe10.  call temp:= `access$500`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$500:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbe16.  v0:= temp;
  #L1dbe18.  if v0 == v3 then goto L1dbe68;
  #L1dbe1c.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbe20.  call temp:= `access$502`(v0, v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$502:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbe26.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.anchorViewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1dbe2a.  if v0 == 0 then goto L1dbe68;
  #L1dbe2e.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1dbe34.  v0:= temp @kind object;
  #L1dbe36.  if v0 == 0 then goto L1dbe68;
  #L1dbe3a.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.anchorViewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1dbe3e.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1dbe44.  v0:= temp @kind object;
  #L1dbe46.  v0:= (`android.view.View`) v0 @kind object;
  #L1dbe4a.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1dbe4e.  if v1 == 0 then goto L1dbe60;
  #L1dbe52.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1dbe58.  v1:= temp @kind object;
  #L1dbe5a.  v1:= (`android.widget.FrameLayout`) v1 @kind object;
  #L1dbe5e.  goto L1dbe62;
  #L1dbe60.  v1:= 0I;
  #L1dbe62.  call `updateBadgeCoordinates`(v2, v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/widget/FrameLayout;)V` @kind virtual;
  #L1dbe68.  return @kind void;
}
procedure `void` `setBadgeTextColor`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 @name `badgeTextColor`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBadgeTextColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbe7c.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbe80.  call temp:= `access$402`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$402:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbe86.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dbe8a.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1dbe90.  v0:= temp @kind object;
  #L1dbe92.  call temp:= `getColor`(v0) @signature `Landroid/text/TextPaint;.getColor:()I` @kind virtual;
  #L1dbe98.  v0:= temp;
  #L1dbe9a.  if v0 == v2 then goto L1dbeb6;
  #L1dbe9e.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dbea2.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1dbea8.  v0:= temp @kind object;
  #L1dbeaa.  call `setColor`(v0, v2) @signature `Landroid/text/TextPaint;.setColor:(I)V` @kind virtual;
  #L1dbeb0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1dbeb6.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.badge.BadgeDrawable` v0 @kind this, `android.graphics.ColorFilter` v1 @kind object @name `colorFilter`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;

  #L1dbec8.  return @kind void;
}
procedure `void` `setContentDescriptionExceedsMaxBadgeNumberStringResource`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 @name `stringsResource`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setContentDescriptionExceedsMaxBadgeNumberStringResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbedc.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbee0.  call temp:= `access$1102`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$1102:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbee6.  return @kind void;
}
procedure `void` `setContentDescriptionNumberless`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object @name `charSequence`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setContentDescriptionNumberless:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbef8.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbefc.  call temp:= `access$902`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$902:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L1dbf02.  return @kind void;
}
procedure `void` `setContentDescriptionQuantityStringsResource`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 @name `stringsResource`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setContentDescriptionQuantityStringsResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbf14.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbf18.  call temp:= `access$1002`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$1002:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbf1e.  return @kind void;
}
procedure `void` `setHorizontalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 @name `px`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setHorizontalOffset:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbf30.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbf34.  call temp:= `access$602`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$602:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbf3a.  call `updateCenterAndBounds`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L1dbf40.  return @kind void;
}
procedure `void` `setMaxCharacterCount`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `int` v3 @name `maxCharacterCount`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setMaxCharacterCount:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbf54.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbf58.  call temp:= `access$100`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$100:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbf5e.  v0:= temp;
  #L1dbf60.  if v0 == v3 then goto L1dbf8c;
  #L1dbf64.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbf68.  call temp:= `access$102`(v0, v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$102:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbf6e.  call `updateMaxBadgeNumber`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateMaxBadgeNumber:()V` @kind direct;
  #L1dbf74.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dbf78.  v1:= 1I;
  #L1dbf7a.  call `setTextWidthDirty`(v0, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextWidthDirty:(Z)V` @kind virtual;
  #L1dbf80.  call `updateCenterAndBounds`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L1dbf86.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1dbf8c.  return @kind void;
}
procedure `void` `setNumber`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `int` v3 @name `number`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setNumber:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbfa0.  v0:= 0I;
  #L1dbfa2.  call temp:= `max`(v0, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1dbfa8.  v3:= temp;
  #L1dbfaa.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbfae.  call temp:= `access$200`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$200:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;)I` @kind static;
  #L1dbfb4.  v0:= temp;
  #L1dbfb6.  if v0 == v3 then goto L1dbfdc;
  #L1dbfba.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dbfbe.  call temp:= `access$202`(v0, v3) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$202:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dbfc4.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1dbfc8.  v1:= 1I;
  #L1dbfca.  call `setTextWidthDirty`(v0, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextWidthDirty:(Z)V` @kind virtual;
  #L1dbfd0.  call `updateCenterAndBounds`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L1dbfd6.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1dbfdc.  return @kind void;
}
procedure `void` `setVerticalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 @name `px`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVerticalOffset:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dc074.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dc078.  call temp:= `access$702`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$702:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;I)I` @kind static;
  #L1dc07e.  call `updateCenterAndBounds`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L1dc084.  return @kind void;
}
procedure `void` `setVisible`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `boolean` v2 @name `visible`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dc098.  v0:= 0I;
  #L1dc09a.  call temp:= `setVisible`(v1, v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVisible:(ZZ)Z` @kind virtual;
  #L1dc0a0.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.savedState` @type ^`com.google.android.material.badge.BadgeDrawable$SavedState` @kind object;
  #L1dc0a4.  call temp:= `access$002`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable$SavedState;.access$002:(Lcom/google/android/material/badge/BadgeDrawable$SavedState;Z)Z` @kind static;
  #L1dc0aa.  v0:= `@@com.google.android.material.badge.BadgeUtils.USE_COMPAT_PARENT` @type ^`boolean` @kind boolean;
  #L1dc0ae.  if v0 == 0 then goto L1dc0dc;
  #L1dc0b2.  call temp:= `getCustomBadgeParent`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getCustomBadgeParent:()Landroid/widget/FrameLayout;` @kind virtual;
  #L1dc0b8.  v0:= temp @kind object;
  #L1dc0ba.  if v0 == 0 then goto L1dc0dc;
  #L1dc0be.  if v2 != 0 then goto L1dc0dc;
  #L1dc0c2.  call temp:= `getCustomBadgeParent`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getCustomBadgeParent:()Landroid/widget/FrameLayout;` @kind virtual;
  #L1dc0c8.  v0:= temp @kind object;
  #L1dc0ca.  call temp:= `getParent`(v0) @signature `Landroid/widget/FrameLayout;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L1dc0d0.  v0:= temp @kind object;
  #L1dc0d2.  v0:= (`android.view.ViewGroup`) v0 @kind object;
  #L1dc0d6.  call `invalidate`(v0) @signature `Landroid/view/ViewGroup;.invalidate:()V` @kind virtual;
  #L1dc0dc.  return @kind void;
}
procedure `void` `updateBadgeCoordinates`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `android.view.View` v2 @kind object @name `anchorView`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dc208.  v0:= 0I;
  #L1dc20a.  call `updateBadgeCoordinates`(v1, v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/widget/FrameLayout;)V` @kind virtual;
  #L1dc210.  return @kind void;
}
procedure `void` `updateBadgeCoordinates`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `android.view.View` v3 @kind object @name `anchorView`, `android.view.ViewGroup` v4 @kind object @name `customBadgeParent`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/view/ViewGroup;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dc224.  v0:= instanceof @variable v4 @type ^`android.widget.FrameLayout` @kind boolean;
  #L1dc228.  if v0 == 0 then goto L1dc23a;
  #L1dc22c.  v0:= v4 @kind object;
  #L1dc22e.  v0:= (`android.widget.FrameLayout`) v0 @kind object;
  #L1dc232.  call `updateBadgeCoordinates`(v2, v3, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/widget/FrameLayout;)V` @kind virtual;
  #L1dc238.  return @kind void;
  #L1dc23a.  v0:= new `java.lang.IllegalArgumentException`;
  #L1dc23e.  v1:= "customBadgeParent must be a FrameLayout" @kind object;
  #L1dc242.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dc248.  throw v0;
}
procedure `void` `updateBadgeCoordinates`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `android.view.View` v2 @kind object @name `anchorView`, `android.widget.FrameLayout` v3 @kind object @name `customBadgeParent`) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/widget/FrameLayout;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dc25c.  v0:= new `java.lang.ref.WeakReference`;
  #L1dc260.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1dc266.  v1.`com.google.android.material.badge.BadgeDrawable.anchorViewRef` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L1dc26a.  v0:= `@@com.google.android.material.badge.BadgeUtils.USE_COMPAT_PARENT` @type ^`boolean` @kind boolean;
  #L1dc26e.  if v0 == 0 then goto L1dc27e;
  #L1dc272.  if v3 != 0 then goto L1dc27e;
  #L1dc276.  call `tryWrapAnchorInCompatParent`(v1, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.tryWrapAnchorInCompatParent:(Landroid/view/View;)V` @kind direct;
  #L1dc27c.  goto L1dc28c;
  #L1dc27e.  v0:= new `java.lang.ref.WeakReference`;
  #L1dc282.  call `<init>`(v0, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1dc288.  v1.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L1dc28c.  v0:= `@@com.google.android.material.badge.BadgeUtils.USE_COMPAT_PARENT` @type ^`boolean` @kind boolean;
  #L1dc290.  if v0 != 0 then goto L1dc29a;
  #L1dc294.  call `updateAnchorParentToNotClip`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateAnchorParentToNotClip:(Landroid/view/View;)V` @kind static;
  #L1dc29a.  call `updateCenterAndBounds`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L1dc2a0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1dc2a6.  return @kind void;
}
