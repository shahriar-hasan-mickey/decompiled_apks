record `com.google.android.material.drawable.DrawableUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.android.material.drawable.DrawableUtils` v0 @kind this) @signature `Lcom/google/android/material/drawable/DrawableUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1f85f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f85f6.  return @kind void;
}
procedure `android.util.AttributeSet` `parseDrawableXml`(`android.content.Context` v5 @kind object @name `context`, `int` v6 @name `id`, `java.lang.CharSequence` v7 @kind object @name `startTag`) @signature `Lcom/google/android/material/drawable/DrawableUtils;.parseDrawableXml:(Landroid/content/Context;ILjava/lang/CharSequence;)Landroid/util/AttributeSet;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1f8500.  call temp:= `getResources`(v5) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1f8506.  v0:= temp @kind object;
  #L1f8508.  call temp:= `getXml`(v0, v6) @signature `Landroid/content/res/Resources;.getXml:(I)Landroid/content/res/XmlResourceParser;` @kind virtual;
  #L1f850e.  v0:= temp @kind object;
  #L1f8510.  call temp:= `next`(v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.next:()I` @kind interface;
  #L1f8516.  v1:= temp;
  #L1f8518.  v2:= 2I;
  #L1f851a.  if v1 == v2 then goto L1f8524;
  #L1f851e.  v3:= 1I;
  #L1f8520.  if v1 != v3 then goto L1f8510;
  #L1f8524.  if v1 != v2 then goto L1f857e;
  #L1f8528.  call temp:= `getName`(v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.getName:()Ljava/lang/String;` @kind interface;
  #L1f852e.  v2:= temp @kind object;
  #L1f8530.  call temp:= `equals`(v2, v7) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L1f8536.  v2:= temp;
  #L1f8538.  if v2 == 0 then goto L1f8546;
  #L1f853c.  call temp:= `asAttributeSet`(v0) @signature `Landroid/util/Xml;.asAttributeSet:(Lorg/xmlpull/v1/XmlPullParser;)Landroid/util/AttributeSet;` @kind static;
  #L1f8542.  v2:= temp @kind object;
  #L1f8544.  return v2 @kind object;
  #L1f8546.  v2:= new `org.xmlpull.v1.XmlPullParserException`;
  #L1f854a.  v3:= new `java.lang.StringBuilder`;
  #L1f854e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f8554.  v4:= "Must have a <" @kind object;
  #L1f8558.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f855e.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8564.  v4:= "> start tag" @kind object;
  #L1f8568.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f856e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f8574.  v3:= temp @kind object;
  #L1f8576.  call `<init>`(v2, v3) @signature `Lorg/xmlpull/v1/XmlPullParserException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f857c.  throw v2;
  #L1f857e.  v2:= new `org.xmlpull.v1.XmlPullParserException`;
  #L1f8582.  v3:= "No start tag found" @kind object;
  #L1f8586.  call `<init>`(v2, v3) @signature `Lorg/xmlpull/v1/XmlPullParserException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f858c.  throw v2;
  #L1f858e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1f8590.  goto L1f8594;
  #L1f8592.  v0:= Exception @type ^`org.xmlpull.v1.XmlPullParserException` @kind object;
  #L1f8594.  v1:= new `android.content.res.Resources$NotFoundException`;
  #L1f8598.  v2:= new `java.lang.StringBuilder`;
  #L1f859c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f85a2.  v3:= "Can't load badge resource ID #0x" @kind object;
  #L1f85a6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f85ac.  call temp:= `toHexString`(v6) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1f85b2.  v3:= temp @kind object;
  #L1f85b4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f85ba.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f85c0.  v2:= temp @kind object;
  #L1f85c2.  call `<init>`(v1, v2) @signature `Landroid/content/res/Resources$NotFoundException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f85c8.  call temp:= `initCause`(v1, v0) @signature `Landroid/content/res/Resources$NotFoundException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1f85ce.  throw v1;
  catch `org.xmlpull.v1.XmlPullParserException` @[L1f8500..L1f858e] goto L1f8592;
  catch `java.io.IOException` @[L1f8500..L1f858e] goto L1f858e;
}
procedure `void` `setRippleDrawableRadius`(`android.graphics.drawable.RippleDrawable` v6 @kind object @name `drawable`, `int` v7 @name `radius`) @signature `Lcom/google/android/material/drawable/DrawableUtils;.setRippleDrawableRadius:(Landroid/graphics/drawable/RippleDrawable;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1f8608.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1f860c.  v1:= 23I;
  #L1f8610.  if v0 < v1 then goto L1f861c;
  #L1f8614.  call `setRadius`(v6, v7) @signature `Landroid/graphics/drawable/RippleDrawable;.setRadius:(I)V` @kind virtual;
  #L1f861a.  goto L1f8654;
  #L1f861c.  v0:= constclass @type ^`android.graphics.drawable.RippleDrawable` @kind object;
  #L1f8620.  v1:= "setMaxRadius" @kind object;
  #L1f8624.  v2:= 1I;
  #L1f8626.  v3:= new `java.lang.Class`[v2];
  #L1f862a.  v4:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L1f862e.  v5:= 0I;
  #L1f8630.  v3[v5]:= v4 @kind object;
  #L1f8634.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1f863a.  v0:= temp @kind object;
  #L1f863c.  v1:= new `java.lang.Object`[v2];
  #L1f8640.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1f8646.  v2:= temp @kind object;
  #L1f8648.  v1[v5]:= v2 @kind object;
  #L1f864c.  call temp:= `invoke`(v0, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1f8652.  
  #L1f8654.  return @kind void;
  #L1f8656.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1f8658.  goto L1f8660;
  #L1f865a.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1f865c.  goto L1f8660;
  #L1f865e.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L1f8660.  v1:= new `java.lang.IllegalStateException`;
  #L1f8664.  v2:= "Couldn't set RippleDrawable radius" @kind object;
  #L1f8668.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1f866e.  throw v1;
  catch `java.lang.NoSuchMethodException` @[L1f861c..L1f8652] goto L1f865e;
  catch `java.lang.reflect.InvocationTargetException` @[L1f861c..L1f8652] goto L1f865a;
  catch `java.lang.IllegalAccessException` @[L1f861c..L1f8652] goto L1f8656;
}
procedure `android.graphics.PorterDuffColorFilter` `updateTintFilter`(`android.graphics.drawable.Drawable` v2 @kind object @name `drawable`, `android.content.res.ColorStateList` v3 @kind object @name `tint`, `android.graphics.PorterDuff$Mode` v4 @kind object @name `tintMode`) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1f84c4.  if v3 == 0 then goto L1f84ec;
  #L1f84c8.  if v4 != 0 then goto L1f84ce;
  #L1f84cc.  goto L1f84ec;
  #L1f84ce.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1f84d4.  v0:= temp @kind object;
  #L1f84d6.  v1:= 0I;
  #L1f84d8.  call temp:= `getColorForState`(v3, v0, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1f84de.  v0:= temp;
  #L1f84e0.  v1:= new `android.graphics.PorterDuffColorFilter`;
  #L1f84e4.  call `<init>`(v1, v0, v4) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L1f84ea.  return v1 @kind object;
  #L1f84ec.  v0:= 0I;
  #L1f84ee.  return v0 @kind object;
}
