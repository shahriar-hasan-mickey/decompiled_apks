record `com.google.android.material.shape.EdgeTreatment` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.google.android.material.shape.EdgeTreatment` v0 @kind this) @signature `Lcom/google/android/material/shape/EdgeTreatment;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L20d26c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20d272.  return @kind void;
}
procedure `boolean` `forceIntersection`(`com.google.android.material.shape.EdgeTreatment` v1 @kind this) @signature `Lcom/google/android/material/shape/EdgeTreatment;.forceIntersection:()Z` @AccessFlag  {
    temp;
    v0;

  #L20d258.  v0:= 0I;
  #L20d25a.  return v0;
}
procedure `void` `getEdgePath`(`com.google.android.material.shape.EdgeTreatment` v1 @kind this, `float` v2 @name `length`, `float` v3 @name `center`, `float` v4 @name `interpolation`, `com.google.android.material.shape.ShapePath` v5 @kind object @name `shapePath`) @signature `Lcom/google/android/material/shape/EdgeTreatment;.getEdgePath:(FFFLcom/google/android/material/shape/ShapePath;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20d2a4.  v0:= 0I;
  #L20d2a6.  call `lineTo`(v5, v2, v0) @signature `Lcom/google/android/material/shape/ShapePath;.lineTo:(FF)V` @kind virtual;
  #L20d2ac.  return @kind void;
}
procedure `void` `getEdgePath`(`com.google.android.material.shape.EdgeTreatment` v1 @kind this, `float` v2 @name `length`, `float` v3 @name `interpolation`, `com.google.android.material.shape.ShapePath` v4 @kind object @name `shapePath`) @signature `Lcom/google/android/material/shape/EdgeTreatment;.getEdgePath:(FFLcom/google/android/material/shape/ShapePath;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20d284.  v0:= 2.0F;
  #L20d288.  v0:= v2 / v0 @kind float;
  #L20d28c.  call `getEdgePath`(v1, v2, v0, v3, v4) @signature `Lcom/google/android/material/shape/EdgeTreatment;.getEdgePath:(FFFLcom/google/android/material/shape/ShapePath;)V` @kind virtual;
  #L20d292.  return @kind void;
}
