record `com.google.android.material.shape.MaterialShapeDrawable` @kind class @AccessFlag PUBLIC extends `android.graphics.drawable.Drawable` @kind class, `androidx.core.graphics.drawable.TintAwareDrawable` @kind interface, `com.google.android.material.shape.Shapeable` @kind interface {
  `java.util.BitSet` `com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` `com.google.android.material.shape.MaterialShapeDrawable.drawableState` @AccessFlag PRIVATE;
  `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix` `com.google.android.material.shape.MaterialShapeDrawable.matrix` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Path` `com.google.android.material.shape.MaterialShapeDrawable.path` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearancePathProvider` `com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` `com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Region` `com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @AccessFlag PRIVATE;
  `com.google.android.material.shadow.ShadowRenderer` `com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearanceModel` `com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.Region` `com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_ALWAYS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_NEVER` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_OFFSET_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_RADIUS_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.shape.MaterialShapeDrawable.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Paint` `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L20e3b4.  v0:= constclass @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L20e3b8.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L20e3be.  v0:= temp @kind object;
  #L20e3c0.  `@@com.google.android.material.shape.MaterialShapeDrawable.TAG` @type ^`java.lang.String` := v0 @kind object;
  #L20e3c4.  v0:= new `android.graphics.Paint`;
  #L20e3c8.  v1:= 1I;
  #L20e3ca.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L20e3d0.  `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L20e3d4.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L20e3e8.  v0:= new `com.google.android.material.shape.ShapeAppearanceModel`;
  #L20e3ec.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.<init>:()V` @kind direct;
  #L20e3f2.  call `<init>`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L20e3f8.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.Context` v2 @kind object @name `context`, `android.util.AttributeSet` v3 @kind object @name `attrs`, `int` v4 @name `defStyleAttr`, `int` v5 @name `defStyleRes`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L20e40c.  call temp:= `builder`(v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.builder:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind static;
  #L20e412.  v0:= temp @kind object;
  #L20e414.  call temp:= `build`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.build:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L20e41a.  v0:= temp @kind object;
  #L20e41c.  call `<init>`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L20e422.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this, `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` v6 @kind object @name `drawableState`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20e434.  call `<init>`(v5) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L20e43a.  v0:= 4I;
  #L20e43c.  v1:= new `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[v0];
  #L20e440.  v5.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] := v1 @kind object;
  #L20e444.  v0:= new `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[v0];
  #L20e448.  v5.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] := v0 @kind object;
  #L20e44c.  v0:= new `java.util.BitSet`;
  #L20e450.  v1:= 8I;
  #L20e454.  call `<init>`(v0, v1) @signature `Ljava/util/BitSet;.<init>:(I)V` @kind direct;
  #L20e45a.  v5.`com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @type ^`java.util.BitSet` := v0 @kind object;
  #L20e45e.  v0:= new `android.graphics.Matrix`;
  #L20e462.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L20e468.  v5.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L20e46c.  v0:= new `android.graphics.Path`;
  #L20e470.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L20e476.  v5.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` := v0 @kind object;
  #L20e47a.  v0:= new `android.graphics.Path`;
  #L20e47e.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L20e484.  v5.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` := v0 @kind object;
  #L20e488.  v0:= new `android.graphics.RectF`;
  #L20e48c.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L20e492.  v5.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L20e496.  v0:= new `android.graphics.RectF`;
  #L20e49a.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L20e4a0.  v5.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L20e4a4.  v0:= new `android.graphics.Region`;
  #L20e4a8.  call `<init>`(v0) @signature `Landroid/graphics/Region;.<init>:()V` @kind direct;
  #L20e4ae.  v5.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` := v0 @kind object;
  #L20e4b2.  v0:= new `android.graphics.Region`;
  #L20e4b6.  call `<init>`(v0) @signature `Landroid/graphics/Region;.<init>:()V` @kind direct;
  #L20e4bc.  v5.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` := v0 @kind object;
  #L20e4c0.  v0:= new `android.graphics.Paint`;
  #L20e4c4.  v1:= 1I;
  #L20e4c6.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L20e4cc.  v5.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L20e4d0.  v2:= new `android.graphics.Paint`;
  #L20e4d4.  call `<init>`(v2, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L20e4da.  v5.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L20e4de.  v3:= new `com.google.android.material.shadow.ShadowRenderer`;
  #L20e4e2.  call `<init>`(v3) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.<init>:()V` @kind direct;
  #L20e4e8.  v5.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` := v3 @kind object;
  #L20e4ec.  
  #L20e4ee.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L20e4f4.  v3:= temp @kind object;
  #L20e4f6.  call temp:= `getThread`(v3) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L20e4fc.  v3:= temp @kind object;
  #L20e4fe.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L20e504.  v4:= temp @kind object;
  #L20e506.  if v3 != v4 then goto L20e514;
  #L20e50a.  call temp:= `getInstance`() @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getInstance:()Lcom/google/android/material/shape/ShapeAppearancePathProvider;` @kind static;
  #L20e510.  v3:= temp @kind object;
  #L20e512.  goto L20e51e;
  #L20e514.  v3:= new `com.google.android.material.shape.ShapeAppearancePathProvider`;
  #L20e518.  call `<init>`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.<init>:()V` @kind direct;
  #L20e51e.  v5.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` := v3 @kind object;
  #L20e522.  v3:= new `android.graphics.RectF`;
  #L20e526.  call `<init>`(v3) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L20e52c.  v5.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` := v3 @kind object;
  #L20e530.  v5.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` := v1 @kind boolean;
  #L20e534.  v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` := v6 @kind object;
  #L20e538.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L20e53c.  call `setStyle`(v2, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L20e542.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L20e546.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L20e54c.  v0:= `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` @kind object;
  #L20e550.  v1:= -1I;
  #L20e552.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L20e558.  v1:= new `android.graphics.PorterDuffXfermode`;
  #L20e55c.  v2:= `@@android.graphics.PorterDuff$Mode.DST_OUT` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L20e560.  call `<init>`(v1, v2) @signature `Landroid/graphics/PorterDuffXfermode;.<init>:(Landroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L20e566.  call temp:= `setXfermode`(v0, v1) @signature `Landroid/graphics/Paint;.setXfermode:(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;` @kind virtual;
  #L20e56c.  call temp:= `updateTintFilter`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L20e572.  call temp:= `getState`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getState:()[I` @kind virtual;
  #L20e578.  v0:= temp @kind object;
  #L20e57a.  call temp:= `updateColorsForState`(v5, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @kind direct;
  #L20e580.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable$1`;
  #L20e584.  call `<init>`(v0, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$1;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable;)V` @kind direct;
  #L20e58a.  v5.`com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` := v0 @kind object;
  #L20e58e.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` v1 @kind object @name `x0`, `com.google.android.material.shape.MaterialShapeDrawable$1` v2 @kind object @name `x1`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;Lcom/google/android/material/shape/MaterialShapeDrawable$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L20e5a0.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L20e5a6.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object @name `shapeAppearanceModel`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L20e5b8.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState`;
  #L20e5bc.  v1:= 0I;
  #L20e5be.  call `<init>`(v0, v3, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;Lcom/google/android/material/elevation/ElevationOverlayProvider;)V` @kind direct;
  #L20e5c4.  call `<init>`(v2, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L20e5ca.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.ShapePathModel` v1 @kind object @name `shapePathModel`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapePathModel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L20e5dc.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L20e5e2.  return @kind void;
}
procedure `java.util.BitSet` `access$000`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$000:(Lcom/google/android/material/shape/MaterialShapeDrawable;)Ljava/util/BitSet;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L20e39c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @type ^`java.util.BitSet` @kind object;
  #L20e3a0.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `access$100`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$100:(Lcom/google/android/material/shape/MaterialShapeDrawable;)[Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L20dff4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L20dff8.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `access$200`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$200:(Lcom/google/android/material/shape/MaterialShapeDrawable;)[Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L20e00c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L20e010.  return v0 @kind object;
}
procedure `boolean` `access$402`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object @name `x0`, `boolean` v1 @name `x1`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$402:(Lcom/google/android/material/shape/MaterialShapeDrawable;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20daf8.  v0.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v1 @kind boolean;
  #L20dafc.  return v1;
}
procedure `android.graphics.PorterDuffColorFilter` `calculatePaintColorTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.Paint` v5 @kind object @name `paint`, `boolean` v6 @name `requiresElevationOverlay`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePaintColorTintFilter:(Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20d950.  if v6 == 0 then goto L20d978;
  #L20d954.  call temp:= `getColor`(v5) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L20d95a.  v0:= temp;
  #L20d95c.  call temp:= `compositeElevationOverlayIfNeeded`(v4, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L20d962.  v1:= temp;
  #L20d964.  if v1 == v0 then goto L20d978;
  #L20d968.  v2:= new `android.graphics.PorterDuffColorFilter`;
  #L20d96c.  v3:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L20d970.  call `<init>`(v2, v1, v3) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L20d976.  return v2 @kind object;
  #L20d978.  v0:= 0I;
  #L20d97a.  return v0 @kind object;
}
procedure `void` `calculatePath`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.RectF` v7 @kind object @name `bounds`, `android.graphics.Path` v8 @kind object @name `path`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20e5f4.  call `calculatePathForSize`(v6, v7, v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L20e5fa.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e5fe.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L20e602.  v1:= 1.0F;
  #L20e606.  v0:= fcmpl(v0, v1);
  #L20e60a.  if v0 == 0 then goto L20e654;
  #L20e60e.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L20e612.  call `reset`(v0) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L20e618.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L20e61c.  v1:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e620.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L20e624.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e628.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L20e62c.  call temp:= `width`(v7) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L20e632.  v3:= temp;
  #L20e634.  v4:= 2.0F;
  #L20e638.  v3:= v3 / v4 @kind float;
  #L20e63a.  call temp:= `height`(v7) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L20e640.  v5:= temp;
  #L20e642.  v5:= v5 / v4 @kind float;
  #L20e644.  call `setScale`(v0, v1, v2, v3, v5) @signature `Landroid/graphics/Matrix;.setScale:(FFFF)V` @kind virtual;
  #L20e64a.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L20e64e.  call `transform`(v8, v0) @signature `Landroid/graphics/Path;.transform:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L20e654.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L20e658.  v1:= 1I;
  #L20e65a.  call `computeBounds`(v8, v0, v1) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L20e660.  return @kind void;
}
procedure `void` `calculateStrokePath`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateStrokePath:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20e6a8.  call temp:= `getStrokeInsetLength`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @kind direct;
  #L20e6ae.  v0:= temp;
  #L20e6b0.  v0:= -v0 @kind float;
  #L20e6b2.  
  #L20e6b4.  call temp:= `getShapeAppearanceModel`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L20e6ba.  v1:= temp @kind object;
  #L20e6bc.  v2:= new `com.google.android.material.shape.MaterialShapeDrawable$2`;
  #L20e6c0.  call `<init>`(v2, v6, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$2;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable;F)V` @kind direct;
  #L20e6c6.  call temp:= `withTransformedCornerSizes`(v1, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withTransformedCornerSizes:(Lcom/google/android/material/shape/ShapeAppearanceModel$CornerSizeUnaryOperator;)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L20e6cc.  v1:= temp @kind object;
  #L20e6ce.  v6.`com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @type ^`com.google.android.material.shape.ShapeAppearanceModel` := v1 @kind object;
  #L20e6d2.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L20e6d6.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e6da.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L20e6de.  call temp:= `getBoundsInsetByStroke`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @kind direct;
  #L20e6e4.  v4:= temp @kind object;
  #L20e6e6.  v5:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` @kind object;
  #L20e6ea.  call `calculatePath`(v2, v1, v3, v4, v5) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L20e6f0.  return @kind void;
}
procedure `android.graphics.PorterDuffColorFilter` `calculateTintColorTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object @name `tintList`, `android.graphics.PorterDuff$Mode` v4 @kind object @name `tintMode`, `boolean` v5 @name `requiresElevationOverlay`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintColorTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L20d98c.  call temp:= `getState`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getState:()[I` @kind virtual;
  #L20d992.  v0:= temp @kind object;
  #L20d994.  v1:= 0I;
  #L20d996.  call temp:= `getColorForState`(v3, v0, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L20d99c.  v0:= temp;
  #L20d99e.  if v5 == 0 then goto L20d9aa;
  #L20d9a2.  call temp:= `compositeElevationOverlayIfNeeded`(v2, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L20d9a8.  v0:= temp;
  #L20d9aa.  v1:= new `android.graphics.PorterDuffColorFilter`;
  #L20d9ae.  call `<init>`(v1, v0, v4) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L20d9b4.  return v1 @kind object;
}
procedure `android.graphics.PorterDuffColorFilter` `calculateTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `tintList`, `android.graphics.PorterDuff$Mode` v3 @kind object @name `tintMode`, `android.graphics.Paint` v4 @kind object @name `paint`, `boolean` v5 @name `requiresElevationOverlay`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L20d9c8.  if v2 == 0 then goto L20d9dc;
  #L20d9cc.  if v3 != 0 then goto L20d9d2;
  #L20d9d0.  goto L20d9dc;
  #L20d9d2.  call temp:= `calculateTintColorTintFilter`(v1, v2, v3, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintColorTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L20d9d8.  v0:= temp @kind object;
  #L20d9da.  goto L20d9e4;
  #L20d9dc.  call temp:= `calculatePaintColorTintFilter`(v1, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePaintColorTintFilter:(Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L20d9e2.  v0:= temp @kind object;
  #L20d9e4.  return v0 @kind object;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `createWithElevationOverlay`(`android.content.Context` v1 @kind object @name `context`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;)Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20df6c.  v0:= 0I;
  #L20df6e.  call temp:= `createWithElevationOverlay`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;F)Lcom/google/android/material/shape/MaterialShapeDrawable;` @kind static;
  #L20df74.  v0:= temp @kind object;
  #L20df76.  return v0 @kind object;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `createWithElevationOverlay`(`android.content.Context` v3 @kind object @name `context`, `float` v4 @name `elevation`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;F)Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20df88.  v0:= `@@com.google.android.material.R$attr.colorSurface` @type ^`int`;
  #L20df8c.  v1:= constclass @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L20df90.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L20df96.  v1:= temp @kind object;
  #L20df98.  call temp:= `getColor`(v3, v0, v1) @signature `Lcom/google/android/material/color/MaterialColors;.getColor:(Landroid/content/Context;ILjava/lang/String;)I` @kind static;
  #L20df9e.  v0:= temp;
  #L20dfa0.  v1:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L20dfa4.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L20dfaa.  call `initializeElevationOverlay`(v1, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L20dfb0.  call temp:= `valueOf`(v0) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L20dfb6.  v2:= temp @kind object;
  #L20dfb8.  call `setFillColor`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L20dfbe.  call `setElevation`(v1, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L20dfc4.  return v1 @kind object;
}
procedure `void` `drawCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object @name `canvas`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e7f4.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @type ^`java.util.BitSet` @kind object;
  #L20e7f8.  call temp:= `cardinality`(v0) @signature `Ljava/util/BitSet;.cardinality:()I` @kind virtual;
  #L20e7fe.  v0:= temp;
  #L20e800.  if v0 <= 0 then goto L20e812;
  #L20e804.  v0:= `@@com.google.android.material.shape.MaterialShapeDrawable.TAG` @type ^`java.lang.String` @kind object;
  #L20e808.  v1:= "Compatibility shadow requested but can't be drawn for all operations in this shape." @kind object;
  #L20e80c.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L20e812.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e816.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L20e81a.  if v0 == 0 then goto L20e834;
  #L20e81e.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20e822.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L20e826.  call temp:= `getShadowPaint`(v1) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.getShadowPaint:()Landroid/graphics/Paint;` @kind virtual;
  #L20e82c.  v1:= temp @kind object;
  #L20e82e.  call `drawPath`(v5, v0, v1) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L20e834.  v0:= 0I;
  #L20e836.  v1:= 4I;
  #L20e838.  if v0 >= v1 then goto L20e876;
  #L20e83c.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L20e840.  v1:= v1[v0] @kind object;
  #L20e844.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L20e848.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e84c.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20e850.  call `draw`(v1, v2, v3, v5) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.draw:(Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @kind virtual;
  #L20e856.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L20e85a.  v1:= v1[v0] @kind object;
  #L20e85e.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L20e862.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e866.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20e86a.  call `draw`(v1, v2, v3, v5) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.draw:(Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @kind virtual;
  #L20e870.  v0:= v0 + 1;
  #L20e874.  goto L20e836;
  #L20e876.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` @kind boolean;
  #L20e87a.  if v0 == 0 then goto L20e8b4;
  #L20e87e.  call temp:= `getShadowOffsetX`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @kind virtual;
  #L20e884.  v0:= temp;
  #L20e886.  call temp:= `getShadowOffsetY`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @kind virtual;
  #L20e88c.  v1:= temp;
  #L20e88e.  v2:= -v0 @kind int;
  #L20e890.  v2:= (`float`) v2 @kind i2f;
  #L20e892.  v3:= -v1 @kind int;
  #L20e894.  v3:= (`float`) v3 @kind i2f;
  #L20e896.  call `translate`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L20e89c.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20e8a0.  v3:= `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` @kind object;
  #L20e8a4.  call `drawPath`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L20e8aa.  v2:= (`float`) v0 @kind i2f;
  #L20e8ac.  v3:= (`float`) v1 @kind i2f;
  #L20e8ae.  call `translate`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L20e8b4.  return @kind void;
}
procedure `void` `drawFillShape`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawFillShape:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20e8c8.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L20e8cc.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20e8d0.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e8d4.  v4:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20e8d8.  call temp:= `getBoundsAsRectF`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20e8de.  v5:= temp @kind object;
  #L20e8e0.  v0:= v6 @kind object;
  #L20e8e2.  v1:= v7 @kind object;
  #L20e8e4.  call `drawShape`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L20e8ea.  return @kind void;
}
procedure `void` `drawShape`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.graphics.Canvas` v3 @kind object @name `canvas`, `android.graphics.Paint` v4 @kind object @name `paint`, `android.graphics.Path` v5 @kind object @name `path`, `com.google.android.material.shape.ShapeAppearanceModel` v6 @kind object @name `shapeAppearanceModel`, `android.graphics.RectF` v7 @kind object @name `bounds`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L20e928.  call temp:= `isRoundRect`(v6, v7) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.isRoundRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L20e92e.  v0:= temp;
  #L20e930.  if v0 == 0 then goto L20e958;
  #L20e934.  
  #L20e936.  call temp:= `getTopRightCornerSize`(v6) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L20e93c.  v0:= temp @kind object;
  #L20e93e.  call temp:= `getCornerSize`(v0, v7) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L20e944.  v0:= temp;
  #L20e946.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e94a.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L20e94e.  v0:= v0 * v1 @kind float;
  #L20e950.  call `drawRoundRect`(v3, v7, v0, v0, v4) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L20e956.  goto L20e95e;
  #L20e958.  call `drawPath`(v3, v5, v4) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L20e95e.  return @kind void;
}
procedure `void` `drawStrokeShape`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawStrokeShape:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20e970.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20e974.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` @kind object;
  #L20e978.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20e97c.  call temp:= `getBoundsInsetByStroke`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @kind direct;
  #L20e982.  v5:= temp @kind object;
  #L20e984.  v0:= v6 @kind object;
  #L20e986.  v1:= v7 @kind object;
  #L20e988.  call `drawShape`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L20e98e.  return @kind void;
}
procedure `android.graphics.RectF` `getBoundsInsetByStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L20da20.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L20da24.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20da2a.  v1:= temp @kind object;
  #L20da2c.  call `set`(v0, v1) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/RectF;)V` @kind virtual;
  #L20da32.  call temp:= `getStrokeInsetLength`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @kind direct;
  #L20da38.  v0:= temp;
  #L20da3a.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L20da3e.  call `inset`(v1, v0, v0) @signature `Landroid/graphics/RectF;.inset:(FF)V` @kind virtual;
  #L20da44.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L20da48.  return v1 @kind object;
}
procedure `float` `getStrokeInsetLength`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L20e128.  call temp:= `hasStroke`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @kind direct;
  #L20e12e.  v0:= temp;
  #L20e130.  if v0 == 0 then goto L20e148;
  #L20e134.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20e138.  call temp:= `getStrokeWidth`(v0) @signature `Landroid/graphics/Paint;.getStrokeWidth:()F` @kind virtual;
  #L20e13e.  v0:= temp;
  #L20e140.  v1:= 2.0F;
  #L20e144.  v0:= v0 / v1 @kind float;
  #L20e146.  return v0;
  #L20e148.  v0:= 0I;
  #L20e14a.  return v0;
}
procedure `boolean` `hasCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasCompatShadow:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L20db48.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20db4c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L20db50.  v1:= 1I;
  #L20db52.  if v0 == v1 then goto L20db7e;
  #L20db56.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20db5a.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20db5e.  if v0 <= 0 then goto L20db7e;
  #L20db62.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20db66.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L20db6a.  v2:= 2I;
  #L20db6c.  if v0 == v2 then goto L20db7c;
  #L20db70.  call temp:= `requiresCompatShadow`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.requiresCompatShadow:()Z` @kind virtual;
  #L20db76.  v0:= temp;
  #L20db78.  if v0 == 0 then goto L20db7e;
  #L20db7c.  goto L20db80;
  #L20db7e.  v1:= 0I;
  #L20db80.  return v1;
}
procedure `boolean` `hasFill`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasFill:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L20db94.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20db98.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L20db9c.  v1:= `@@android.graphics.Paint$Style.FILL_AND_STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L20dba0.  if v0 == v1 then goto L20dbba;
  #L20dba4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dba8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L20dbac.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L20dbb0.  if v0 != v1 then goto L20dbb6;
  #L20dbb4.  goto L20dbba;
  #L20dbb6.  v0:= 0I;
  #L20dbb8.  goto L20dbbc;
  #L20dbba.  v0:= 1I;
  #L20dbbc.  return v0;
}
procedure `boolean` `hasStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L20dbd0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dbd4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L20dbd8.  v1:= `@@android.graphics.Paint$Style.FILL_AND_STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L20dbdc.  if v0 == v1 then goto L20dbf0;
  #L20dbe0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dbe4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L20dbe8.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L20dbec.  if v0 != v1 then goto L20dc0a;
  #L20dbf0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20dbf4.  call temp:= `getStrokeWidth`(v0) @signature `Landroid/graphics/Paint;.getStrokeWidth:()F` @kind virtual;
  #L20dbfa.  v0:= temp;
  #L20dbfc.  v1:= 0I;
  #L20dbfe.  v0:= fcmpl(v0, v1);
  #L20dc02.  if v0 <= 0 then goto L20dc0a;
  #L20dc06.  v0:= 1I;
  #L20dc08.  goto L20dc0c;
  #L20dc0a.  v0:= 0I;
  #L20dc0c.  return v0;
}
procedure `void` `invalidateSelfIgnoreShape`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @AccessFlag PRIVATE {
    temp;

  #L20eab0.  call `invalidateSelf`(v0) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind super;
  #L20eab6.  return @kind void;
}
procedure `void` `maybeDrawCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v8 @kind this, `android.graphics.Canvas` v9 @kind object @name `canvas`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.maybeDrawCompatShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L20eac8.  call temp:= `hasCompatShadow`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasCompatShadow:()Z` @kind direct;
  #L20eace.  v0:= temp;
  #L20ead0.  if v0 != 0 then goto L20ead6;
  #L20ead4.  return @kind void;
  #L20ead6.  call temp:= `save`(v9) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L20eadc.  call `prepareCanvasForShadow`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.prepareCanvasForShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L20eae2.  v0:= v8.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` @kind boolean;
  #L20eae6.  if v0 != 0 then goto L20eaf8;
  #L20eaea.  call `drawCompatShadow`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L20eaf0.  call `restore`(v9) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L20eaf6.  return @kind void;
  #L20eaf8.  v0:= v8.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L20eafc.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L20eb02.  v0:= temp;
  #L20eb04.  call temp:= `getBounds`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L20eb0a.  v1:= temp @kind object;
  #L20eb0c.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L20eb12.  v1:= temp;
  #L20eb14.  v1:= (`float`) v1 @kind i2f;
  #L20eb16.  v0:= v0 - v1 @kind float;
  #L20eb18.  v0:= (`int`) v0 @kind f2i;
  #L20eb1a.  v1:= v8.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L20eb1e.  call temp:= `height`(v1) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L20eb24.  v1:= temp;
  #L20eb26.  call temp:= `getBounds`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L20eb2c.  v2:= temp @kind object;
  #L20eb2e.  call temp:= `height`(v2) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L20eb34.  v2:= temp;
  #L20eb36.  v2:= (`float`) v2 @kind i2f;
  #L20eb38.  v1:= v1 - v2 @kind float;
  #L20eb3a.  v1:= (`int`) v1 @kind f2i;
  #L20eb3c.  if v0 < 0 then goto L20ebf0;
  #L20eb40.  if v1 < 0 then goto L20ebf0;
  #L20eb44.  v2:= v8.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L20eb48.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L20eb4e.  v2:= temp;
  #L20eb50.  v2:= (`int`) v2 @kind f2i;
  #L20eb52.  v3:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20eb56.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20eb5a.  v3:= v3 * 2;
  #L20eb5e.  v2:= v2 + v3 @kind int;
  #L20eb60.  v2:= v2 + v0 @kind int;
  #L20eb62.  v3:= v8.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L20eb66.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L20eb6c.  v3:= temp;
  #L20eb6e.  v3:= (`int`) v3 @kind f2i;
  #L20eb70.  v4:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20eb74.  v4:= v4.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20eb78.  v4:= v4 * 2;
  #L20eb7c.  v3:= v3 + v4 @kind int;
  #L20eb7e.  v3:= v3 + v1 @kind int;
  #L20eb80.  v4:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L20eb84.  call temp:= `createBitmap`(v2, v3, v4) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L20eb8a.  v2:= temp @kind object;
  #L20eb8c.  v3:= new `android.graphics.Canvas`;
  #L20eb90.  call `<init>`(v3, v2) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L20eb96.  call temp:= `getBounds`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L20eb9c.  v4:= temp @kind object;
  #L20eb9e.  v4:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L20eba2.  v5:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20eba6.  v5:= v5.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20ebaa.  v4:= v4 - v5 @kind int;
  #L20ebac.  v4:= v4 - v0 @kind int;
  #L20ebae.  v4:= (`float`) v4 @kind i2f;
  #L20ebb0.  call temp:= `getBounds`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L20ebb6.  v5:= temp @kind object;
  #L20ebb8.  v5:= v5.`android.graphics.Rect.top` @type ^`int`;
  #L20ebbc.  v6:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ebc0.  v6:= v6.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20ebc4.  v5:= v5 - v6 @kind int;
  #L20ebc6.  v5:= v5 - v1 @kind int;
  #L20ebc8.  v5:= (`float`) v5 @kind i2f;
  #L20ebca.  v6:= -v4 @kind float;
  #L20ebcc.  v7:= -v5 @kind float;
  #L20ebce.  call `translate`(v3, v6, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L20ebd4.  call `drawCompatShadow`(v8, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L20ebda.  v6:= 0I;
  #L20ebdc.  call `drawBitmap`(v9, v2, v4, v5, v6) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L20ebe2.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L20ebe8.  call `restore`(v9) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L20ebee.  return @kind void;
  #L20ebf0.  v2:= new `java.lang.IllegalStateException`;
  #L20ebf4.  v3:= "Invalid shadow bounds. Check that the treatments result in a valid path." @kind object;
  #L20ebf8.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20ebfe.  throw v2;
}
procedure `int` `modulateAlpha`(`int` v2 @name `paintAlpha`, `int` v3 @name `alpha`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20e37c.  v0:= v3 ^>> 7;
  #L20e380.  v0:= v0 + v3 @kind int;
  #L20e382.  v1:= v2 * v0 @kind int;
  #L20e386.  v1:= v1 ^>> 8;
  #L20e38a.  return v1;
}
procedure `void` `prepareCanvasForShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object @name `canvas`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.prepareCanvasForShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20ec30.  call temp:= `getShadowOffsetX`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @kind virtual;
  #L20ec36.  v0:= temp;
  #L20ec38.  call temp:= `getShadowOffsetY`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @kind virtual;
  #L20ec3e.  v1:= temp;
  #L20ec40.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20ec44.  v3:= 21I;
  #L20ec48.  if v2 >= v3 then goto L20ec86;
  #L20ec4c.  v2:= v5.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` @kind boolean;
  #L20ec50.  if v2 == 0 then goto L20ec86;
  #L20ec54.  call temp:= `getClipBounds`(v6) @signature `Landroid/graphics/Canvas;.getClipBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L20ec5a.  v2:= temp @kind object;
  #L20ec5c.  v3:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ec60.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20ec64.  v3:= -v3 @kind int;
  #L20ec66.  v4:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ec6a.  v4:= v4.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20ec6e.  v4:= -v4 @kind int;
  #L20ec70.  call `inset`(v2, v3, v4) @signature `Landroid/graphics/Rect;.inset:(II)V` @kind virtual;
  #L20ec76.  call `offset`(v2, v0, v1) @signature `Landroid/graphics/Rect;.offset:(II)V` @kind virtual;
  #L20ec7c.  v3:= `@@android.graphics.Region$Op.REPLACE` @type ^`android.graphics.Region$Op` @kind object;
  #L20ec80.  call temp:= `clipRect`(v6, v2, v3) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/Rect;Landroid/graphics/Region$Op;)Z` @kind virtual;
  #L20ec86.  v2:= (`float`) v0 @kind i2f;
  #L20ec88.  v3:= (`float`) v1 @kind i2f;
  #L20ec8a.  call `translate`(v6, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L20ec90.  return @kind void;
}
procedure `boolean` `updateColorsForState`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `int`[] v5 @kind object @name `state`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20de34.  v0:= 0I;
  #L20de36.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20de3a.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20de3e.  if v1 == 0 then goto L20de6e;
  #L20de42.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L20de46.  call temp:= `getColor`(v1) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L20de4c.  v1:= temp;
  #L20de4e.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20de52.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20de56.  call temp:= `getColorForState`(v2, v5, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L20de5c.  v2:= temp;
  #L20de5e.  if v1 == v2 then goto L20de6e;
  #L20de62.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L20de66.  call `setColor`(v3, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L20de6c.  v0:= 1I;
  #L20de6e.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20de72.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20de76.  if v1 == 0 then goto L20dea6;
  #L20de7a.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20de7e.  call temp:= `getColor`(v1) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L20de84.  v1:= temp;
  #L20de86.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20de8a.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20de8e.  call temp:= `getColorForState`(v2, v5, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L20de94.  v2:= temp;
  #L20de96.  if v1 == v2 then goto L20dea6;
  #L20de9a.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20de9e.  call `setColor`(v3, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L20dea4.  v0:= 1I;
  #L20dea6.  return v0;
}
procedure `boolean` `updateTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v7 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L20deb8.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L20debc.  v1:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L20dec0.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dec4.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L20dec8.  v3:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20decc.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L20ded0.  v4:= v7.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L20ded4.  v5:= 1I;
  #L20ded6.  call temp:= `calculateTintFilter`(v7, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L20dedc.  v2:= temp @kind object;
  #L20dede.  v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L20dee2.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dee6.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L20deea.  v3:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20deee.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L20def2.  v4:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20def6.  v6:= 0I;
  #L20def8.  call temp:= `calculateTintFilter`(v7, v2, v3, v4, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L20defe.  v2:= temp @kind object;
  #L20df00.  v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L20df04.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20df08.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` @kind boolean;
  #L20df0c.  if v2 == 0 then goto L20df32;
  #L20df10.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L20df14.  v3:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20df18.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L20df1c.  call temp:= `getState`(v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getState:()[I` @kind virtual;
  #L20df22.  v4:= temp @kind object;
  #L20df24.  call temp:= `getColorForState`(v3, v4, v6) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L20df2a.  v3:= temp;
  #L20df2c.  call `setShadowColor`(v2, v3) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.setShadowColor:(I)V` @kind virtual;
  #L20df32.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L20df36.  call temp:= `equals`(v0, v2) @signature `Landroidx/core/util/ObjectsCompat;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L20df3c.  v2:= temp;
  #L20df3e.  if v2 == 0 then goto L20df58;
  #L20df42.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L20df46.  call temp:= `equals`(v1, v2) @signature `Landroidx/core/util/ObjectsCompat;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L20df4c.  v2:= temp;
  #L20df4e.  if v2 != 0 then goto L20df54;
  #L20df52.  goto L20df58;
  #L20df54.  v5:= v6;
  #L20df56.  goto L20df5a;
  #L20df58.  
  #L20df5a.  return v5;
}
procedure `void` `updateZ`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20f1f0.  call temp:= `getZ`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @kind virtual;
  #L20f1f6.  v0:= temp;
  #L20f1f8.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f1fc.  v2:= 0.75F;
  #L20f200.  v2:= v2 * v0 @kind float;
  #L20f202.  v2:= (`double`) v2 @kind f2d;
  #L20f204.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L20f20a.  v2:= temp @kind wide;
  #L20f20c.  v2:= (`int`) v2 @kind d2i;
  #L20f20e.  v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int` := v2;
  #L20f212.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f216.  v2:= 0.25F;
  #L20f21a.  v2:= v2 * v0 @kind float;
  #L20f21c.  v2:= (`double`) v2 @kind f2d;
  #L20f21e.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L20f224.  v2:= temp @kind wide;
  #L20f226.  v2:= (`int`) v2 @kind d2i;
  #L20f228.  v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int` := v2;
  #L20f22c.  call temp:= `updateTintFilter`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L20f232.  call `invalidateSelfIgnoreShape`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20f238.  return @kind void;
}
procedure `void` `calculatePathForSize`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.RectF` v7 @kind object @name `bounds`, `android.graphics.Path` v8 @kind object @name `path`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20e674.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L20e678.  v1:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e67c.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20e680.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e684.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L20e688.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` @kind object;
  #L20e68c.  v3:= v7 @kind object;
  #L20e68e.  v5:= v8 @kind object;
  #L20e690.  call `calculatePath`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @kind virtual;
  #L20e696.  return @kind void;
}
procedure `int` `compositeElevationOverlayIfNeeded`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 @name `backgroundColor`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L20e220.  call temp:= `getZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @kind virtual;
  #L20e226.  v0:= temp;
  #L20e228.  call temp:= `getParentAbsoluteElevation`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getParentAbsoluteElevation:()F` @kind virtual;
  #L20e22e.  v1:= temp;
  #L20e230.  v0:= v0 + v1 @kind float;
  #L20e232.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e236.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L20e23a.  if v1 == 0 then goto L20e250;
  #L20e23e.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e242.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L20e246.  call temp:= `compositeOverlayIfNeeded`(v1, v3, v0) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayIfNeeded:(IF)I` @kind virtual;
  #L20e24c.  v1:= temp;
  #L20e24e.  goto L20e252;
  #L20e250.  v1:= v3;
  #L20e252.  return v1;
}
procedure `void` `draw`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object @name `canvas`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e704.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L20e708.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L20e70c.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L20e712.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L20e716.  call temp:= `getAlpha`(v0) @signature `Landroid/graphics/Paint;.getAlpha:()I` @kind virtual;
  #L20e71c.  v0:= temp;
  #L20e71e.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L20e722.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e726.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L20e72a.  call temp:= `modulateAlpha`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @kind static;
  #L20e730.  v2:= temp;
  #L20e732.  call `setAlpha`(v1, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L20e738.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20e73c.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L20e740.  call temp:= `setColorFilter`(v1, v2) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L20e746.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20e74a.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e74e.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float`;
  #L20e752.  call `setStrokeWidth`(v1, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L20e758.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20e75c.  call temp:= `getAlpha`(v1) @signature `Landroid/graphics/Paint;.getAlpha:()I` @kind virtual;
  #L20e762.  v1:= temp;
  #L20e764.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20e768.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e76c.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L20e770.  call temp:= `modulateAlpha`(v1, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @kind static;
  #L20e776.  v3:= temp;
  #L20e778.  call `setAlpha`(v2, v3) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L20e77e.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` @kind boolean;
  #L20e782.  if v2 == 0 then goto L20e7a4;
  #L20e786.  call `calculateStrokePath`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateStrokePath:()V` @kind direct;
  #L20e78c.  call temp:= `getBoundsAsRectF`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20e792.  v2:= temp @kind object;
  #L20e794.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20e798.  call `calculatePath`(v4, v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L20e79e.  v2:= 0I;
  #L20e7a0.  v4.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v2 @kind boolean;
  #L20e7a4.  call `maybeDrawCompatShadow`(v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.maybeDrawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L20e7aa.  call temp:= `hasFill`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasFill:()Z` @kind direct;
  #L20e7b0.  v2:= temp;
  #L20e7b2.  if v2 == 0 then goto L20e7bc;
  #L20e7b6.  call `drawFillShape`(v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawFillShape:(Landroid/graphics/Canvas;)V` @kind direct;
  #L20e7bc.  call temp:= `hasStroke`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @kind direct;
  #L20e7c2.  v2:= temp;
  #L20e7c4.  if v2 == 0 then goto L20e7ce;
  #L20e7c8.  call `drawStrokeShape`(v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawStrokeShape:(Landroid/graphics/Canvas;)V` @kind direct;
  #L20e7ce.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L20e7d2.  call `setAlpha`(v2, v0) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L20e7d8.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L20e7dc.  call `setAlpha`(v2, v1) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L20e7e2.  return @kind void;
}
procedure `void` `drawShape`(`com.google.android.material.shape.MaterialShapeDrawable` v7 @kind this, `android.graphics.Canvas` v8 @kind object @name `canvas`, `android.graphics.Paint` v9 @kind object @name `paint`, `android.graphics.Path` v10 @kind object @name `path`, `android.graphics.RectF` v11 @kind object @name `bounds`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Landroid/graphics/RectF;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L20e8fc.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e900.  v5:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20e904.  v1:= v7 @kind object;
  #L20e906.  v2:= v8 @kind object;
  #L20e908.  v3:= v9 @kind object;
  #L20e90a.  v4:= v10 @kind object;
  #L20e90c.  v6:= v11 @kind object;
  #L20e90e.  call `drawShape`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L20e914.  return @kind void;
}
procedure `float` `getBottomLeftCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBottomLeftCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20e050.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e054.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20e058.  call temp:= `getBottomLeftCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L20e05e.  v0:= temp @kind object;
  #L20e060.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20e066.  v1:= temp @kind object;
  #L20e068.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L20e06e.  v0:= temp;
  #L20e070.  return v0;
}
procedure `float` `getBottomRightCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBottomRightCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20e084.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e088.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20e08c.  call temp:= `getBottomRightCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L20e092.  v0:= temp @kind object;
  #L20e094.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20e09a.  v1:= temp @kind object;
  #L20e09c.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L20e0a2.  v0:= temp;
  #L20e0a4.  return v0;
}
procedure `android.graphics.RectF` `getBoundsAsRectF`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L20d9f8.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L20d9fc.  call temp:= `getBounds`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L20da02.  v1:= temp @kind object;
  #L20da04.  call `set`(v0, v1) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L20da0a.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L20da0e.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20dae0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dae4.  return v0 @kind object;
}
procedure `float` `getElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e0b8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e0bc.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float`;
  #L20e0c0.  return v0;
}
procedure `android.content.res.ColorStateList` `getFillColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20d8c4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20d8c8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20d8cc.  return v0 @kind object;
}
procedure `float` `getInterpolation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getInterpolation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e0d4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e0d8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L20e0dc.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e264.  v0:= -3I;
  #L20e266.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.graphics.Outline` v3 @kind object @name `outline`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20e9a0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e9a4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L20e9a8.  v1:= 2I;
  #L20e9aa.  if v0 != v1 then goto L20e9b0;
  #L20e9ae.  return @kind void;
  #L20e9b0.  call temp:= `isRoundRect`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @kind virtual;
  #L20e9b6.  v0:= temp;
  #L20e9b8.  if v0 == 0 then goto L20e9de;
  #L20e9bc.  call temp:= `getTopLeftCornerResolvedSize`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @kind virtual;
  #L20e9c2.  v0:= temp;
  #L20e9c4.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e9c8.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L20e9cc.  v0:= v0 * v1 @kind float;
  #L20e9ce.  call temp:= `getBounds`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L20e9d4.  v1:= temp @kind object;
  #L20e9d6.  call `setRoundRect`(v3, v1, v0) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L20e9dc.  return @kind void;
  #L20e9de.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20e9e4.  v0:= temp @kind object;
  #L20e9e6.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20e9ea.  call `calculatePath`(v2, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L20e9f0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20e9f4.  call temp:= `isConvex`(v0) @signature `Landroid/graphics/Path;.isConvex:()Z` @kind virtual;
  #L20e9fa.  v0:= temp;
  #L20e9fc.  if v0 != 0 then goto L20ea0c;
  #L20ea00.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20ea04.  v1:= 29I;
  #L20ea08.  if v0 < v1 then goto L20ea1a;
  #L20ea0c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20ea10.  call `setConvexPath`(v3, v0) @signature `Landroid/graphics/Outline;.setConvexPath:(Landroid/graphics/Path;)V` @kind virtual;
  #L20ea16.  goto L20ea1a;
  #L20ea18.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L20ea1a.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L20ea0c..L20ea16] goto L20ea18;
}
procedure `boolean` `getPadding`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Rect` v2 @kind object @name `padding`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPadding:(Landroid/graphics/Rect;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20db10.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20db14.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L20db18.  if v0 == 0 then goto L20db2e;
  #L20db1c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20db20.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L20db24.  call `set`(v2, v0) @signature `Landroid/graphics/Rect;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L20db2a.  v0:= 1I;
  #L20db2c.  return v0;
  #L20db2e.  call temp:= `getPadding`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.getPadding:(Landroid/graphics/Rect;)Z` @kind super;
  #L20db34.  v0:= temp;
  #L20db36.  return v0;
}
procedure `android.graphics.Paint$Style` `getPaintStyle`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPaintStyle:()Landroid/graphics/Paint$Style;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20d934.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20d938.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L20d93c.  return v0 @kind object;
}
procedure `float` `getParentAbsoluteElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getParentAbsoluteElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e0f0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e0f4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float`;
  #L20e0f8.  return v0;
}
procedure `void` `getPathForSize`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `int` v5 @name `width`, `int` v6 @name `height`, `android.graphics.Path` v7 @kind object @name `path`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPathForSize:(IILandroid/graphics/Path;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20ea3c.  v0:= new `android.graphics.RectF`;
  #L20ea40.  v1:= (`float`) v5 @kind i2f;
  #L20ea42.  v2:= (`float`) v6 @kind i2f;
  #L20ea44.  v3:= 0I;
  #L20ea46.  call `<init>`(v0, v3, v3, v1, v2) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L20ea4c.  call `calculatePathForSize`(v4, v0, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L20ea52.  return @kind void;
}
procedure `float` `getScale`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getScale:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e10c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e110.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L20e114.  return v0;
}
procedure `int` `getShadowCompatRotation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowCompatRotation:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e278.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e27c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L20e280.  return v0;
}
procedure `int` `getShadowCompatibilityMode`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowCompatibilityMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e294.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e298.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L20e29c.  return v0;
}
procedure `int` `getShadowElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowElevation:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e2b0.  call temp:= `getElevation`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L20e2b6.  v0:= temp;
  #L20e2b8.  v0:= (`int`) v0 @kind f2i;
  #L20e2ba.  return v0;
}
procedure `int` `getShadowOffsetX`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e2cc.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e2d0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L20e2d4.  v0:= (`double`) v0 @kind i2d;
  #L20e2d6.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e2da.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L20e2de.  v2:= (`double`) v2 @kind i2d;
  #L20e2e0.  call temp:= `toRadians`(v2) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L20e2e6.  v2:= temp @kind wide;
  #L20e2e8.  call temp:= `sin`(v2) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L20e2ee.  v2:= temp @kind wide;
  #L20e2f0.  v0:= v0 * v2 @kind double;
  #L20e2f2.  v0:= (`int`) v0 @kind d2i;
  #L20e2f4.  return v0;
}
procedure `int` `getShadowOffsetY`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e308.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e30c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L20e310.  v0:= (`double`) v0 @kind i2d;
  #L20e312.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e316.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L20e31a.  v2:= (`double`) v2 @kind i2d;
  #L20e31c.  call temp:= `toRadians`(v2) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L20e322.  v2:= temp @kind wide;
  #L20e324.  call temp:= `cos`(v2) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L20e32a.  v2:= temp @kind wide;
  #L20e32c.  v0:= v0 * v2 @kind double;
  #L20e32e.  v0:= (`int`) v0 @kind d2i;
  #L20e330.  return v0;
}
procedure `int` `getShadowRadius`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e344.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e348.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L20e34c.  return v0;
}
procedure `int` `getShadowVerticalOffset`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowVerticalOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e360.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e364.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L20e368.  return v0;
}
procedure `com.google.android.material.shape.ShapeAppearanceModel` `getShapeAppearanceModel`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20dfd8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dfdc.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20dfe0.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePathModel` `getShapedViewModel`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapedViewModel:()Lcom/google/android/material/shape/ShapePathModel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20e024.  call temp:= `getShapeAppearanceModel`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L20e02a.  v0:= temp @kind object;
  #L20e02c.  v1:= instanceof @variable v0 @type ^`com.google.android.material.shape.ShapePathModel` @kind boolean;
  #L20e030.  if v1 == 0 then goto L20e03c;
  #L20e034.  v1:= v0 @kind object;
  #L20e036.  v1:= (`com.google.android.material.shape.ShapePathModel`) v1 @kind object;
  #L20e03a.  goto L20e03e;
  #L20e03c.  v1:= 0I;
  #L20e03e.  return v1 @kind object;
}
procedure `android.content.res.ColorStateList` `getStrokeColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20d8e0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20d8e4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20d8e8.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getStrokeTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20d8fc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20d900.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L20d904.  return v0 @kind object;
}
procedure `float` `getStrokeWidth`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e15c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e160.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float`;
  #L20e164.  return v0;
}
procedure `android.content.res.ColorStateList` `getTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20d918.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20d91c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L20d920.  return v0 @kind object;
}
procedure `float` `getTopLeftCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20e178.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e17c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20e180.  call temp:= `getTopLeftCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L20e186.  v0:= temp @kind object;
  #L20e188.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20e18e.  v1:= temp @kind object;
  #L20e190.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L20e196.  v0:= temp;
  #L20e198.  return v0;
}
procedure `float` `getTopRightCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopRightCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20e1ac.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e1b0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20e1b4.  call temp:= `getTopRightCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L20e1ba.  v0:= temp @kind object;
  #L20e1bc.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20e1c2.  v1:= temp @kind object;
  #L20e1c4.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L20e1ca.  v0:= temp;
  #L20e1cc.  return v0;
}
procedure `float` `getTranslationZ`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTranslationZ:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e1e0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20e1e4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float`;
  #L20e1e8.  return v0;
}
procedure `android.graphics.Region` `getTransparentRegion`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTransparentRegion:()Landroid/graphics/Region;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20da5c.  call temp:= `getBounds`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L20da62.  v0:= temp @kind object;
  #L20da64.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L20da68.  call temp:= `set`(v1, v0) @signature `Landroid/graphics/Region;.set:(Landroid/graphics/Rect;)Z` @kind virtual;
  #L20da6e.  call temp:= `getBoundsAsRectF`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20da74.  v1:= temp @kind object;
  #L20da76.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20da7a.  call `calculatePath`(v4, v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L20da80.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` @kind object;
  #L20da84.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20da88.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L20da8c.  call temp:= `setPath`(v1, v2, v3) @signature `Landroid/graphics/Region;.setPath:(Landroid/graphics/Path;Landroid/graphics/Region;)Z` @kind virtual;
  #L20da92.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L20da96.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` @kind object;
  #L20da9a.  v3:= `@@android.graphics.Region$Op.DIFFERENCE` @type ^`android.graphics.Region$Op` @kind object;
  #L20da9e.  call temp:= `op`(v1, v2, v3) @signature `Landroid/graphics/Region;.op:(Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z` @kind virtual;
  #L20daa4.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L20daa8.  return v1 @kind object;
}
procedure `float` `getZ`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20e1fc.  call temp:= `getElevation`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L20e202.  v0:= temp;
  #L20e204.  call temp:= `getTranslationZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTranslationZ:()F` @kind virtual;
  #L20e20a.  v1:= temp;
  #L20e20c.  v0:= v0 + v1 @kind float;
  #L20e20e.  return v0;
}
procedure `void` `initializeElevationOverlay`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.Context` v3 @kind object @name `context`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20ea64.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ea68.  v1:= new `com.google.android.material.elevation.ElevationOverlayProvider`;
  #L20ea6c.  call `<init>`(v1, v3) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L20ea72.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` := v1 @kind object;
  #L20ea76.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L20ea7c.  return @kind void;
}
procedure `void` `invalidateSelf`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ea90.  v0:= 1I;
  #L20ea92.  v1.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v0 @kind boolean;
  #L20ea96.  call `invalidateSelf`(v1) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind super;
  #L20ea9c.  return @kind void;
}
procedure `boolean` `isElevationOverlayEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isElevationOverlayEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20dc20.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dc24.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L20dc28.  if v0 == 0 then goto L20dc44;
  #L20dc2c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dc30.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L20dc34.  call temp:= `isThemeElevationOverlayEnabled`(v0) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.isThemeElevationOverlayEnabled:()Z` @kind virtual;
  #L20dc3a.  v0:= temp;
  #L20dc3c.  if v0 == 0 then goto L20dc44;
  #L20dc40.  v0:= 1I;
  #L20dc42.  goto L20dc46;
  #L20dc44.  v0:= 0I;
  #L20dc46.  return v0;
}
procedure `boolean` `isElevationOverlayInitialized`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isElevationOverlayInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20dc58.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dc5c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L20dc60.  if v0 == 0 then goto L20dc68;
  #L20dc64.  v0:= 1I;
  #L20dc66.  goto L20dc6a;
  #L20dc68.  v0:= 0I;
  #L20dc6a.  return v0;
}
procedure `boolean` `isPointInTransparentRegion`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 @name `x`, `int` v3 @name `y`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isPointInTransparentRegion:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20dc7c.  call temp:= `getTransparentRegion`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTransparentRegion:()Landroid/graphics/Region;` @kind virtual;
  #L20dc82.  v0:= temp @kind object;
  #L20dc84.  call temp:= `contains`(v0, v2, v3) @signature `Landroid/graphics/Region;.contains:(II)Z` @kind virtual;
  #L20dc8a.  v0:= temp;
  #L20dc8c.  return v0;
}
procedure `boolean` `isRoundRect`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20dca0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dca4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20dca8.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L20dcae.  v1:= temp @kind object;
  #L20dcb0.  call temp:= `isRoundRect`(v0, v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.isRoundRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L20dcb6.  v0:= temp;
  #L20dcb8.  return v0;
}
procedure `boolean` `isShadowEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isShadowEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20dccc.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dcd0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L20dcd4.  if v0 == 0 then goto L20dcec;
  #L20dcd8.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dcdc.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L20dce0.  v1:= 2I;
  #L20dce2.  if v0 != v1 then goto L20dce8;
  #L20dce6.  goto L20dcec;
  #L20dce8.  v0:= 0I;
  #L20dcea.  goto L20dcee;
  #L20dcec.  v0:= 1I;
  #L20dcee.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20dd00.  call temp:= `isStateful`(v1) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind super;
  #L20dd06.  v0:= temp;
  #L20dd08.  if v0 != 0 then goto L20dd92;
  #L20dd0c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dd10.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L20dd14.  if v0 == 0 then goto L20dd2c;
  #L20dd18.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dd1c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L20dd20.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L20dd26.  v0:= temp;
  #L20dd28.  if v0 != 0 then goto L20dd92;
  #L20dd2c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dd30.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L20dd34.  if v0 == 0 then goto L20dd4c;
  #L20dd38.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dd3c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L20dd40.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L20dd46.  v0:= temp;
  #L20dd48.  if v0 != 0 then goto L20dd92;
  #L20dd4c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dd50.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20dd54.  if v0 == 0 then goto L20dd6c;
  #L20dd58.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dd5c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20dd60.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L20dd66.  v0:= temp;
  #L20dd68.  if v0 != 0 then goto L20dd92;
  #L20dd6c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dd70.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20dd74.  if v0 == 0 then goto L20dd8e;
  #L20dd78.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dd7c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20dd80.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L20dd86.  v0:= temp;
  #L20dd88.  if v0 == 0 then goto L20dd8e;
  #L20dd8c.  goto L20dd92;
  #L20dd8e.  v0:= 0I;
  #L20dd90.  goto L20dd94;
  #L20dd92.  v0:= 1I;
  #L20dd94.  return v0;
}
procedure `android.graphics.drawable.Drawable` `mutate`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.mutate:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20dabc.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState`;
  #L20dac0.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20dac4.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L20daca.  v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` := v0 @kind object;
  #L20dace.  return v2 @kind object;
}
procedure `void` `onBoundsChange`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Rect` v2 @kind object @name `bounds`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L20ec10.  v0:= 1I;
  #L20ec12.  v1.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v0 @kind boolean;
  #L20ec16.  call `onBoundsChange`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @kind super;
  #L20ec1c.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this, `int`[] v4 @kind object @name `state`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L20dda8.  call temp:= `updateColorsForState`(v3, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @kind direct;
  #L20ddae.  v0:= temp;
  #L20ddb0.  call temp:= `updateTintFilter`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L20ddb6.  v1:= temp;
  #L20ddb8.  if v0 != 0 then goto L20ddc6;
  #L20ddbc.  if v1 == 0 then goto L20ddc2;
  #L20ddc0.  goto L20ddc6;
  #L20ddc2.  v2:= 0I;
  #L20ddc4.  goto L20ddc8;
  #L20ddc6.  v2:= 1I;
  #L20ddc8.  if v2 == 0 then goto L20ddd2;
  #L20ddcc.  call `invalidateSelf`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L20ddd2.  return v2;
}
procedure `boolean` `requiresCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.requiresCompatShadow:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20dde4.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20dde8.  v1:= 21I;
  #L20ddec.  if v0 < v1 then goto L20de1e;
  #L20ddf0.  call temp:= `isRoundRect`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @kind virtual;
  #L20ddf6.  v0:= temp;
  #L20ddf8.  if v0 != 0 then goto L20de1a;
  #L20ddfc.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L20de00.  call temp:= `isConvex`(v0) @signature `Landroid/graphics/Path;.isConvex:()Z` @kind virtual;
  #L20de06.  v0:= temp;
  #L20de08.  if v0 != 0 then goto L20de1a;
  #L20de0c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20de10.  v1:= 29I;
  #L20de14.  if v0 >= v1 then goto L20de1a;
  #L20de18.  goto L20de1e;
  #L20de1a.  v0:= 0I;
  #L20de1c.  goto L20de20;
  #L20de1e.  v0:= 1I;
  #L20de20.  return v0;
}
procedure `void` `setAlpha`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 @name `alpha`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20eca4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20eca8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L20ecac.  if v0 == v2 then goto L20ecbe;
  #L20ecb0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ecb4.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int` := v2;
  #L20ecb8.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20ecbe.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object @name `colorFilter`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ecd0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ecd4.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L20ecd8.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20ecde.  return @kind void;
}
procedure `void` `setCornerSize`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 @name `cornerSize`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ed18.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ed1c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20ed20.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(F)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L20ed26.  v0:= temp @kind object;
  #L20ed28.  call `setShapeAppearanceModel`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L20ed2e.  return @kind void;
}
procedure `void` `setCornerSize`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `com.google.android.material.shape.CornerSize` v2 @kind object @name `cornerSize`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(Lcom/google/android/material/shape/CornerSize;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ecf0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ecf4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L20ecf8.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(Lcom/google/android/material/shape/CornerSize;)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L20ecfe.  v0:= temp @kind object;
  #L20ed00.  call `setShapeAppearanceModel`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L20ed06.  return @kind void;
}
procedure `void` `setEdgeIntersectionCheckEnable`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `boolean` v2 @name `enable`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setEdgeIntersectionCheckEnable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ed40.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L20ed44.  call `setEdgeIntersectionCheckEnable`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setEdgeIntersectionCheckEnable:(Z)V` @kind virtual;
  #L20ed4a.  return @kind void;
}
procedure `void` `setElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 @name `elevation`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ed5c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ed60.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float`;
  #L20ed64.  v0:= fcmpl(v0, v2);
  #L20ed68.  if v0 == 0 then goto L20ed7a;
  #L20ed6c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ed70.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float` := v2;
  #L20ed74.  call `updateZ`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L20ed7a.  return @kind void;
}
procedure `void` `setFillColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `fillColor`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ed8c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ed90.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20ed94.  if v0 == v2 then goto L20edae;
  #L20ed98.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ed9c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L20eda0.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getState:()[I` @kind virtual;
  #L20eda6.  v0:= temp @kind object;
  #L20eda8.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind virtual;
  #L20edae.  return @kind void;
}
procedure `void` `setInterpolation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 @name `interpolation`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setInterpolation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20edc0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20edc4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L20edc8.  v0:= fcmpl(v0, v2);
  #L20edcc.  if v0 == 0 then goto L20ede4;
  #L20edd0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20edd4.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float` := v2;
  #L20edd8.  v0:= 1I;
  #L20edda.  v1.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v0 @kind boolean;
  #L20edde.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L20ede4.  return @kind void;
}
procedure `void` `setPadding`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 @name `left`, `int` v4 @name `top`, `int` v5 @name `right`, `int` v6 @name `bottom`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setPadding:(IIII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20edf8.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20edfc.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L20ee00.  if v0 != 0 then goto L20ee16;
  #L20ee04.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ee08.  v1:= new `android.graphics.Rect`;
  #L20ee0c.  call `<init>`(v1) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L20ee12.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` := v1 @kind object;
  #L20ee16.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ee1a.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L20ee1e.  call `set`(v0, v3, v4, v5, v6) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L20ee24.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L20ee2a.  return @kind void;
}
procedure `void` `setPaintStyle`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Paint$Style` v2 @kind object @name `paintStyle`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setPaintStyle:(Landroid/graphics/Paint$Style;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ee3c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ee40.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` := v2 @kind object;
  #L20ee44.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20ee4a.  return @kind void;
}
procedure `void` `setParentAbsoluteElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 @name `parentAbsoluteElevation`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setParentAbsoluteElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ee5c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ee60.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float`;
  #L20ee64.  v0:= fcmpl(v0, v2);
  #L20ee68.  if v0 == 0 then goto L20ee7a;
  #L20ee6c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ee70.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float` := v2;
  #L20ee74.  call `updateZ`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L20ee7a.  return @kind void;
}
procedure `void` `setScale`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 @name `scale`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setScale:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ee8c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ee90.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L20ee94.  v0:= fcmpl(v0, v2);
  #L20ee98.  if v0 == 0 then goto L20eeaa;
  #L20ee9c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20eea0.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float` := v2;
  #L20eea4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L20eeaa.  return @kind void;
}
procedure `void` `setShadowBitmapDrawingEnable`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `boolean` v1 @name `enable`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowBitmapDrawingEnable:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L20eebc.  v0.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` := v1 @kind boolean;
  #L20eec0.  return @kind void;
}
procedure `void` `setShadowColor`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 @name `shadowColor`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20eed4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L20eed8.  call `setShadowColor`(v0, v3) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.setShadowColor:(I)V` @kind virtual;
  #L20eede.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20eee2.  v1:= 0I;
  #L20eee4.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` := v1 @kind boolean;
  #L20eee8.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20eeee.  return @kind void;
}
procedure `void` `setShadowCompatRotation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 @name `shadowRotation`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatRotation:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ef00.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ef04.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L20ef08.  if v0 == v2 then goto L20ef1a;
  #L20ef0c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ef10.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int` := v2;
  #L20ef14.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20ef1a.  return @kind void;
}
procedure `void` `setShadowCompatibilityMode`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 @name `mode`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ef2c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ef30.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L20ef34.  if v0 == v2 then goto L20ef46;
  #L20ef38.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ef3c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int` := v2;
  #L20ef40.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20ef46.  return @kind void;
}
procedure `void` `setShadowElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 @name `shadowElevation`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowElevation:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ef58.  v0:= (`float`) v2 @kind i2f;
  #L20ef5a.  call `setElevation`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L20ef60.  return @kind void;
}
procedure `void` `setShadowEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `boolean` v2 @name `shadowEnabled`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ef74.  v0:= v2 ^~ 1;
  #L20ef78.  call `setShadowCompatibilityMode`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @kind virtual;
  #L20ef7e.  return @kind void;
}
procedure `void` `setShadowRadius`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 @name `shadowRadius`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ef90.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20ef94.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int` := v2;
  #L20ef98.  return @kind void;
}
procedure `void` `setShadowVerticalOffset`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 @name `shadowOffset`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowVerticalOffset:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20efac.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20efb0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L20efb4.  if v0 == v2 then goto L20efc6;
  #L20efb8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20efbc.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int` := v2;
  #L20efc0.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20efc6.  return @kind void;
}
procedure `void` `setShapeAppearanceModel`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v2 @kind object @name `shapeAppearanceModel`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20efd8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20efdc.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` := v2 @kind object;
  #L20efe0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L20efe6.  return @kind void;
}
procedure `void` `setShapedViewModel`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.ShapePathModel` v1 @kind object @name `shapedViewModel`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapedViewModel:(Lcom/google/android/material/shape/ShapePathModel;)V` @AccessFlag PUBLIC {
    temp;

  #L20eff8.  call `setShapeAppearanceModel`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L20effe.  return @kind void;
}
procedure `void` `setStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 @name `strokeWidth`, `int` v3 @name `strokeColor`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStroke:(FI)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f030.  call `setStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L20f036.  call temp:= `valueOf`(v3) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L20f03c.  v0:= temp @kind object;
  #L20f03e.  call `setStrokeColor`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L20f044.  return @kind void;
}
procedure `void` `setStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `float` v1 @name `strokeWidth`, `android.content.res.ColorStateList` v2 @kind object @name `strokeColor`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStroke:(FLandroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L20f010.  call `setStrokeWidth`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L20f016.  call `setStrokeColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L20f01c.  return @kind void;
}
procedure `void` `setStrokeColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `strokeColor`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f058.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f05c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L20f060.  if v0 == v2 then goto L20f07a;
  #L20f064.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f068.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L20f06c.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getState:()[I` @kind virtual;
  #L20f072.  v0:= temp @kind object;
  #L20f074.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind virtual;
  #L20f07a.  return @kind void;
}
procedure `void` `setStrokeTint`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 @name `tintColor`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f0b4.  call temp:= `valueOf`(v2) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L20f0ba.  v0:= temp @kind object;
  #L20f0bc.  call `setStrokeTint`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L20f0c2.  return @kind void;
}
procedure `void` `setStrokeTint`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `tintList`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f08c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f090.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L20f094.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L20f09a.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20f0a0.  return @kind void;
}
procedure `void` `setStrokeWidth`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 @name `strokeWidth`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f0d4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f0d8.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float` := v2;
  #L20f0dc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L20f0e2.  return @kind void;
}
procedure `void` `setTint`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 @name `tintColor`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTint:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f0f4.  call temp:= `valueOf`(v2) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L20f0fa.  v0:= temp @kind object;
  #L20f0fc.  call `setTintList`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L20f102.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `tintList`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f114.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f118.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L20f11c.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L20f122.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20f128.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.PorterDuff$Mode` v2 @kind object @name `tintMode`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f13c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f140.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L20f144.  if v0 == v2 then goto L20f15c;
  #L20f148.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f14c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v2 @kind object;
  #L20f150.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L20f156.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L20f15c.  return @kind void;
}
procedure `void` `setTranslationZ`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 @name `translationZ`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTranslationZ:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f170.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f174.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float`;
  #L20f178.  v0:= fcmpl(v0, v2);
  #L20f17c.  if v0 == 0 then goto L20f18e;
  #L20f180.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f184.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float` := v2;
  #L20f188.  call `updateZ`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L20f18e.  return @kind void;
}
procedure `void` `setUseTintColorForShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `boolean` v2 @name `useTintColorForShadow`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setUseTintColorForShadow:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f1a0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f1a4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` @kind boolean;
  #L20f1a8.  if v0 == v2 then goto L20f1ba;
  #L20f1ac.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L20f1b0.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` := v2 @kind boolean;
  #L20f1b4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L20f1ba.  return @kind void;
}
procedure `void` `setZ`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 @name `z`) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setZ:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f1cc.  call temp:= `getElevation`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L20f1d2.  v0:= temp;
  #L20f1d4.  v0:= v2 - v0 @kind float;
  #L20f1d8.  call `setTranslationZ`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTranslationZ:(F)V` @kind virtual;
  #L20f1de.  return @kind void;
}
