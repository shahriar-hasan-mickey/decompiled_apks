record `com.google.android.material.math.MathUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `float` `@@com.google.android.material.math.MathUtils.DEFAULT_EPSILON` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.material.math.MathUtils` v0 @kind this) @signature `Lcom/google/android/material/math/MathUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2057e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2057ea.  return @kind void;
}
procedure `float` `dist`(`float` v6 @name `x1`, `float` v7 @name `y1`, `float` v8 @name `x2`, `float` v9 @name `y2`) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L205690.  v0:= v8 - v6 @kind float;
  #L205694.  v1:= v9 - v7 @kind float;
  #L205698.  v2:= (`double`) v0 @kind f2d;
  #L20569a.  v4:= (`double`) v1 @kind f2d;
  #L20569c.  call temp:= `hypot`(v2, v4) @signature `Ljava/lang/Math;.hypot:(DD)D` @kind static;
  #L2056a2.  v2:= temp @kind wide;
  #L2056a4.  v2:= (`float`) v2 @kind d2f;
  #L2056a6.  return v2;
}
procedure `float` `distanceToFurthestCorner`(`float` v4 @name `pointX`, `float` v5 @name `pointY`, `float` v6 @name `rectLeft`, `float` v7 @name `rectTop`, `float` v8 @name `rectRight`, `float` v9 @name `rectBottom`) @signature `Lcom/google/android/material/math/MathUtils;.distanceToFurthestCorner:(FFFFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2056b8.  
  #L2056ba.  call temp:= `dist`(v4, v5, v6, v7) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L2056c0.  v0:= temp;
  #L2056c2.  call temp:= `dist`(v4, v5, v8, v7) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L2056c8.  v1:= temp;
  #L2056ca.  call temp:= `dist`(v4, v5, v8, v9) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L2056d0.  v2:= temp;
  #L2056d2.  call temp:= `dist`(v4, v5, v6, v9) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L2056d8.  v3:= temp;
  #L2056da.  call temp:= `max`(v0, v1, v2, v3) @signature `Lcom/google/android/material/math/MathUtils;.max:(FFFF)F` @kind static;
  #L2056e0.  v0:= temp;
  #L2056e2.  return v0;
}
procedure `float` `floorMod`(`float` v3 @name `x`, `int` v4 @name `y`) @signature `Lcom/google/android/material/math/MathUtils;.floorMod:(FI)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2056f4.  v0:= (`float`) v4 @kind i2f;
  #L2056f6.  v0:= v3 / v0 @kind float;
  #L2056fa.  v0:= (`int`) v0 @kind f2i;
  #L2056fc.  call temp:= `signum`(v3) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L205702.  v1:= temp;
  #L205704.  v2:= (`float`) v4 @kind i2f;
  #L205706.  v1:= v1 * v2 @kind float;
  #L205708.  v2:= 0I;
  #L20570a.  v1:= fcmpg(v1, v2);
  #L20570e.  if v1 >= 0 then goto L205724;
  #L205712.  v1:= v0 * v4 @kind int;
  #L205716.  v1:= (`float`) v1 @kind i2f;
  #L205718.  v1:= fcmpl(v1, v3);
  #L20571c.  if v1 == 0 then goto L205724;
  #L205720.  v0:= v0 + -1;
  #L205724.  v1:= v0 * v4 @kind int;
  #L205728.  v1:= (`float`) v1 @kind i2f;
  #L20572a.  v1:= v3 - v1 @kind float;
  #L20572e.  return v1;
}
procedure `int` `floorMod`(`int` v2 @name `x`, `int` v3 @name `y`) @signature `Lcom/google/android/material/math/MathUtils;.floorMod:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2057b0.  v0:= v2 / v3 @kind int;
  #L2057b4.  v1:= v2 ^~ v3 @kind int;
  #L2057b8.  if v1 >= 0 then goto L2057c8;
  #L2057bc.  v1:= v0 * v3 @kind int;
  #L2057c0.  if v1 == v2 then goto L2057c8;
  #L2057c4.  v0:= v0 + -1;
  #L2057c8.  v1:= v0 * v3 @kind int;
  #L2057cc.  v1:= v2 - v1 @kind int;
  #L2057d0.  return v1;
}
procedure `boolean` `geq`(`float` v1 @name `a`, `float` v2 @name `b`, `float` v3 @name `epsilon`) @signature `Lcom/google/android/material/math/MathUtils;.geq:(FFF)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20566c.  v0:= v1 + v3 @kind float;
  #L205670.  v0:= fcmpl(v0, v2);
  #L205674.  if v0 < 0 then goto L20567c;
  #L205678.  v0:= 1I;
  #L20567a.  goto L20567e;
  #L20567c.  v0:= 0I;
  #L20567e.  return v0;
}
procedure `float` `lerp`(`float` v2 @name `start`, `float` v3 @name `stop`, `float` v4 @name `amount`) @signature `Lcom/google/android/material/math/MathUtils;.lerp:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L205740.  v0:= 1.0F;
  #L205744.  v0:= v0 - v4 @kind float;
  #L205746.  v0:= v0 * v2 @kind float;
  #L205748.  v1:= v4 * v3 @kind float;
  #L20574c.  v0:= v0 + v1 @kind float;
  #L20574e.  return v0;
}
procedure `float` `max`(`float` v1 @name `a`, `float` v2 @name `b`, `float` v3 @name `c`, `float` v4 @name `d`) @signature `Lcom/google/android/material/math/MathUtils;.max:(FFFF)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L205760.  v0:= fcmpl(v1, v2);
  #L205764.  if v0 <= 0 then goto L20577c;
  #L205768.  v0:= fcmpl(v1, v3);
  #L20576c.  if v0 <= 0 then goto L20577c;
  #L205770.  v0:= fcmpl(v1, v4);
  #L205774.  if v0 <= 0 then goto L20577c;
  #L205778.  v0:= v1;
  #L20577a.  goto L20579e;
  #L20577c.  v0:= fcmpl(v2, v3);
  #L205780.  if v0 <= 0 then goto L205790;
  #L205784.  v0:= fcmpl(v2, v4);
  #L205788.  if v0 <= 0 then goto L205790;
  #L20578c.  v0:= v2;
  #L20578e.  goto L20579e;
  #L205790.  v0:= fcmpl(v3, v4);
  #L205794.  if v0 <= 0 then goto L20579c;
  #L205798.  v0:= v3;
  #L20579a.  goto L20579e;
  #L20579c.  v0:= v4;
  #L20579e.  return v0;
}
