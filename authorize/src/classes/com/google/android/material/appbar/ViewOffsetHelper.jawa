record `com.google.android.material.appbar.ViewOffsetHelper` @kind class @AccessFlag  {
  `boolean` `com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @AccessFlag PRIVATE;
  `android.view.View` `com.google.android.material.appbar.ViewOffsetHelper.view` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this, `android.view.View` v2 @kind object @name `view`) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.<init>:(Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1dacd4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1dacda.  v0:= 1I;
  #L1dacdc.  v1.`com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @type ^`boolean` := v0 @kind boolean;
  #L1dace0.  v1.`com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @type ^`boolean` := v0 @kind boolean;
  #L1dace4.  v1.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` := v2 @kind object;
  #L1dace8.  return @kind void;
}
procedure `void` `applyOffsets`(`com.google.android.material.appbar.ViewOffsetHelper` v4 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.applyOffsets:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dacfc.  v0:= v4.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L1dad00.  v1:= v4.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int`;
  #L1dad04.  call temp:= `getTop`(v0) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L1dad0a.  v2:= temp;
  #L1dad0c.  v3:= v4.`com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @type ^`int`;
  #L1dad10.  v2:= v2 - v3 @kind int;
  #L1dad12.  v1:= v1 - v2 @kind int;
  #L1dad14.  call `offsetTopAndBottom`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L1dad1a.  v0:= v4.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L1dad1e.  v1:= v4.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int`;
  #L1dad22.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L1dad28.  v2:= temp;
  #L1dad2a.  v3:= v4.`com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @type ^`int`;
  #L1dad2e.  v2:= v2 - v3 @kind int;
  #L1dad30.  v1:= v1 - v2 @kind int;
  #L1dad32.  call `offsetLeftAndRight`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.offsetLeftAndRight:(Landroid/view/View;I)V` @kind static;
  #L1dad38.  return @kind void;
}
procedure `int` `getLayoutLeft`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getLayoutLeft:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dac74.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @type ^`int`;
  #L1dac78.  return v0;
}
procedure `int` `getLayoutTop`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getLayoutTop:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dac8c.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @type ^`int`;
  #L1dac90.  return v0;
}
procedure `int` `getLeftAndRightOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getLeftAndRightOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1daca4.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int`;
  #L1daca8.  return v0;
}
procedure `int` `getTopAndBottomOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getTopAndBottomOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dacbc.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int`;
  #L1dacc0.  return v0;
}
procedure `boolean` `isHorizontalOffsetEnabled`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.isHorizontalOffsetEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dabdc.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @type ^`boolean` @kind boolean;
  #L1dabe0.  return v0;
}
procedure `boolean` `isVerticalOffsetEnabled`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.isVerticalOffsetEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dabf4.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @type ^`boolean` @kind boolean;
  #L1dabf8.  return v0;
}
procedure `void` `onViewLayout`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.onViewLayout:()V` @AccessFlag  {
    temp;
    v0;

  #L1dad4c.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L1dad50.  call temp:= `getTop`(v0) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L1dad56.  v0:= temp;
  #L1dad58.  v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @type ^`int` := v0;
  #L1dad5c.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L1dad60.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L1dad66.  v0:= temp;
  #L1dad68.  v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @type ^`int` := v0;
  #L1dad6c.  return @kind void;
}
procedure `void` `setHorizontalOffsetEnabled`(`com.google.android.material.appbar.ViewOffsetHelper` v0 @kind this, `boolean` v1 @name `horizontalOffsetEnabled`) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setHorizontalOffsetEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1dad80.  v0.`com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @type ^`boolean` := v1 @kind boolean;
  #L1dad84.  return @kind void;
}
procedure `boolean` `setLeftAndRightOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this, `int` v2 @name `offset`) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setLeftAndRightOffset:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dac0c.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @type ^`boolean` @kind boolean;
  #L1dac10.  if v0 == 0 then goto L1dac2a;
  #L1dac14.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int`;
  #L1dac18.  if v0 == v2 then goto L1dac2a;
  #L1dac1c.  v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int` := v2;
  #L1dac20.  call `applyOffsets`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.applyOffsets:()V` @kind virtual;
  #L1dac26.  v0:= 1I;
  #L1dac28.  return v0;
  #L1dac2a.  v0:= 0I;
  #L1dac2c.  return v0;
}
procedure `boolean` `setTopAndBottomOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this, `int` v2 @name `offset`) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setTopAndBottomOffset:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dac40.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @type ^`boolean` @kind boolean;
  #L1dac44.  if v0 == 0 then goto L1dac5e;
  #L1dac48.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int`;
  #L1dac4c.  if v0 == v2 then goto L1dac5e;
  #L1dac50.  v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int` := v2;
  #L1dac54.  call `applyOffsets`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.applyOffsets:()V` @kind virtual;
  #L1dac5a.  v0:= 1I;
  #L1dac5c.  return v0;
  #L1dac5e.  v0:= 0I;
  #L1dac60.  return v0;
}
procedure `void` `setVerticalOffsetEnabled`(`com.google.android.material.appbar.ViewOffsetHelper` v0 @kind this, `boolean` v1 @name `verticalOffsetEnabled`) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setVerticalOffsetEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1dad98.  v0.`com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @type ^`boolean` := v1 @kind boolean;
  #L1dad9c.  return @kind void;
}
