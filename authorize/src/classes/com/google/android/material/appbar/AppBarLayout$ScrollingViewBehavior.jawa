record `com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` @kind class @AccessFlag PUBLIC extends `com.google.android.material.appbar.HeaderScrollingViewBehavior` @kind class {
}
procedure `void` `<init>`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d73f8.  call `<init>`(v0) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.<init>:()V` @kind direct;
  #L1d73fe.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v3 @kind this, `android.content.Context` v4 @kind object @name `context`, `android.util.AttributeSet` v5 @kind object @name `attrs`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1d7410.  call `<init>`(v3, v4, v5) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L1d7416.  v0:= `@@com.google.android.material.R$styleable.ScrollingViewBehavior_Layout` @type ^`int`[] @kind object;
  #L1d741a.  call temp:= `obtainStyledAttributes`(v4, v5, v0) @signature `Landroid/content/Context;.obtainStyledAttributes:(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind virtual;
  #L1d7420.  v0:= temp @kind object;
  #L1d7422.  v1:= `@@com.google.android.material.R$styleable.ScrollingViewBehavior_Layout_behavior_overlapTop` @type ^`int`;
  #L1d7426.  v2:= 0I;
  #L1d7428.  call temp:= `getDimensionPixelSize`(v0, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L1d742e.  v1:= temp;
  #L1d7430.  call `setOverlayTop`(v3, v1) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setOverlayTop:(I)V` @kind virtual;
  #L1d7436.  call `recycle`(v0) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L1d743c.  return @kind void;
}
procedure `int` `getAppBarLayoutOffset`(`com.google.android.material.appbar.AppBarLayout` v2 @kind object @name `abl`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getAppBarLayoutOffset:(Lcom/google/android/material/appbar/AppBarLayout;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1d7348.  
  #L1d734a.  call temp:= `getLayoutParams`(v2) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L1d7350.  v0:= temp @kind object;
  #L1d7352.  v0:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v0 @kind object;
  #L1d7356.  call temp:= `getBehavior`(v0) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;.getBehavior:()Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;` @kind virtual;
  #L1d735c.  v0:= temp @kind object;
  #L1d735e.  v1:= instanceof @variable v0 @type ^`com.google.android.material.appbar.AppBarLayout$BaseBehavior` @kind boolean;
  #L1d7362.  if v1 == 0 then goto L1d7376;
  #L1d7366.  v1:= v0 @kind object;
  #L1d7368.  v1:= (`com.google.android.material.appbar.AppBarLayout$BaseBehavior`) v1 @kind object;
  #L1d736c.  call temp:= `getTopBottomOffsetForScrollingSibling`(v1) @signature `Lcom/google/android/material/appbar/AppBarLayout$BaseBehavior;.getTopBottomOffsetForScrollingSibling:()I` @kind virtual;
  #L1d7372.  v1:= temp;
  #L1d7374.  return v1;
  #L1d7376.  v1:= 0I;
  #L1d7378.  return v1;
}
procedure `void` `offsetChildAsNeeded`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v4 @kind this, `android.view.View` v5 @kind object @name `child`, `android.view.View` v6 @kind object @name `dependency`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.offsetChildAsNeeded:(Landroid/view/View;Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d7450.  
  #L1d7452.  call temp:= `getLayoutParams`(v6) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L1d7458.  v0:= temp @kind object;
  #L1d745a.  v0:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v0 @kind object;
  #L1d745e.  call temp:= `getBehavior`(v0) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;.getBehavior:()Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;` @kind virtual;
  #L1d7464.  v0:= temp @kind object;
  #L1d7466.  v1:= instanceof @variable v0 @type ^`com.google.android.material.appbar.AppBarLayout$BaseBehavior` @kind boolean;
  #L1d746a.  if v1 == 0 then goto L1d74ac;
  #L1d746e.  v1:= v0 @kind object;
  #L1d7470.  v1:= (`com.google.android.material.appbar.AppBarLayout$BaseBehavior`) v1 @kind object;
  #L1d7474.  
  #L1d7476.  call temp:= `getBottom`(v6) @signature `Landroid/view/View;.getBottom:()I` @kind virtual;
  #L1d747c.  v2:= temp;
  #L1d747e.  call temp:= `getTop`(v5) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L1d7484.  v3:= temp;
  #L1d7486.  v2:= v2 - v3 @kind int;
  #L1d7488.  call temp:= `access$000`(v1) @signature `Lcom/google/android/material/appbar/AppBarLayout$BaseBehavior;.access$000:(Lcom/google/android/material/appbar/AppBarLayout$BaseBehavior;)I` @kind static;
  #L1d748e.  v3:= temp;
  #L1d7490.  v2:= v2 + v3 @kind int;
  #L1d7492.  call temp:= `getVerticalLayoutGap`(v4) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getVerticalLayoutGap:()I` @kind virtual;
  #L1d7498.  v3:= temp;
  #L1d749a.  v2:= v2 + v3 @kind int;
  #L1d749c.  call temp:= `getOverlapPixelsForOffset`(v4, v6) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getOverlapPixelsForOffset:(Landroid/view/View;)I` @kind virtual;
  #L1d74a2.  v3:= temp;
  #L1d74a4.  v2:= v2 - v3 @kind int;
  #L1d74a6.  call `offsetTopAndBottom`(v5, v2) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L1d74ac.  return @kind void;
}
procedure `void` `updateLiftedStateIfNeeded`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v2 @kind this, `android.view.View` v3 @kind object @name `child`, `android.view.View` v4 @kind object @name `dependency`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.updateLiftedStateIfNeeded:(Landroid/view/View;Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1d7530.  v0:= instanceof @variable v4 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L1d7534.  if v0 == 0 then goto L1d7558;
  #L1d7538.  v0:= v4 @kind object;
  #L1d753a.  v0:= (`com.google.android.material.appbar.AppBarLayout`) v0 @kind object;
  #L1d753e.  call temp:= `isLiftOnScroll`(v0) @signature `Lcom/google/android/material/appbar/AppBarLayout;.isLiftOnScroll:()Z` @kind virtual;
  #L1d7544.  v1:= temp;
  #L1d7546.  if v1 == 0 then goto L1d7558;
  #L1d754a.  call temp:= `shouldLift`(v0, v3) @signature `Lcom/google/android/material/appbar/AppBarLayout;.shouldLift:(Landroid/view/View;)Z` @kind virtual;
  #L1d7550.  v1:= temp;
  #L1d7552.  call temp:= `setLiftedState`(v0, v1) @signature `Lcom/google/android/material/appbar/AppBarLayout;.setLiftedState:(Z)Z` @kind virtual;
  #L1d7558.  return @kind void;
}
procedure `android.view.View` `findFirstDependency`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Landroid/view/View;` @AccessFlag SYNTHETIC {
    temp;

  #L1d7134.  call temp:= `findFirstDependency`(v0, v1) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Lcom/google/android/material/appbar/AppBarLayout;` @kind virtual;
  #L1d713a.  v1:= temp @kind object;
  #L1d713c.  return v1 @kind object;
}
procedure `com.google.android.material.appbar.AppBarLayout` `findFirstDependency`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Lcom/google/android/material/appbar/AppBarLayout;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d72a4.  v0:= 0I;
  #L1d72a6.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d72ac.  v1:= temp;
  #L1d72ae.  if v0 >= v1 then goto L1d72d4;
  #L1d72b2.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d72b8.  v2:= temp @kind object;
  #L1d72ba.  v2:= (`android.view.View`) v2 @kind object;
  #L1d72be.  v3:= instanceof @variable v2 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L1d72c2.  if v3 == 0 then goto L1d72ce;
  #L1d72c6.  v3:= v2 @kind object;
  #L1d72c8.  v3:= (`com.google.android.material.appbar.AppBarLayout`) v3 @kind object;
  #L1d72cc.  return v3 @kind object;
  #L1d72ce.  v0:= v0 + 1;
  #L1d72d2.  goto L1d72ae;
  #L1d72d4.  v0:= 0I;
  #L1d72d6.  return v0 @kind object;
}
procedure `int` `getLeftAndRightOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getLeftAndRightOffset:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d738c.  call temp:= `getLeftAndRightOffset`(v1) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getLeftAndRightOffset:()I` @kind super;
  #L1d7392.  v0:= temp;
  #L1d7394.  return v0;
}
procedure `float` `getOverlapRatioForOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v8 @kind this, `android.view.View` v9 @kind object @name `header`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getOverlapRatioForOffset:(Landroid/view/View;)F` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d72e8.  v0:= instanceof @variable v9 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L1d72ec.  v1:= 0I;
  #L1d72ee.  if v0 == 0 then goto L1d7334;
  #L1d72f2.  v0:= v9 @kind object;
  #L1d72f4.  v0:= (`com.google.android.material.appbar.AppBarLayout`) v0 @kind object;
  #L1d72f8.  call temp:= `getTotalScrollRange`(v0) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getTotalScrollRange:()I` @kind virtual;
  #L1d72fe.  v2:= temp;
  #L1d7300.  call temp:= `getDownNestedPreScrollRange`(v0) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getDownNestedPreScrollRange:()I` @kind virtual;
  #L1d7306.  v3:= temp;
  #L1d7308.  call temp:= `getAppBarLayoutOffset`(v0) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getAppBarLayoutOffset:(Lcom/google/android/material/appbar/AppBarLayout;)I` @kind static;
  #L1d730e.  v4:= temp;
  #L1d7310.  if v3 == 0 then goto L1d731e;
  #L1d7314.  v5:= v2 + v4 @kind int;
  #L1d7318.  if v5 > v3 then goto L1d731e;
  #L1d731c.  return v1;
  #L1d731e.  v5:= v2 - v3 @kind int;
  #L1d7322.  if v5 == 0 then goto L1d7334;
  #L1d7326.  v1:= 1.0F;
  #L1d732a.  v6:= (`float`) v4 @kind i2f;
  #L1d732c.  v7:= (`float`) v5 @kind i2f;
  #L1d732e.  v6:= v6 / v7 @kind float;
  #L1d7330.  v6:= v6 + v1 @kind float;
  #L1d7332.  return v6;
  #L1d7334.  return v1;
}
procedure `int` `getScrollRange`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `android.view.View` v2 @kind object @name `v`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getScrollRange:(Landroid/view/View;)I` @AccessFlag  {
    temp;
    v0;

  #L1d73a8.  v0:= instanceof @variable v2 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L1d73ac.  if v0 == 0 then goto L1d73c0;
  #L1d73b0.  v0:= v2 @kind object;
  #L1d73b2.  v0:= (`com.google.android.material.appbar.AppBarLayout`) v0 @kind object;
  #L1d73b6.  call temp:= `getTotalScrollRange`(v0) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getTotalScrollRange:()I` @kind virtual;
  #L1d73bc.  v0:= temp;
  #L1d73be.  return v0;
  #L1d73c0.  call temp:= `getScrollRange`(v1, v2) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getScrollRange:(Landroid/view/View;)I` @kind super;
  #L1d73c6.  v0:= temp;
  #L1d73c8.  return v0;
}
procedure `int` `getTopAndBottomOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getTopAndBottomOffset:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d73dc.  call temp:= `getTopAndBottomOffset`(v1) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getTopAndBottomOffset:()I` @kind super;
  #L1d73e2.  v0:= temp;
  #L1d73e4.  return v0;
}
procedure `boolean` `isHorizontalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.isHorizontalOffsetEnabled:()Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d7150.  call temp:= `isHorizontalOffsetEnabled`(v1) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.isHorizontalOffsetEnabled:()Z` @kind super;
  #L1d7156.  v0:= temp;
  #L1d7158.  return v0;
}
procedure `boolean` `isVerticalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.isVerticalOffsetEnabled:()Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d716c.  call temp:= `isVerticalOffsetEnabled`(v1) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.isVerticalOffsetEnabled:()Z` @kind super;
  #L1d7172.  v0:= temp;
  #L1d7174.  return v0;
}
procedure `boolean` `layoutDependsOn`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v2 @kind object @name `parent`, `android.view.View` v3 @kind object @name `child`, `android.view.View` v4 @kind object @name `dependency`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.layoutDependsOn:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7188.  v0:= instanceof @variable v4 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L1d718c.  return v0;
}
procedure `boolean` `onDependentViewChanged`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v2 @kind object @name `parent`, `android.view.View` v3 @kind object @name `child`, `android.view.View` v4 @kind object @name `dependency`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onDependentViewChanged:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d71a0.  call `offsetChildAsNeeded`(v1, v3, v4) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.offsetChildAsNeeded:(Landroid/view/View;Landroid/view/View;)V` @kind direct;
  #L1d71a6.  call `updateLiftedStateIfNeeded`(v1, v3, v4) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.updateLiftedStateIfNeeded:(Landroid/view/View;Landroid/view/View;)V` @kind direct;
  #L1d71ac.  v0:= 0I;
  #L1d71ae.  return v0;
}
procedure `void` `onDependentViewRemoved`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v2 @kind object @name `parent`, `android.view.View` v3 @kind object @name `child`, `android.view.View` v4 @kind object @name `dependency`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onDependentViewRemoved:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d74c0.  v0:= instanceof @variable v4 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L1d74c4.  if v0 == 0 then goto L1d74ec;
  #L1d74c8.  v0:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_SCROLL_FORWARD` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L1d74cc.  call temp:= `getId`(v0) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;.getId:()I` @kind virtual;
  #L1d74d2.  v0:= temp;
  #L1d74d4.  call `removeAccessibilityAction`(v2, v0) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L1d74da.  v0:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_SCROLL_BACKWARD` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L1d74de.  call temp:= `getId`(v0) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;.getId:()I` @kind virtual;
  #L1d74e4.  v0:= temp;
  #L1d74e6.  call `removeAccessibilityAction`(v2, v0) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L1d74ec.  return @kind void;
}
procedure `boolean` `onLayoutChild`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `int` v3 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onLayoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1d71c0.  call temp:= `onLayoutChild`(v0, v1, v2, v3) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.onLayoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @kind super;
  #L1d71c6.  v1:= temp;
  #L1d71c8.  return v1;
}
procedure `boolean` `onMeasureChild`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onMeasureChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;IIII)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1d71dc.  call temp:= `onMeasureChild`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.onMeasureChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;IIII)Z` @kind super;
  #L1d71e2.  v1:= temp;
  #L1d71e4.  return v1;
}
procedure `boolean` `onRequestChildRectangleOnScreen`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v5 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v6 @kind object @name `parent`, `android.view.View` v7 @kind object @name `child`, `android.graphics.Rect` v8 @kind object @name `rectangle`, `boolean` v9 @name `immediate`) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onRequestChildRectangleOnScreen:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/graphics/Rect;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d71f8.  call temp:= `getDependencies`(v6, v7) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getDependencies:(Landroid/view/View;)Ljava/util/List;` @kind virtual;
  #L1d71fe.  v0:= temp @kind object;
  #L1d7200.  call temp:= `findFirstDependency`(v5, v0) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Lcom/google/android/material/appbar/AppBarLayout;` @kind virtual;
  #L1d7206.  v0:= temp @kind object;
  #L1d7208.  v1:= 0I;
  #L1d720a.  if v0 == 0 then goto L1d7258;
  #L1d720e.  call temp:= `getLeft`(v7) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L1d7214.  v2:= temp;
  #L1d7216.  call temp:= `getTop`(v7) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L1d721c.  v3:= temp;
  #L1d721e.  call `offset`(v8, v2, v3) @signature `Landroid/graphics/Rect;.offset:(II)V` @kind virtual;
  #L1d7224.  v2:= v5.`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior.tempRect1` @type ^`android.graphics.Rect` @kind object;
  #L1d7228.  call temp:= `getWidth`(v6) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getWidth:()I` @kind virtual;
  #L1d722e.  v3:= temp;
  #L1d7230.  call temp:= `getHeight`(v6) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getHeight:()I` @kind virtual;
  #L1d7236.  v4:= temp;
  #L1d7238.  call `set`(v2, v1, v1, v3, v4) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L1d723e.  call temp:= `contains`(v2, v8) @signature `Landroid/graphics/Rect;.contains:(Landroid/graphics/Rect;)Z` @kind virtual;
  #L1d7244.  v3:= temp;
  #L1d7246.  if v3 != 0 then goto L1d7258;
  #L1d724a.  v3:= v9 ^~ 1;
  #L1d724e.  call `setExpanded`(v0, v1, v3) @signature `Lcom/google/android/material/appbar/AppBarLayout;.setExpanded:(ZZ)V` @kind virtual;
  #L1d7254.  v1:= 1I;
  #L1d7256.  return v1;
  #L1d7258.  return v1;
}
procedure `void` `setHorizontalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setHorizontalOffsetEnabled:(Z)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1d7500.  call `setHorizontalOffsetEnabled`(v0, v1) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.setHorizontalOffsetEnabled:(Z)V` @kind super;
  #L1d7506.  return @kind void;
}
procedure `boolean` `setLeftAndRightOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setLeftAndRightOffset:(I)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1d726c.  call temp:= `setLeftAndRightOffset`(v0, v1) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.setLeftAndRightOffset:(I)Z` @kind super;
  #L1d7272.  v1:= temp;
  #L1d7274.  return v1;
}
procedure `boolean` `setTopAndBottomOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setTopAndBottomOffset:(I)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1d7288.  call temp:= `setTopAndBottomOffset`(v0, v1) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.setTopAndBottomOffset:(I)Z` @kind super;
  #L1d728e.  v1:= temp;
  #L1d7290.  return v1;
}
procedure `void` `setVerticalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setVerticalOffsetEnabled:(Z)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1d7518.  call `setVerticalOffsetEnabled`(v0, v1) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.setVerticalOffsetEnabled:(Z)V` @kind super;
  #L1d751e.  return @kind void;
}
