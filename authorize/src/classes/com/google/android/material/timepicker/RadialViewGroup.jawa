record `com.google.android.material.timepicker.RadialViewGroup` @kind class @AccessFlag  extends `androidx.constraintlayout.widget.ConstraintLayout` @kind class {
  `com.google.android.material.shape.MaterialShapeDrawable` `com.google.android.material.timepicker.RadialViewGroup.background` @AccessFlag PRIVATE;
  `int` `com.google.android.material.timepicker.RadialViewGroup.radius` @AccessFlag PRIVATE;
  `java.lang.Runnable` `com.google.android.material.timepicker.RadialViewGroup.updateLayoutParametersRunnable` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.android.material.timepicker.RadialViewGroup.SKIP_TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.material.timepicker.RadialViewGroup` v1 @kind this, `android.content.Context` v2 @kind object @name `context`) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L228580.  v0:= 0I;
  #L228582.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L228588.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.timepicker.RadialViewGroup` v1 @kind this, `android.content.Context` v2 @kind object @name `context`, `android.util.AttributeSet` v3 @kind object @name `attrs`) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L22859c.  v0:= 0I;
  #L22859e.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L2285a4.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.timepicker.RadialViewGroup` v3 @kind this, `android.content.Context` v4 @kind object @name `context`, `android.util.AttributeSet` v5 @kind object @name `attrs`, `int` v6 @name `defStyleAttr`) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2285b8.  call `<init>`(v3, v4, v5, v6) @signature `Landroidx/constraintlayout/widget/ConstraintLayout;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L2285be.  call temp:= `from`(v4) @signature `Landroid/view/LayoutInflater;.from:(Landroid/content/Context;)Landroid/view/LayoutInflater;` @kind static;
  #L2285c4.  v0:= temp @kind object;
  #L2285c6.  v1:= `@@com.google.android.material.R$layout.material_radial_view_group` @type ^`int`;
  #L2285ca.  call temp:= `inflate`(v0, v1, v3) @signature `Landroid/view/LayoutInflater;.inflate:(ILandroid/view/ViewGroup;)Landroid/view/View;` @kind virtual;
  #L2285d0.  call temp:= `createBackground`(v3) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.createBackground:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2285d6.  v0:= temp @kind object;
  #L2285d8.  call `setBackground`(v3, v0) @signature `Landroidx/core/view/ViewCompat;.setBackground:(Landroid/view/View;Landroid/graphics/drawable/Drawable;)V` @kind static;
  #L2285de.  v0:= `@@com.google.android.material.R$styleable.RadialViewGroup` @type ^`int`[] @kind object;
  #L2285e2.  v1:= 0I;
  #L2285e4.  call temp:= `obtainStyledAttributes`(v4, v5, v0, v6, v1) @signature `Landroid/content/Context;.obtainStyledAttributes:(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;` @kind virtual;
  #L2285ea.  v0:= temp @kind object;
  #L2285ec.  v2:= `@@com.google.android.material.R$styleable.RadialViewGroup_materialCircleRadius` @type ^`int`;
  #L2285f0.  call temp:= `getDimensionPixelSize`(v0, v2, v1) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L2285f6.  v1:= temp;
  #L2285f8.  v3.`com.google.android.material.timepicker.RadialViewGroup.radius` @type ^`int` := v1;
  #L2285fc.  v1:= new `com.google.android.material.timepicker.RadialViewGroup$1`;
  #L228600.  call `<init>`(v1, v3) @signature `Lcom/google/android/material/timepicker/RadialViewGroup$1;.<init>:(Lcom/google/android/material/timepicker/RadialViewGroup;)V` @kind direct;
  #L228606.  v3.`com.google.android.material.timepicker.RadialViewGroup.updateLayoutParametersRunnable` @type ^`java.lang.Runnable` := v1 @kind object;
  #L22860a.  call `recycle`(v0) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L228610.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `createBackground`(`com.google.android.material.timepicker.RadialViewGroup` v3 @kind this) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.createBackground:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2284f4.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L2284f8.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L2284fe.  v3.`com.google.android.material.timepicker.RadialViewGroup.background` @type ^`com.google.android.material.shape.MaterialShapeDrawable` := v0 @kind object;
  #L228502.  v1:= new `com.google.android.material.shape.RelativeCornerSize`;
  #L228506.  v2:= 0.5F;
  #L22850a.  call `<init>`(v1, v2) @signature `Lcom/google/android/material/shape/RelativeCornerSize;.<init>:(F)V` @kind direct;
  #L228510.  call `setCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(Lcom/google/android/material/shape/CornerSize;)V` @kind virtual;
  #L228516.  v0:= v3.`com.google.android.material.timepicker.RadialViewGroup.background` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L22851a.  v1:= -1I;
  #L22851c.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L228522.  v1:= temp @kind object;
  #L228524.  call `setFillColor`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L22852a.  v0:= v3.`com.google.android.material.timepicker.RadialViewGroup.background` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L22852e.  return v0 @kind object;
}
procedure `boolean` `shouldSkipView`(`android.view.View` v2 @kind object @name `child`) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.shouldSkipView:(Landroid/view/View;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L228540.  call temp:= `getTag`(v2) @signature `Landroid/view/View;.getTag:()Ljava/lang/Object;` @kind virtual;
  #L228546.  v0:= temp @kind object;
  #L228548.  v1:= "skip" @kind object;
  #L22854c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L228552.  v0:= temp;
  #L228554.  return v0;
}
procedure `void` `updateLayoutParamsAsync`(`com.google.android.material.timepicker.RadialViewGroup` v2 @kind this) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.updateLayoutParamsAsync:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L228790.  call temp:= `getHandler`(v2) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.getHandler:()Landroid/os/Handler;` @kind virtual;
  #L228796.  v0:= temp @kind object;
  #L228798.  if v0 == 0 then goto L2287b0;
  #L22879c.  v1:= v2.`com.google.android.material.timepicker.RadialViewGroup.updateLayoutParametersRunnable` @type ^`java.lang.Runnable` @kind object;
  #L2287a0.  call `removeCallbacks`(v0, v1) @signature `Landroid/os/Handler;.removeCallbacks:(Ljava/lang/Runnable;)V` @kind virtual;
  #L2287a6.  v1:= v2.`com.google.android.material.timepicker.RadialViewGroup.updateLayoutParametersRunnable` @type ^`java.lang.Runnable` @kind object;
  #L2287aa.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L2287b0.  return @kind void;
}
procedure `void` `addView`(`com.google.android.material.timepicker.RadialViewGroup` v2 @kind this, `android.view.View` v3 @kind object @name `child`, `int` v4 @name `index`, `android.view.ViewGroup$LayoutParams` v5 @kind object @name `params`) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L228624.  call `addView`(v2, v3, v4, v5) @signature `Landroidx/constraintlayout/widget/ConstraintLayout;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @kind super;
  #L22862a.  call temp:= `getId`(v3) @signature `Landroid/view/View;.getId:()I` @kind virtual;
  #L228630.  v0:= temp;
  #L228632.  v1:= -1I;
  #L228634.  if v0 != v1 then goto L228646;
  #L228638.  call temp:= `generateViewId`() @signature `Landroidx/core/view/ViewCompat;.generateViewId:()I` @kind static;
  #L22863e.  v0:= temp;
  #L228640.  call `setId`(v3, v0) @signature `Landroid/view/View;.setId:(I)V` @kind virtual;
  #L228646.  call `updateLayoutParamsAsync`(v2) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.updateLayoutParamsAsync:()V` @kind direct;
  #L22864c.  return @kind void;
}
procedure `int` `getRadius`(`com.google.android.material.timepicker.RadialViewGroup` v1 @kind this) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.getRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L228568.  v0:= v1.`com.google.android.material.timepicker.RadialViewGroup.radius` @type ^`int`;
  #L22856c.  return v0;
}
procedure `void` `onFinishInflate`(`com.google.android.material.timepicker.RadialViewGroup` v0 @kind this) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.onFinishInflate:()V` @AccessFlag PROTECTED {
    temp;

  #L228660.  call `onFinishInflate`(v0) @signature `Landroidx/constraintlayout/widget/ConstraintLayout;.onFinishInflate:()V` @kind super;
  #L228666.  call `updateLayoutParams`(v0) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.updateLayoutParams:()V` @kind virtual;
  #L22866c.  return @kind void;
}
procedure `void` `onViewRemoved`(`com.google.android.material.timepicker.RadialViewGroup` v0 @kind this, `android.view.View` v1 @kind object @name `view`) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.onViewRemoved:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;

  #L228680.  call `onViewRemoved`(v0, v1) @signature `Landroidx/constraintlayout/widget/ConstraintLayout;.onViewRemoved:(Landroid/view/View;)V` @kind super;
  #L228686.  call `updateLayoutParamsAsync`(v0) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.updateLayoutParamsAsync:()V` @kind direct;
  #L22868c.  return @kind void;
}
procedure `void` `setBackgroundColor`(`com.google.android.material.timepicker.RadialViewGroup` v2 @kind this, `int` v3 @name `color`) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.setBackgroundColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2286a0.  v0:= v2.`com.google.android.material.timepicker.RadialViewGroup.background` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L2286a4.  call temp:= `valueOf`(v3) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L2286aa.  v1:= temp @kind object;
  #L2286ac.  call `setFillColor`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L2286b2.  return @kind void;
}
procedure `void` `setRadius`(`com.google.android.material.timepicker.RadialViewGroup` v0 @kind this, `int` v1 @name `radius`) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.setRadius:(I)V` @AccessFlag PUBLIC {
    temp;

  #L2286c4.  v0.`com.google.android.material.timepicker.RadialViewGroup.radius` @type ^`int` := v1;
  #L2286c8.  call `updateLayoutParams`(v0) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.updateLayoutParams:()V` @kind virtual;
  #L2286ce.  return @kind void;
}
procedure `void` `updateLayoutParams`(`com.google.android.material.timepicker.RadialViewGroup` v9 @kind this) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.updateLayoutParams:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2286e0.  v0:= 1I;
  #L2286e2.  call temp:= `getChildCount`(v9) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.getChildCount:()I` @kind virtual;
  #L2286e8.  v1:= temp;
  #L2286ea.  v2:= 0I;
  #L2286ec.  if v2 >= v1 then goto L22870e;
  #L2286f0.  call temp:= `getChildAt`(v9, v2) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L2286f6.  v3:= temp @kind object;
  #L2286f8.  call temp:= `shouldSkipView`(v3) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.shouldSkipView:(Landroid/view/View;)Z` @kind static;
  #L2286fe.  v4:= temp;
  #L228700.  if v4 == 0 then goto L228708;
  #L228704.  v0:= v0 + 1;
  #L228708.  v2:= v2 + 1;
  #L22870c.  goto L2286ec;
  #L22870e.  v2:= new `androidx.constraintlayout.widget.ConstraintSet`;
  #L228712.  call `<init>`(v2) @signature `Landroidx/constraintlayout/widget/ConstraintSet;.<init>:()V` @kind direct;
  #L228718.  call `clone`(v2, v9) @signature `Landroidx/constraintlayout/widget/ConstraintSet;.clone:(Landroidx/constraintlayout/widget/ConstraintLayout;)V` @kind virtual;
  #L22871e.  v3:= 0I;
  #L228720.  v4:= 0I;
  #L228722.  if v4 >= v1 then goto L228776;
  #L228726.  call temp:= `getChildAt`(v9, v4) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L22872c.  v5:= temp @kind object;
  #L22872e.  call temp:= `getId`(v5) @signature `Landroid/view/View;.getId:()I` @kind virtual;
  #L228734.  v6:= temp;
  #L228736.  v7:= `@@com.google.android.material.R$id.circle_center` @type ^`int`;
  #L22873a.  if v6 == v7 then goto L228770;
  #L22873e.  call temp:= `shouldSkipView`(v5) @signature `Lcom/google/android/material/timepicker/RadialViewGroup;.shouldSkipView:(Landroid/view/View;)Z` @kind static;
  #L228744.  v6:= temp;
  #L228746.  if v6 == 0 then goto L22874c;
  #L22874a.  goto L228770;
  #L22874c.  call temp:= `getId`(v5) @signature `Landroid/view/View;.getId:()I` @kind virtual;
  #L228752.  v6:= temp;
  #L228754.  v7:= `@@com.google.android.material.R$id.circle_center` @type ^`int`;
  #L228758.  v8:= v9.`com.google.android.material.timepicker.RadialViewGroup.radius` @type ^`int`;
  #L22875c.  call `constrainCircle`(v2, v6, v7, v8, v3) @signature `Landroidx/constraintlayout/widget/ConstraintSet;.constrainCircle:(IIIF)V` @kind virtual;
  #L228762.  v6:= 360.0F;
  #L228766.  v7:= v1 - v0 @kind int;
  #L22876a.  v7:= (`float`) v7 @kind i2f;
  #L22876c.  v6:= v6 / v7 @kind float;
  #L22876e.  v3:= v3 + v6 @kind float;
  #L228770.  v4:= v4 + 1;
  #L228774.  goto L228722;
  #L228776.  call `applyTo`(v2, v9) @signature `Landroidx/constraintlayout/widget/ConstraintSet;.applyTo:(Landroidx/constraintlayout/widget/ConstraintLayout;)V` @kind virtual;
  #L22877c.  return @kind void;
}
