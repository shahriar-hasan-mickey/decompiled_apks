record `com.google.android.material.transition.platform.FitModeEvaluators$1` @kind class @AccessFlag FINAL extends `com.google.android.material.transition.platform.FitModeEvaluator` @kind interface {
}
procedure `void` `<init>`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v0 @kind this) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L230530.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L230536.  return @kind void;
}
procedure `void` `applyMask`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v3 @kind this, `android.graphics.RectF` v4 @kind object @name `maskBounds`, `float` v5 @name `maskMultiplier`, `com.google.android.material.transition.platform.FitModeResult` v6 @kind object @name `fitModeResult`) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.applyMask:(Landroid/graphics/RectF;FLcom/google/android/material/transition/platform/FitModeResult;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L230548.  v0:= v6.`com.google.android.material.transition.platform.FitModeResult.currentEndHeight` @type ^`float`;
  #L23054c.  v1:= v6.`com.google.android.material.transition.platform.FitModeResult.currentStartHeight` @type ^`float`;
  #L230550.  v0:= v0 - v1 @kind float;
  #L230552.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L230558.  v0:= temp;
  #L23055a.  v1:= v4.`android.graphics.RectF.bottom` @type ^`float`;
  #L23055e.  v2:= v0 * v5 @kind float;
  #L230562.  v1:= v1 - v2 @kind float;
  #L230564.  v4.`android.graphics.RectF.bottom` @type ^`float` := v1;
  #L230568.  return @kind void;
}
procedure `com.google.android.material.transition.platform.FitModeResult` `evaluate`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v13 @kind this, `float` v14 @name `progress`, `float` v15 @name `scaleStartFraction`, `float` v16 @name `scaleEndFraction`, `float` v17 @name `startWidth`, `float` v18 @name `startHeight`, `float` v19 @name `endWidth`, `float` v20 @name `endHeight`) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.evaluate:(FFFFFFF)Lcom/google/android/material/transition/platform/FitModeResult;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2304d8.  
  #L2304da.  v5:= 1I;
  #L2304dc.  v0:= v17;
  #L2304e0.  v1:= v19;
  #L2304e4.  v2:= v15;
  #L2304e6.  v3:= v16;
  #L2304ea.  v4:= v14;
  #L2304ec.  call temp:= `lerp`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/transition/platform/TransitionUtils;.lerp:(FFFFFZ)F` @kind static;
  #L2304f2.  v0:= temp;
  #L2304f4.  v1:= v0 / v17 @kind float;
  #L2304f8.  v2:= v0 / v19 @kind float;
  #L2304fc.  v3:= v18 * v1 @kind float;
  #L230500.  v4:= v20 * v2 @kind float;
  #L230504.  v5:= new `com.google.android.material.transition.platform.FitModeResult`;
  #L230508.  v6:= v5 @kind object;
  #L23050a.  v7:= v1;
  #L23050c.  v8:= v2;
  #L23050e.  v9:= v0;
  #L230510.  v10:= v3;
  #L230512.  v11:= v0;
  #L230514.  v12:= v4;
  #L230516.  call `<init>`(v6, v7, v8, v9, v10, v11, v12) @signature `Lcom/google/android/material/transition/platform/FitModeResult;.<init>:(FFFFFF)V` @kind direct;
  #L23051c.  return v5 @kind object;
}
procedure `boolean` `shouldMaskStartBounds`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v2 @kind this, `com.google.android.material.transition.platform.FitModeResult` v3 @kind object @name `fitModeResult`) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.shouldMaskStartBounds:(Lcom/google/android/material/transition/platform/FitModeResult;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2304b0.  v0:= v3.`com.google.android.material.transition.platform.FitModeResult.currentStartHeight` @type ^`float`;
  #L2304b4.  v1:= v3.`com.google.android.material.transition.platform.FitModeResult.currentEndHeight` @type ^`float`;
  #L2304b8.  v0:= fcmpl(v0, v1);
  #L2304bc.  if v0 <= 0 then goto L2304c4;
  #L2304c0.  v0:= 1I;
  #L2304c2.  goto L2304c6;
  #L2304c4.  v0:= 0I;
  #L2304c6.  return v0;
}
