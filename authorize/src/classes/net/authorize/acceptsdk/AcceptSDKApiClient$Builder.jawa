record `net.authorize.acceptsdk.AcceptSDKApiClient$Builder` @kind class @AccessFlag PUBLIC {
  `int` `net.authorize.acceptsdk.AcceptSDKApiClient$Builder.connectionTimeout` @AccessFlag PRIVATE;
  `java.lang.ref.WeakReference` `net.authorize.acceptsdk.AcceptSDKApiClient$Builder.context` @AccessFlag PRIVATE_FINAL;
  `net.authorize.acceptsdk.AcceptSDKApiClient$Environment` `net.authorize.acceptsdk.AcceptSDKApiClient$Builder.environment` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`net.authorize.acceptsdk.AcceptSDKApiClient$Builder` v2 @kind this, `android.content.Context` v3 @kind object @name `context`, `net.authorize.acceptsdk.AcceptSDKApiClient$Environment` v4 @kind object @name `environment`) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;.<init>:(Landroid/content/Context;Lnet/authorize/acceptsdk/AcceptSDKApiClient$Environment;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L23416c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L234172.  if v3 == 0 then goto L234196;
  #L234176.  v0:= new `java.lang.ref.WeakReference`;
  #L23417a.  call `<init>`(v0, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L234180.  v2.`net.authorize.acceptsdk.AcceptSDKApiClient$Builder.context` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L234184.  if v4 != 0 then goto L23418e;
  #L234188.  v0:= `@@net.authorize.acceptsdk.AcceptSDKApiClient$Environment.SANDBOX` @type ^`net.authorize.acceptsdk.AcceptSDKApiClient$Environment` @kind object;
  #L23418c.  goto L234190;
  #L23418e.  v0:= v4 @kind object;
  #L234190.  v2.`net.authorize.acceptsdk.AcceptSDKApiClient$Builder.environment` @type ^`net.authorize.acceptsdk.AcceptSDKApiClient$Environment` := v0 @kind object;
  #L234194.  return @kind void;
  #L234196.  v0:= new `java.lang.NullPointerException`;
  #L23419a.  v1:= "Context must not be null" @kind object;
  #L23419e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2341a4.  throw v0;
}
procedure `java.lang.ref.WeakReference` `access$000`(`net.authorize.acceptsdk.AcceptSDKApiClient$Builder` v1 @kind object @name `x0`) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;.access$000:(Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;)Ljava/lang/ref/WeakReference;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L234108.  v0:= v1.`net.authorize.acceptsdk.AcceptSDKApiClient$Builder.context` @type ^`java.lang.ref.WeakReference` @kind object;
  #L23410c.  return v0 @kind object;
}
procedure `net.authorize.acceptsdk.AcceptSDKApiClient$Environment` `access$100`(`net.authorize.acceptsdk.AcceptSDKApiClient$Builder` v1 @kind object @name `x0`) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;.access$100:(Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;)Lnet/authorize/acceptsdk/AcceptSDKApiClient$Environment;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L234154.  v0:= v1.`net.authorize.acceptsdk.AcceptSDKApiClient$Builder.environment` @type ^`net.authorize.acceptsdk.AcceptSDKApiClient$Environment` @kind object;
  #L234158.  return v0 @kind object;
}
procedure `int` `access$200`(`net.authorize.acceptsdk.AcceptSDKApiClient$Builder` v1 @kind object @name `x0`) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;.access$200:(Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2340f0.  v0:= v1.`net.authorize.acceptsdk.AcceptSDKApiClient$Builder.connectionTimeout` @type ^`int`;
  #L2340f4.  return v0;
}
procedure `net.authorize.acceptsdk.AcceptSDKApiClient` `build`(`net.authorize.acceptsdk.AcceptSDKApiClient$Builder` v1 @kind this) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;.build:()Lnet/authorize/acceptsdk/AcceptSDKApiClient;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234120.  v0:= new `net.authorize.acceptsdk.AcceptSDKApiClient`;
  #L234124.  call `<init>`(v0, v1) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient;.<init>:(Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;)V` @kind direct;
  #L23412a.  return v0 @kind object;
}
procedure `net.authorize.acceptsdk.AcceptSDKApiClient$Builder` `connectionTimeout`(`net.authorize.acceptsdk.AcceptSDKApiClient$Builder` v0 @kind this, `int` v1 @name `timeout`) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;.connectionTimeout:(I)Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L23413c.  v0.`net.authorize.acceptsdk.AcceptSDKApiClient$Builder.connectionTimeout` @type ^`int` := v1;
  #L234140.  return v0 @kind object;
}
