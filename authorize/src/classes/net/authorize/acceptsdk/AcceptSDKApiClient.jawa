record `net.authorize.acceptsdk.AcceptSDKApiClient` @kind class @AccessFlag PUBLIC {
  `net.authorize.acceptsdk.AcceptSDKApiClient$Environment` `net.authorize.acceptsdk.AcceptSDKApiClient.mEnvironment` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ref.WeakReference` `@@net.authorize.acceptsdk.AcceptSDKApiClient.sContext` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`net.authorize.acceptsdk.AcceptSDKApiClient` v1 @kind this, `net.authorize.acceptsdk.AcceptSDKApiClient$Builder` v2 @kind object @name `builder`) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient;.<init>:(Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2342e0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2342e6.  call temp:= `access$000`(v2) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;.access$000:(Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;)Ljava/lang/ref/WeakReference;` @kind static;
  #L2342ec.  v0:= temp @kind object;
  #L2342ee.  `@@net.authorize.acceptsdk.AcceptSDKApiClient.sContext` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L2342f2.  call temp:= `access$100`(v2) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;.access$100:(Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;)Lnet/authorize/acceptsdk/AcceptSDKApiClient$Environment;` @kind static;
  #L2342f8.  v0:= temp @kind object;
  #L2342fa.  v1.`net.authorize.acceptsdk.AcceptSDKApiClient.mEnvironment` @type ^`net.authorize.acceptsdk.AcceptSDKApiClient$Environment` := v0 @kind object;
  #L2342fe.  call temp:= `access$200`(v2) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;.access$200:(Lnet/authorize/acceptsdk/AcceptSDKApiClient$Builder;)I` @kind static;
  #L234304.  v0:= temp;
  #L234306.  call `configureConnectionTimeout`(v1, v0) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient;.configureConnectionTimeout:(I)V` @kind direct;
  #L23430c.  call `setActiveEndPointUrl`(v1) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient;.setActiveEndPointUrl:()V` @kind direct;
  #L234312.  return @kind void;
}
procedure `void` `configureConnectionTimeout`(`net.authorize.acceptsdk.AcceptSDKApiClient` v0 @kind this, `int` v1 @name `timeoutMillis`) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient;.configureConnectionTimeout:(I)V` @AccessFlag PRIVATE {
    temp;

  #L234324.  call `setConnectionTimeout`(v1) @signature `Lnet/authorize/acceptsdk/network/ConnectionData;.setConnectionTimeout:(I)V` @kind static;
  #L23432a.  return @kind void;
}
procedure `java.lang.ref.WeakReference` `getContext`() @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient;.getContext:()Ljava/lang/ref/WeakReference;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2342b0.  v0:= `@@net.authorize.acceptsdk.AcceptSDKApiClient.sContext` @type ^`java.lang.ref.WeakReference` @kind object;
  #L2342b4.  return v0 @kind object;
}
procedure `void` `setActiveEndPointUrl`(`net.authorize.acceptsdk.AcceptSDKApiClient` v2 @kind this) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient;.setActiveEndPointUrl:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L23433c.  v0:= v2.`net.authorize.acceptsdk.AcceptSDKApiClient.mEnvironment` @type ^`net.authorize.acceptsdk.AcceptSDKApiClient$Environment` @kind object;
  #L234340.  v1:= `@@net.authorize.acceptsdk.AcceptSDKApiClient$Environment.PRODUCTION` @type ^`net.authorize.acceptsdk.AcceptSDKApiClient$Environment` @kind object;
  #L234344.  if v0 != v1 then goto L23434e;
  #L234348.  v0:= "https://api.authorize.net/xml/v1/request.api " @kind object;
  #L23434c.  goto L234352;
  #L23434e.  v0:= "https://apitest.authorize.net/xml/v1/request.api " @kind object;
  #L234352.  call `setActiveEndPointUrl`(v0) @signature `Lnet/authorize/acceptsdk/network/ConnectionData;.setActiveEndPointUrl:(Ljava/lang/String;)V` @kind static;
  #L234358.  return @kind void;
}
procedure `net.authorize.acceptsdk.AcceptSDKApiClient$Environment` `getEnvironment`(`net.authorize.acceptsdk.AcceptSDKApiClient` v1 @kind this) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient;.getEnvironment:()Lnet/authorize/acceptsdk/AcceptSDKApiClient$Environment;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2342c8.  v0:= v1.`net.authorize.acceptsdk.AcceptSDKApiClient.mEnvironment` @type ^`net.authorize.acceptsdk.AcceptSDKApiClient$Environment` @kind object;
  #L2342cc.  return v0 @kind object;
}
procedure `boolean` `getTokenWithRequest`(`net.authorize.acceptsdk.AcceptSDKApiClient` v2 @kind this, `net.authorize.acceptsdk.datamodel.transaction.EncryptTransactionObject` v3 @kind object @name `transactionObject`, `net.authorize.acceptsdk.datamodel.transaction.callbacks.EncryptTransactionCallback` v4 @kind object @name `callback`) @signature `Lnet/authorize/acceptsdk/AcceptSDKApiClient;.getTokenWithRequest:(Lnet/authorize/acceptsdk/datamodel/transaction/EncryptTransactionObject;Lnet/authorize/acceptsdk/datamodel/transaction/callbacks/EncryptTransactionCallback;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L234264.  if v3 == 0 then goto L23428e;
  #L234268.  if v4 == 0 then goto L23427e;
  #L23426c.  call temp:= `getInstance`() @signature `Lnet/authorize/acceptsdk/internal/AcceptSDKCore;.getInstance:()Lnet/authorize/acceptsdk/internal/AcceptSDKCore;` @kind static;
  #L234272.  v0:= temp @kind object;
  #L234274.  call temp:= `performEncryption`(v0, v3, v4) @signature `Lnet/authorize/acceptsdk/internal/AcceptSDKCore;.performEncryption:(Lnet/authorize/acceptsdk/datamodel/transaction/EncryptTransactionObject;Lnet/authorize/acceptsdk/datamodel/transaction/callbacks/EncryptTransactionCallback;)Z` @kind virtual;
  #L23427a.  v0:= temp;
  #L23427c.  return v0;
  #L23427e.  v0:= new `java.lang.NullPointerException`;
  #L234282.  v1:= "Transaction Callback must not be null" @kind object;
  #L234286.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23428c.  throw v0;
  #L23428e.  v0:= new `java.lang.NullPointerException`;
  #L234292.  v1:= "Transaction Object must not be null" @kind object;
  #L234296.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23429c.  throw v0;
}
