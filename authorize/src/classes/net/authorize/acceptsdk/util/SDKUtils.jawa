record `net.authorize.acceptsdk.util.SDKUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@net.authorize.acceptsdk.util.SDKUtils.BASIC_DATE_FORMAT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@net.authorize.acceptsdk.util.SDKUtils.CONNECTION_ATTEPTS` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@net.authorize.acceptsdk.util.SDKUtils.CONNECTION_TIMEOUT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@net.authorize.acceptsdk.util.SDKUtils.DATE_FORMAT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@net.authorize.acceptsdk.util.SDKUtils.DEFAULT_TIMEZONE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@net.authorize.acceptsdk.util.SDKUtils.PORT_443` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@net.authorize.acceptsdk.util.SDKUtils.PORT_80` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@net.authorize.acceptsdk.util.SDKUtils.RECIEVE_DATA_TIMEOUT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@net.authorize.acceptsdk.util.SDKUtils.TIME_FORMAT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@net.authorize.acceptsdk.util.SDKUtils.UTC_TIMEZONE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`net.authorize.acceptsdk.util.SDKUtils` v0 @kind this) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L237410.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L237416.  return @kind void;
}
procedure `java.lang.String` `convertStreamToString`(`java.io.InputStream` v2 @kind object @name `is`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.convertStreamToString:(Ljava/io/InputStream;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L236ff4.  v0:= new `java.util.Scanner`;
  #L236ff8.  call `<init>`(v0, v2) @signature `Ljava/util/Scanner;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L236ffe.  v1:= "\\A" @kind object;
  #L237002.  call temp:= `useDelimiter`(v0, v1) @signature `Ljava/util/Scanner;.useDelimiter:(Ljava/lang/String;)Ljava/util/Scanner;` @kind virtual;
  #L237008.  call temp:= `hasNext`(v0) @signature `Ljava/util/Scanner;.hasNext:()Z` @kind virtual;
  #L23700e.  v1:= temp;
  #L237010.  if v1 == 0 then goto L23701e;
  #L237014.  call temp:= `next`(v0) @signature `Ljava/util/Scanner;.next:()Ljava/lang/String;` @kind virtual;
  #L23701a.  v1:= temp @kind object;
  #L23701c.  goto L237022;
  #L23701e.  v1:= "" @kind object;
  #L237022.  call `close`(v0) @signature `Ljava/util/Scanner;.close:()V` @kind virtual;
  #L237028.  return v1 @kind object;
}
procedure `java.lang.String` `convertTimeInMilisToDate`(`java.lang.String` v1 @kind object @name `timeStamp`, `java.lang.String` v2 @kind object @name `timezone`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.convertTimeInMilisToDate:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23703c.  v0:= "yyyy-MM-dd" @kind object;
  #L237040.  call temp:= `getTime`(v1, v2, v0) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getTime:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L237046.  v0:= temp @kind object;
  #L237048.  return v0 @kind object;
}
procedure `java.lang.String` `convertTimeInMilisToTime`(`java.lang.String` v1 @kind object @name `timeStamp`, `java.lang.String` v2 @kind object @name `timezone`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.convertTimeInMilisToTime:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23705c.  v0:= "hh:mm a" @kind object;
  #L237060.  call temp:= `getTime`(v1, v2, v0) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getTime:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L237066.  v0:= temp @kind object;
  #L237068.  return v0 @kind object;
}
procedure `java.lang.String` `convertToLocalDate`(`java.lang.String` v1 @kind object @name `input`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.convertToLocalDate:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23707c.  v0:= "yyyy-MM-dd" @kind object;
  #L237080.  call temp:= `getTime`(v1, v0) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getTime:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L237086.  v0:= temp @kind object;
  #L237088.  return v0 @kind object;
}
procedure `java.lang.String` `convertToLocalTime`(`java.lang.String` v1 @kind object @name `input`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.convertToLocalTime:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23709c.  v0:= "hh:mm a" @kind object;
  #L2370a0.  call temp:= `getTime`(v1, v0) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getTime:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2370a6.  v0:= temp @kind object;
  #L2370a8.  return v0 @kind object;
}
procedure `java.lang.String` `getAmountStringFromBigDecimal`(`java.math.BigDecimal` v2 @kind object @name `value`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getAmountStringFromBigDecimal:(Ljava/math/BigDecimal;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2370bc.  v0:= `@@java.math.RoundingMode.CEILING` @type ^`java.math.RoundingMode` @kind object;
  #L2370c0.  v1:= 2I;
  #L2370c2.  call temp:= `setScale`(v2, v1, v0) @signature `Ljava/math/BigDecimal;.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;` @kind virtual;
  #L2370c8.  v0:= temp @kind object;
  #L2370ca.  call temp:= `toPlainString`(v0) @signature `Ljava/math/BigDecimal;.toPlainString:()Ljava/lang/String;` @kind virtual;
  #L2370d0.  v1:= temp @kind object;
  #L2370d2.  return v1 @kind object;
}
procedure `javax.net.ssl.HttpsURLConnection` `getHttpsURLConnection`(`java.lang.String` v4 @kind object @name `urlString`, `java.lang.String` v5 @kind object @name `requestMethod`, `boolean` v6 @name `doOutput`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getHttpsURLConnection:(Ljava/lang/String;Ljava/lang/String;Z)Ljavax/net/ssl/HttpsURLConnection;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L237248.  v0:= new `java.net.URL`;
  #L23724c.  call `<init>`(v0, v4) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L237252.  call temp:= `openConnection`(v0) @signature `Ljava/net/URL;.openConnection:()Ljava/net/URLConnection;` @kind virtual;
  #L237258.  v1:= temp @kind object;
  #L23725a.  v1:= (`javax.net.ssl.HttpsURLConnection`) v1 @kind object;
  #L23725e.  call temp:= `getSSLSocketFactory`() @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getSSLSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L237264.  v2:= temp @kind object;
  #L237266.  if v2 == 0 then goto L237278;
  #L23726a.  call temp:= `getSSLSocketFactory`() @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getSSLSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L237270.  v3:= temp @kind object;
  #L237272.  call `setSSLSocketFactory`(v1, v3) @signature `Ljavax/net/ssl/HttpsURLConnection;.setSSLSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)V` @kind virtual;
  #L237278.  if v5 == 0 then goto L237282;
  #L23727c.  call `setRequestMethod`(v1, v5) @signature `Ljavax/net/ssl/HttpsURLConnection;.setRequestMethod:(Ljava/lang/String;)V` @kind virtual;
  #L237282.  v3:= 10000I;
  #L237286.  call `setConnectTimeout`(v1, v3) @signature `Ljavax/net/ssl/HttpsURLConnection;.setConnectTimeout:(I)V` @kind virtual;
  #L23728c.  v3:= 30000I;
  #L237290.  call `setReadTimeout`(v1, v3) @signature `Ljavax/net/ssl/HttpsURLConnection;.setReadTimeout:(I)V` @kind virtual;
  #L237296.  call `setDoOutput`(v1, v6) @signature `Ljavax/net/ssl/HttpsURLConnection;.setDoOutput:(Z)V` @kind virtual;
  #L23729c.  v3:= 1I;
  #L23729e.  call `setDoInput`(v1, v3) @signature `Ljavax/net/ssl/HttpsURLConnection;.setDoInput:(Z)V` @kind virtual;
  #L2372a4.  return v1 @kind object;
}
procedure `net.authorize.acceptsdk.util.SDKCurrency` `getSDKCurrencyFromString`(`java.lang.String` v4 @kind object @name `currencyString`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getSDKCurrencyFromString:(Ljava/lang/String;)Lnet/authorize/acceptsdk/util/SDKCurrency;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L237348.  call temp:= `hashCode`(v4) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L23734e.  v0:= temp;
  #L237350.  v1:= 3I;
  #L237352.  v2:= 2I;
  #L237354.  v3:= 1I;
  #L237356.  goto L2373dc;
  #L23735c.  goto L2373ae;
  #L23735e.  v0:= "USD" @kind object;
  #L237362.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L237368.  v0:= temp;
  #L23736a.  if v0 == 0 then goto L23735c;
  #L23736e.  v0:= 0I;
  #L237370.  goto L2373b0;
  #L237372.  v0:= "GBP" @kind object;
  #L237376.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23737c.  v0:= temp;
  #L23737e.  if v0 == 0 then goto L23735c;
  #L237382.  v0:= v1;
  #L237384.  goto L2373b0;
  #L237386.  v0:= "EUR" @kind object;
  #L23738a.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L237390.  v0:= temp;
  #L237392.  if v0 == 0 then goto L23735c;
  #L237396.  v0:= v2;
  #L237398.  goto L2373b0;
  #L23739a.  v0:= "CAD" @kind object;
  #L23739e.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2373a4.  v0:= temp;
  #L2373a6.  if v0 == 0 then goto L23735c;
  #L2373aa.  v0:= v3;
  #L2373ac.  goto L2373b0;
  #L2373ae.  v0:= -1I;
  #L2373b0.  if v0 == 0 then goto L2373d6;
  #L2373b4.  if v0 == v3 then goto L2373d0;
  #L2373b8.  if v0 == v2 then goto L2373ca;
  #L2373bc.  if v0 == v1 then goto L2373c4;
  #L2373c0.  v0:= 0I;
  #L2373c2.  return v0 @kind object;
  #L2373c4.  v0:= `@@net.authorize.acceptsdk.util.SDKCurrency.GBP` @type ^`net.authorize.acceptsdk.util.SDKCurrency` @kind object;
  #L2373c8.  return v0 @kind object;
  #L2373ca.  v0:= `@@net.authorize.acceptsdk.util.SDKCurrency.EUR` @type ^`net.authorize.acceptsdk.util.SDKCurrency` @kind object;
  #L2373ce.  return v0 @kind object;
  #L2373d0.  v0:= `@@net.authorize.acceptsdk.util.SDKCurrency.CAD` @type ^`net.authorize.acceptsdk.util.SDKCurrency` @kind object;
  #L2373d4.  return v0 @kind object;
  #L2373d6.  v0:= `@@net.authorize.acceptsdk.util.SDKCurrency.USD` @type ^`net.authorize.acceptsdk.util.SDKCurrency` @kind object;
  #L2373da.  return v0 @kind object;
  #L2373dc.  switch v0
                  | 66470 => goto L23739a
                  | 69026 => goto L237386
                  | 70357 => goto L237372
                  | 84326 => goto L23735e
                  | else => goto L23735c;
}
procedure `javax.net.ssl.SSLSocketFactory` `getSSLSocketFactory`() @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getSSLSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2372b8.  v0:= 0I;
  #L2372ba.  v1:= "TLSv1.2" @kind object;
  #L2372be.  call temp:= `getInstance`(v1) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L2372c4.  v1:= temp @kind object;
  #L2372c6.  v2:= new `java.security.SecureRandom`;
  #L2372ca.  call `<init>`(v2) @signature `Ljava/security/SecureRandom;.<init>:()V` @kind direct;
  #L2372d0.  call `init`(v1, v0, v0, v2) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L2372d6.  call temp:= `getSocketFactory`(v1) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L2372dc.  v0:= temp @kind object;
  #L2372de.  return v0 @kind object;
  #L2372e0.  v1:= Exception @type ^`java.security.KeyManagementException` @kind object;
  #L2372e2.  goto L2372e6;
  #L2372e4.  v1:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L2372e6.  return v0 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L2372ba..L2372de] goto L2372e4;
  catch `java.security.KeyManagementException` @[L2372ba..L2372de] goto L2372e0;
}
procedure `java.lang.String` `getTime`(`java.lang.String` v6 @kind object @name `input`, `java.lang.String` v7 @kind object @name `format`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getTime:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2370e4.  v0:= "UTC" @kind object;
  #L2370e8.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L2370ee.  v0:= temp @kind object;
  #L2370f0.  v1:= new `java.text.SimpleDateFormat`;
  #L2370f4.  v2:= "yyyy-MM-dd'T'HH:mm:ss'Z'" @kind object;
  #L2370f8.  call `<init>`(v1, v2) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2370fe.  call `setTimeZone`(v1, v0) @signature `Ljava/text/SimpleDateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L237104.  v2:= new `java.util.GregorianCalendar`;
  #L237108.  call `<init>`(v2, v0) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L23710e.  call temp:= `parse`(v1, v6) @signature `Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L237114.  v3:= temp @kind object;
  #L237116.  call `setTime`(v2, v3) @signature `Ljava/util/GregorianCalendar;.setTime:(Ljava/util/Date;)V` @kind virtual;
  #L23711c.  v3:= new `java.util.Date`;
  #L237120.  call temp:= `getTime`(v2) @signature `Ljava/util/GregorianCalendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L237126.  v4:= temp @kind object;
  #L237128.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L23712e.  v4:= temp @kind wide;
  #L237130.  call `<init>`(v3, v4) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L237136.  v4:= new `java.text.SimpleDateFormat`;
  #L23713a.  call `<init>`(v4, v7) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L237140.  call temp:= `format`(v4, v3) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L237146.  v5:= temp @kind object;
  #L237148.  return v5 @kind object;
  #L23714a.  v3:= Exception @type ^`java.text.ParseException` @kind object;
  #L23714c.  return v6 @kind object;
  catch `java.text.ParseException` @[L23710e..L237148] goto L23714a;
}
procedure `java.lang.String` `getTime`(`java.lang.String` v12 @kind object @name `timeStamp`, `java.lang.String` v13 @kind object @name `timezone`, `java.lang.String` v14 @kind object @name `format`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.getTime:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L237170.  v0:= "UTC" @kind object;
  #L237174.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L23717a.  v0:= temp @kind object;
  #L23717c.  call temp:= `stringToLong`(v12) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.stringToLong:(Ljava/lang/String;)J` @kind static;
  #L237182.  v1:= temp @kind wide;
  #L237184.  call temp:= `isEmpty`(v13) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L23718a.  v3:= temp;
  #L23718c.  if v3 != 0 then goto L23719a;
  #L237190.  call temp:= `getTimeZone`(v13) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L237196.  v3:= temp @kind object;
  #L237198.  goto L2371a6;
  #L23719a.  v3:= "America/Los_Angeles" @kind object;
  #L23719e.  call temp:= `getTimeZone`(v3) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L2371a4.  v3:= temp @kind object;
  #L2371a6.  v4:= new `java.text.SimpleDateFormat`;
  #L2371aa.  v5:= "yyyy-MM-dd'T'HH:mm:ss'Z'" @kind object;
  #L2371ae.  call `<init>`(v4, v5) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2371b4.  call `setTimeZone`(v4, v3) @signature `Ljava/text/SimpleDateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L2371ba.  v6:= new `java.util.Date`;
  #L2371be.  call `<init>`(v6, v1) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L2371c4.  call temp:= `format`(v4, v6) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L2371ca.  v7:= temp @kind object;
  #L2371cc.  v8:= new `java.util.GregorianCalendar`;
  #L2371d0.  call `<init>`(v8, v0) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L2371d6.  v9:= new `java.text.SimpleDateFormat`;
  #L2371da.  call `<init>`(v9, v5) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2371e0.  v5:= v9 @kind object;
  #L2371e2.  call `setTimeZone`(v5, v0) @signature `Ljava/text/SimpleDateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L2371e8.  call temp:= `parse`(v5, v7) @signature `Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L2371ee.  v9:= temp @kind object;
  #L2371f0.  call `setTime`(v8, v9) @signature `Ljava/util/GregorianCalendar;.setTime:(Ljava/util/Date;)V` @kind virtual;
  #L2371f6.  v9:= new `java.util.Date`;
  #L2371fa.  call temp:= `getTime`(v8) @signature `Ljava/util/GregorianCalendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L237200.  v10:= temp @kind object;
  #L237202.  call temp:= `getTime`(v10) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L237208.  v10:= temp @kind wide;
  #L23720a.  call `<init>`(v9, v10) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L237210.  v10:= new `java.text.SimpleDateFormat`;
  #L237214.  call `<init>`(v10, v14) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23721a.  call temp:= `format`(v10, v9) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L237220.  v11:= temp @kind object;
  #L237222.  return v11 @kind object;
  #L237224.  v5:= Exception @type ^`java.text.ParseException` @kind object;
  #L237226.  return v7 @kind object;
  catch `java.text.ParseException` @[L2371d6..L237222] goto L237224;
}
procedure `long` `stringToLong`(`java.lang.String` v4 @kind object @name `value`) @signature `Lnet/authorize/acceptsdk/util/SDKUtils;.stringToLong:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L237308.  v0:= 0L;
  #L23730c.  if v4 == 0 then goto L237324;
  #L237310.  call temp:= `parseLong`(v4) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L237316.  v2:= temp @kind wide;
  #L237318.  v0:= v2 @kind wide;
  #L23731a.  goto L237324;
  #L23731c.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L23731e.  call `printStackTrace`(v2) @signature `Ljava/lang/NumberFormatException;.printStackTrace:()V` @kind virtual;
  #L237324.  return v0 @kind wide;
  catch `java.lang.NumberFormatException` @[L237310..L237318] goto L23731c;
}
