record `net.authorize.acceptsdk.util.SDKCurrency` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `net.authorize.acceptsdk.util.SDKCurrency.symbol` @AccessFlag PRIVATE;
}
global `net.authorize.acceptsdk.util.SDKCurrency`[] `@@net.authorize.acceptsdk.util.SDKCurrency.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `net.authorize.acceptsdk.util.SDKCurrency` `@@net.authorize.acceptsdk.util.SDKCurrency.CAD` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `net.authorize.acceptsdk.util.SDKCurrency` `@@net.authorize.acceptsdk.util.SDKCurrency.EUR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `net.authorize.acceptsdk.util.SDKCurrency` `@@net.authorize.acceptsdk.util.SDKCurrency.GBP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `net.authorize.acceptsdk.util.SDKCurrency` `@@net.authorize.acceptsdk.util.SDKCurrency.USD` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L236f50.  v0:= new `net.authorize.acceptsdk.util.SDKCurrency`;
  #L236f54.  v1:= "CAD" @kind object;
  #L236f58.  v2:= 0I;
  #L236f5a.  v3:= "$" @kind object;
  #L236f5e.  call `<init>`(v0, v1, v2, v3) @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L236f64.  `@@net.authorize.acceptsdk.util.SDKCurrency.CAD` @type ^`net.authorize.acceptsdk.util.SDKCurrency` := v0 @kind object;
  #L236f68.  v1:= new `net.authorize.acceptsdk.util.SDKCurrency`;
  #L236f6c.  v4:= "EUR" @kind object;
  #L236f70.  v5:= 1I;
  #L236f72.  v6:= "€" @kind object;
  #L236f76.  call `<init>`(v1, v4, v5, v6) @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L236f7c.  `@@net.authorize.acceptsdk.util.SDKCurrency.EUR` @type ^`net.authorize.acceptsdk.util.SDKCurrency` := v1 @kind object;
  #L236f80.  v4:= new `net.authorize.acceptsdk.util.SDKCurrency`;
  #L236f84.  v6:= "GBP" @kind object;
  #L236f88.  v7:= 2I;
  #L236f8a.  v8:= "£" @kind object;
  #L236f8e.  call `<init>`(v4, v6, v7, v8) @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L236f94.  `@@net.authorize.acceptsdk.util.SDKCurrency.GBP` @type ^`net.authorize.acceptsdk.util.SDKCurrency` := v4 @kind object;
  #L236f98.  v6:= new `net.authorize.acceptsdk.util.SDKCurrency`;
  #L236f9c.  v8:= "USD" @kind object;
  #L236fa0.  v9:= 3I;
  #L236fa2.  call `<init>`(v6, v8, v9, v3) @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L236fa8.  `@@net.authorize.acceptsdk.util.SDKCurrency.USD` @type ^`net.authorize.acceptsdk.util.SDKCurrency` := v6 @kind object;
  #L236fac.  v3:= 4I;
  #L236fae.  v3:= new `net.authorize.acceptsdk.util.SDKCurrency`[v3];
  #L236fb2.  v3[v2]:= v0 @kind object;
  #L236fb6.  v3[v5]:= v1 @kind object;
  #L236fba.  v3[v7]:= v4 @kind object;
  #L236fbe.  v3[v9]:= v6 @kind object;
  #L236fc2.  `@@net.authorize.acceptsdk.util.SDKCurrency.$VALUES` @type ^`net.authorize.acceptsdk.util.SDKCurrency`[] := v3 @kind object;
  #L236fc6.  return @kind void;
}
procedure `void` `<init>`(`net.authorize.acceptsdk.util.SDKCurrency` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object @name `symbol`) @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L236fd8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L236fde.  v0.`net.authorize.acceptsdk.util.SDKCurrency.symbol` @type ^`java.lang.String` := v3 @kind object;
  #L236fe2.  return @kind void;
}
procedure `java.lang.String`[] `names`() @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.names:()[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L236e88.  call temp:= `values`() @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.values:()[Lnet/authorize/acceptsdk/util/SDKCurrency;` @kind static;
  #L236e8e.  v0:= temp @kind object;
  #L236e90.  v1:= length @variable v0;
  #L236e92.  v1:= new `java.lang.String`[v1];
  #L236e96.  v2:= 0I;
  #L236e98.  v3:= length @variable v0;
  #L236e9a.  if v2 >= v3 then goto L236eb4;
  #L236e9e.  v3:= v0[v2] @kind object;
  #L236ea2.  call temp:= `name`(v3) @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.name:()Ljava/lang/String;` @kind virtual;
  #L236ea8.  v3:= temp @kind object;
  #L236eaa.  v1[v2]:= v3 @kind object;
  #L236eae.  v2:= v2 + 1;
  #L236eb2.  goto L236e98;
  #L236eb4.  return v1 @kind object;
}
procedure `java.lang.String`[] `symbols`() @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.symbols:()[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L236ec8.  call temp:= `values`() @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.values:()[Lnet/authorize/acceptsdk/util/SDKCurrency;` @kind static;
  #L236ece.  v0:= temp @kind object;
  #L236ed0.  v1:= length @variable v0;
  #L236ed2.  v1:= new `java.lang.String`[v1];
  #L236ed6.  v2:= 0I;
  #L236ed8.  v3:= length @variable v0;
  #L236eda.  if v2 >= v3 then goto L236ef4;
  #L236ede.  v3:= v0[v2] @kind object;
  #L236ee2.  call temp:= `symbol`(v3) @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.symbol:()Ljava/lang/String;` @kind virtual;
  #L236ee8.  v3:= temp @kind object;
  #L236eea.  v1[v2]:= v3 @kind object;
  #L236eee.  v2:= v2 + 1;
  #L236ef2.  goto L236ed8;
  #L236ef4.  return v1 @kind object;
}
procedure `net.authorize.acceptsdk.util.SDKCurrency` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.valueOf:(Ljava/lang/String;)Lnet/authorize/acceptsdk/util/SDKCurrency;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L236f08.  v0:= constclass @type ^`net.authorize.acceptsdk.util.SDKCurrency` @kind object;
  #L236f0c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L236f12.  v0:= temp @kind object;
  #L236f14.  v0:= (`net.authorize.acceptsdk.util.SDKCurrency`) v0 @kind object;
  #L236f18.  return v0 @kind object;
}
procedure `net.authorize.acceptsdk.util.SDKCurrency`[] `values`() @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.values:()[Lnet/authorize/acceptsdk/util/SDKCurrency;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L236f2c.  v0:= `@@net.authorize.acceptsdk.util.SDKCurrency.$VALUES` @type ^`net.authorize.acceptsdk.util.SDKCurrency`[] @kind object;
  #L236f30.  call temp:= `clone`(v0) @signature `[Lnet/authorize/acceptsdk/util/SDKCurrency;.clone:()Ljava/lang/Object;` @kind virtual;
  #L236f36.  v0:= temp @kind object;
  #L236f38.  v0:= (`net.authorize.acceptsdk.util.SDKCurrency`[]) v0 @kind object;
  #L236f3c.  return v0 @kind object;
}
procedure `java.lang.String` `symbol`(`net.authorize.acceptsdk.util.SDKCurrency` v1 @kind this) @signature `Lnet/authorize/acceptsdk/util/SDKCurrency;.symbol:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L236e70.  v0:= v1.`net.authorize.acceptsdk.util.SDKCurrency.symbol` @type ^`java.lang.String` @kind object;
  #L236e74.  return v0 @kind object;
}
