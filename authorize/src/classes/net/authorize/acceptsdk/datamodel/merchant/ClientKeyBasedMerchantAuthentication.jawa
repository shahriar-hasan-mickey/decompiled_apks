record `net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication` @kind class @AccessFlag PUBLIC extends `net.authorize.acceptsdk.datamodel.merchant.AbstractMerchantAuthentication` @kind class {
  `java.lang.String` `net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication.mClientKey` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication` v0 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/ClientKeyBasedMerchantAuthentication;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L234eac.  call `<init>`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/AbstractMerchantAuthentication;.<init>:()V` @kind direct;
  #L234eb2.  return @kind void;
}
procedure `net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication` `createMerchantAuthentication`(`java.lang.String` v2 @kind object @name `loginId`, `java.lang.String` v3 @kind object @name `clientKey`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/ClientKeyBasedMerchantAuthentication;.createMerchantAuthentication:(Ljava/lang/String;Ljava/lang/String;)Lnet/authorize/acceptsdk/datamodel/merchant/ClientKeyBasedMerchantAuthentication;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L234e68.  v0:= new `net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication`;
  #L234e6c.  call `<init>`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/ClientKeyBasedMerchantAuthentication;.<init>:()V` @kind direct;
  #L234e72.  if v2 == 0 then goto L234e7e;
  #L234e76.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L234e7c.  v2:= temp @kind object;
  #L234e7e.  if v3 == 0 then goto L234e8a;
  #L234e82.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L234e88.  v3:= temp @kind object;
  #L234e8a.  v0.`net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication.mApiLoginID` @type ^`java.lang.String` := v2 @kind object;
  #L234e8e.  v0.`net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication.mClientKey` @type ^`java.lang.String` := v3 @kind object;
  #L234e92.  v1:= `@@net.authorize.acceptsdk.datamodel.merchant.MerchantAuthenticationType.CLIENT_KEY` @type ^`net.authorize.acceptsdk.datamodel.merchant.MerchantAuthenticationType` @kind object;
  #L234e96.  v0.`net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication.merchantAuthenticationType` @type ^`net.authorize.acceptsdk.datamodel.merchant.MerchantAuthenticationType` := v1 @kind object;
  #L234e9a.  return v0 @kind object;
}
procedure `java.lang.String` `getClientKey`(`net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication` v1 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/ClientKeyBasedMerchantAuthentication;.getClientKey:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234e50.  v0:= v1.`net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication.mClientKey` @type ^`java.lang.String` @kind object;
  #L234e54.  return v0 @kind object;
}
procedure `boolean` `validateMerchantAuthentication`(`net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication` v2 @kind this, `net.authorize.acceptsdk.ValidationCallback` v3 @kind object @name `callback`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/ClientKeyBasedMerchantAuthentication;.validateMerchantAuthentication:(Lnet/authorize/acceptsdk/ValidationCallback;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L234df0.  v0:= v2.`net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication.mApiLoginID` @type ^`java.lang.String` @kind object;
  #L234df4.  call temp:= `isValidString`(v0) @signature `Lnet/authorize/acceptsdk/ValidationManager;.isValidString:(Ljava/lang/String;)Z` @kind static;
  #L234dfa.  v0:= temp;
  #L234dfc.  v1:= 0I;
  #L234dfe.  if v0 != 0 then goto L234e16;
  #L234e02.  v0:= `@@net.authorize.acceptsdk.datamodel.error.SDKErrorCode.E_WC_10` @type ^`net.authorize.acceptsdk.datamodel.error.SDKErrorCode` @kind object;
  #L234e06.  call temp:= `createErrorResponse`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;.createErrorResponse:(Lnet/authorize/acceptsdk/datamodel/error/SDKErrorCode;)Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;` @kind static;
  #L234e0c.  v0:= temp @kind object;
  #L234e0e.  call `OnValidationFailed`(v3, v0) @signature `Lnet/authorize/acceptsdk/ValidationCallback;.OnValidationFailed:(Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;)V` @kind interface;
  #L234e14.  return v1;
  #L234e16.  v0:= v2.`net.authorize.acceptsdk.datamodel.merchant.ClientKeyBasedMerchantAuthentication.mClientKey` @type ^`java.lang.String` @kind object;
  #L234e1a.  call temp:= `isValidString`(v0) @signature `Lnet/authorize/acceptsdk/ValidationManager;.isValidString:(Ljava/lang/String;)Z` @kind static;
  #L234e20.  v0:= temp;
  #L234e22.  if v0 != 0 then goto L234e3a;
  #L234e26.  v0:= `@@net.authorize.acceptsdk.datamodel.error.SDKErrorCode.E_WC_18` @type ^`net.authorize.acceptsdk.datamodel.error.SDKErrorCode` @kind object;
  #L234e2a.  call temp:= `createErrorResponse`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;.createErrorResponse:(Lnet/authorize/acceptsdk/datamodel/error/SDKErrorCode;)Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;` @kind static;
  #L234e30.  v0:= temp @kind object;
  #L234e32.  call `OnValidationFailed`(v3, v0) @signature `Lnet/authorize/acceptsdk/ValidationCallback;.OnValidationFailed:(Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;)V` @kind interface;
  #L234e38.  return v1;
  #L234e3a.  v0:= 1I;
  #L234e3c.  return v0;
}
