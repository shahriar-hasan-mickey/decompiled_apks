record `net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication` @kind class @AccessFlag PUBLIC extends `net.authorize.acceptsdk.datamodel.merchant.AbstractMerchantAuthentication` @kind class {
  `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` `net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication.mFingerPrintData` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication` v0 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintBasedMerchantAuthentication;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L234f78.  call `<init>`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/AbstractMerchantAuthentication;.<init>:()V` @kind direct;
  #L234f7e.  return @kind void;
}
procedure `net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication` `createMerchantAuthentication`(`java.lang.String` v2 @kind object @name `loginId`, `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v3 @kind object @name `fingerPrintData`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintBasedMerchantAuthentication;.createMerchantAuthentication:(Ljava/lang/String;Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;)Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintBasedMerchantAuthentication;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L234f28.  v0:= new `net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication`;
  #L234f2c.  call `<init>`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintBasedMerchantAuthentication;.<init>:()V` @kind direct;
  #L234f32.  if v2 == 0 then goto L234f3e;
  #L234f36.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L234f3c.  v2:= temp @kind object;
  #L234f3e.  v0.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication.mApiLoginID` @type ^`java.lang.String` := v2 @kind object;
  #L234f42.  v0.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication.mFingerPrintData` @type ^`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` := v3 @kind object;
  #L234f46.  v1:= `@@net.authorize.acceptsdk.datamodel.merchant.MerchantAuthenticationType.FINGERPRINT` @type ^`net.authorize.acceptsdk.datamodel.merchant.MerchantAuthenticationType` @kind object;
  #L234f4a.  v0.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication.merchantAuthenticationType` @type ^`net.authorize.acceptsdk.datamodel.merchant.MerchantAuthenticationType` := v1 @kind object;
  #L234f4e.  return v0 @kind object;
}
procedure `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` `getFingerPrintData`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication` v1 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintBasedMerchantAuthentication;.getFingerPrintData:()Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234f60.  v0:= v1.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication.mFingerPrintData` @type ^`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` @kind object;
  #L234f64.  return v0 @kind object;
}
procedure `void` `setFingerPrintData`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication` v0 @kind this, `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v1 @kind object @name `fingerPrintData`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintBasedMerchantAuthentication;.setFingerPrintData:(Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;)V` @AccessFlag PUBLIC {
    temp;

  #L234f90.  v0.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication.mFingerPrintData` @type ^`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` := v1 @kind object;
  #L234f94.  return @kind void;
}
procedure `boolean` `validateMerchantAuthentication`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication` v2 @kind this, `net.authorize.acceptsdk.ValidationCallback` v3 @kind object @name `callback`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintBasedMerchantAuthentication;.validateMerchantAuthentication:(Lnet/authorize/acceptsdk/ValidationCallback;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L234ec4.  v0:= v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication.mApiLoginID` @type ^`java.lang.String` @kind object;
  #L234ec8.  call temp:= `isValidString`(v0) @signature `Lnet/authorize/acceptsdk/ValidationManager;.isValidString:(Ljava/lang/String;)Z` @kind static;
  #L234ece.  v0:= temp;
  #L234ed0.  v1:= 0I;
  #L234ed2.  if v0 != 0 then goto L234eea;
  #L234ed6.  v0:= `@@net.authorize.acceptsdk.datamodel.error.SDKErrorCode.E_WC_10` @type ^`net.authorize.acceptsdk.datamodel.error.SDKErrorCode` @kind object;
  #L234eda.  call temp:= `createErrorResponse`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;.createErrorResponse:(Lnet/authorize/acceptsdk/datamodel/error/SDKErrorCode;)Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;` @kind static;
  #L234ee0.  v0:= temp @kind object;
  #L234ee2.  call `OnValidationFailed`(v3, v0) @signature `Lnet/authorize/acceptsdk/ValidationCallback;.OnValidationFailed:(Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;)V` @kind interface;
  #L234ee8.  return v1;
  #L234eea.  v0:= v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintBasedMerchantAuthentication.mFingerPrintData` @type ^`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` @kind object;
  #L234eee.  if v0 != 0 then goto L234f06;
  #L234ef2.  v0:= `@@net.authorize.acceptsdk.datamodel.error.SDKErrorCode.E_WC_04` @type ^`net.authorize.acceptsdk.datamodel.error.SDKErrorCode` @kind object;
  #L234ef6.  call temp:= `createErrorResponse`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;.createErrorResponse:(Lnet/authorize/acceptsdk/datamodel/error/SDKErrorCode;)Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;` @kind static;
  #L234efc.  v0:= temp @kind object;
  #L234efe.  call `OnValidationFailed`(v3, v0) @signature `Lnet/authorize/acceptsdk/ValidationCallback;.OnValidationFailed:(Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;)V` @kind interface;
  #L234f04.  return v1;
  #L234f06.  call temp:= `validateFingerPrint`(v0, v3) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.validateFingerPrint:(Lnet/authorize/acceptsdk/ValidationCallback;)Z` @kind virtual;
  #L234f0c.  v0:= temp;
  #L234f0e.  if v0 != 0 then goto L234f14;
  #L234f12.  return v1;
  #L234f14.  v0:= 1I;
  #L234f16.  return v0;
}
