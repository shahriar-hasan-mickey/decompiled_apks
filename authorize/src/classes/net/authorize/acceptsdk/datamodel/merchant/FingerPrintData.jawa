record `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface {
  `double` `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.DEFAULT_AMOUNT` @AccessFlag PRIVATE_FINAL;
  `double` `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.amount` @AccessFlag PRIVATE;
  `java.lang.String` `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.currencyCode` @AccessFlag PRIVATE;
  `java.lang.String` `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.hashValue` @AccessFlag PRIVATE;
  `java.lang.String` `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.sequence` @AccessFlag PRIVATE;
  `long` `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.timestamp` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v2 @kind this, `net.authorize.acceptsdk.datamodel.merchant.FingerPrintData$Builder` v3 @kind object @name `builder`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.<init>:(Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L235240.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L235246.  v0:= -99999.99D;
  #L235250.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.DEFAULT_AMOUNT` @type ^`double` := v0 @kind wide;
  #L235254.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.amount` @type ^`double` := v0 @kind wide;
  #L235258.  call temp:= `access$000`(v3) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;.access$000:(Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;)Ljava/lang/String;` @kind static;
  #L23525e.  v0:= temp @kind object;
  #L235260.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.hashValue` @type ^`java.lang.String` := v0 @kind object;
  #L235264.  if v0 == 0 then goto L235274;
  #L235268.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L23526e.  v0:= temp @kind object;
  #L235270.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.hashValue` @type ^`java.lang.String` := v0 @kind object;
  #L235274.  call temp:= `access$100`(v3) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;.access$100:(Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;)J` @kind static;
  #L23527a.  v0:= temp @kind wide;
  #L23527c.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.timestamp` @type ^`long` := v0 @kind wide;
  #L235280.  call temp:= `access$200`(v3) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;.access$200:(Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;)Ljava/lang/String;` @kind static;
  #L235286.  v0:= temp @kind object;
  #L235288.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.sequence` @type ^`java.lang.String` := v0 @kind object;
  #L23528c.  if v0 == 0 then goto L23529c;
  #L235290.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L235296.  v0:= temp @kind object;
  #L235298.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.sequence` @type ^`java.lang.String` := v0 @kind object;
  #L23529c.  call temp:= `access$300`(v3) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;.access$300:(Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;)Ljava/lang/String;` @kind static;
  #L2352a2.  v0:= temp @kind object;
  #L2352a4.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.currencyCode` @type ^`java.lang.String` := v0 @kind object;
  #L2352a8.  if v0 == 0 then goto L2352b8;
  #L2352ac.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2352b2.  v0:= temp @kind object;
  #L2352b4.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.currencyCode` @type ^`java.lang.String` := v0 @kind object;
  #L2352b8.  call temp:= `access$400`(v3) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;.access$400:(Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData$Builder;)D` @kind static;
  #L2352be.  v0:= temp @kind wide;
  #L2352c0.  v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.amount` @type ^`double` := v0 @kind wide;
  #L2352c4.  return @kind void;
}
procedure `double` `getAmount`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v2 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.getAmount:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L235188.  v0:= v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.amount` @type ^`double` @kind wide;
  #L23518c.  return v0 @kind wide;
}
procedure `java.lang.String` `getAmountString`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v2 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.getAmountString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2351a0.  v0:= v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.amount` @type ^`double` @kind wide;
  #L2351a4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(D)Ljava/lang/String;` @kind static;
  #L2351aa.  v0:= temp @kind object;
  #L2351ac.  return v0 @kind object;
}
procedure `java.lang.String` `getCurrencyCode`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v1 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.getCurrencyCode:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2351c0.  v0:= v1.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.currencyCode` @type ^`java.lang.String` @kind object;
  #L2351c4.  return v0 @kind object;
}
procedure `java.lang.String` `getHashValue`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v1 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.getHashValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2351d8.  v0:= v1.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.hashValue` @type ^`java.lang.String` @kind object;
  #L2351dc.  return v0 @kind object;
}
procedure `java.lang.String` `getSequence`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v1 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.getSequence:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2351f0.  v0:= v1.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.sequence` @type ^`java.lang.String` @kind object;
  #L2351f4.  return v0 @kind object;
}
procedure `long` `getTimestamp`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v2 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.getTimestamp:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L235228.  v0:= v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.timestamp` @type ^`long` @kind wide;
  #L23522c.  return v0 @kind wide;
}
procedure `java.lang.String` `getTimestampString`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v2 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.getTimestampString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L235208.  v0:= v2.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.timestamp` @type ^`long` @kind wide;
  #L23520c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(J)Ljava/lang/String;` @kind static;
  #L235212.  v0:= temp @kind object;
  #L235214.  return v0 @kind object;
}
procedure `void` `setAmount`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v0 @kind this, `double` v1 @name `amount`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.setAmount:(D)V` @AccessFlag PUBLIC {
    temp;

  #L2352d8.  v0.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.amount` @type ^`double` := v1 @kind wide;
  #L2352dc.  return @kind void;
}
procedure `void` `setCurrencyCode`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v0 @kind this, `java.lang.String` v1 @kind object @name `currencyCode`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.setCurrencyCode:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L2352f0.  v0.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.currencyCode` @type ^`java.lang.String` := v1 @kind object;
  #L2352f4.  return @kind void;
}
procedure `void` `setHashValue`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v0 @kind this, `java.lang.String` v1 @kind object @name `hashValue`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.setHashValue:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L235308.  v0.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.hashValue` @type ^`java.lang.String` := v1 @kind object;
  #L23530c.  return @kind void;
}
procedure `void` `setSequence`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v0 @kind this, `java.lang.String` v1 @kind object @name `sequence`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.setSequence:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L235320.  v0.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.sequence` @type ^`java.lang.String` := v1 @kind object;
  #L235324.  return @kind void;
}
procedure `void` `setTimestamp`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v0 @kind this, `long` v1 @name `timestamp`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.setTimestamp:(J)V` @AccessFlag PUBLIC {
    temp;

  #L235338.  v0.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.timestamp` @type ^`long` := v1 @kind wide;
  #L23533c.  return @kind void;
}
procedure `boolean` `validateFingerPrint`(`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData` v6 @kind this, `net.authorize.acceptsdk.ValidationCallback` v7 @kind object @name `callback`) @signature `Lnet/authorize/acceptsdk/datamodel/merchant/FingerPrintData;.validateFingerPrint:(Lnet/authorize/acceptsdk/ValidationCallback;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2350a4.  v0:= v6.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.hashValue` @type ^`java.lang.String` @kind object;
  #L2350a8.  call temp:= `isValidString`(v0) @signature `Lnet/authorize/acceptsdk/ValidationManager;.isValidString:(Ljava/lang/String;)Z` @kind static;
  #L2350ae.  v0:= temp;
  #L2350b0.  v1:= 0I;
  #L2350b2.  if v0 != 0 then goto L2350ca;
  #L2350b6.  v0:= `@@net.authorize.acceptsdk.datamodel.error.SDKErrorCode.E_WC_09` @type ^`net.authorize.acceptsdk.datamodel.error.SDKErrorCode` @kind object;
  #L2350ba.  call temp:= `createErrorResponse`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;.createErrorResponse:(Lnet/authorize/acceptsdk/datamodel/error/SDKErrorCode;)Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;` @kind static;
  #L2350c0.  v0:= temp @kind object;
  #L2350c2.  call `OnValidationFailed`(v7, v0) @signature `Lnet/authorize/acceptsdk/ValidationCallback;.OnValidationFailed:(Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;)V` @kind interface;
  #L2350c8.  return v1;
  #L2350ca.  v2:= v6.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.timestamp` @type ^`long` @kind wide;
  #L2350ce.  call temp:= `isValidTimeStamp`(v2) @signature `Lnet/authorize/acceptsdk/ValidationManager;.isValidTimeStamp:(J)Z` @kind static;
  #L2350d4.  v0:= temp;
  #L2350d6.  if v0 != 0 then goto L2350ee;
  #L2350da.  v0:= `@@net.authorize.acceptsdk.datamodel.error.SDKErrorCode.E_WC_11` @type ^`net.authorize.acceptsdk.datamodel.error.SDKErrorCode` @kind object;
  #L2350de.  call temp:= `createErrorResponse`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;.createErrorResponse:(Lnet/authorize/acceptsdk/datamodel/error/SDKErrorCode;)Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;` @kind static;
  #L2350e4.  v0:= temp @kind object;
  #L2350e6.  call `OnValidationFailed`(v7, v0) @signature `Lnet/authorize/acceptsdk/ValidationCallback;.OnValidationFailed:(Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;)V` @kind interface;
  #L2350ec.  return v1;
  #L2350ee.  v0:= v6.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.sequence` @type ^`java.lang.String` @kind object;
  #L2350f2.  if v0 == 0 then goto L235116;
  #L2350f6.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2350fc.  v0:= temp;
  #L2350fe.  if v0 == 0 then goto L235116;
  #L235102.  v0:= `@@net.authorize.acceptsdk.datamodel.error.SDKErrorCode.E_WC_12` @type ^`net.authorize.acceptsdk.datamodel.error.SDKErrorCode` @kind object;
  #L235106.  call temp:= `createErrorResponse`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;.createErrorResponse:(Lnet/authorize/acceptsdk/datamodel/error/SDKErrorCode;)Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;` @kind static;
  #L23510c.  v0:= temp @kind object;
  #L23510e.  call `OnValidationFailed`(v7, v0) @signature `Lnet/authorize/acceptsdk/ValidationCallback;.OnValidationFailed:(Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;)V` @kind interface;
  #L235114.  return v1;
  #L235116.  v0:= v6.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.currencyCode` @type ^`java.lang.String` @kind object;
  #L23511a.  if v0 == 0 then goto L23513e;
  #L23511e.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L235124.  v0:= temp;
  #L235126.  if v0 == 0 then goto L23513e;
  #L23512a.  v0:= `@@net.authorize.acceptsdk.datamodel.error.SDKErrorCode.E_WC_13` @type ^`net.authorize.acceptsdk.datamodel.error.SDKErrorCode` @kind object;
  #L23512e.  call temp:= `createErrorResponse`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;.createErrorResponse:(Lnet/authorize/acceptsdk/datamodel/error/SDKErrorCode;)Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;` @kind static;
  #L235134.  v0:= temp @kind object;
  #L235136.  call `OnValidationFailed`(v7, v0) @signature `Lnet/authorize/acceptsdk/ValidationCallback;.OnValidationFailed:(Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;)V` @kind interface;
  #L23513c.  return v1;
  #L23513e.  v2:= v6.`net.authorize.acceptsdk.datamodel.merchant.FingerPrintData.amount` @type ^`double` @kind wide;
  #L235142.  v4:= -99999.99D;
  #L23514c.  v0:= dcmpl(v2, v4);
  #L235150.  if v0 == 0 then goto L235174;
  #L235154.  call temp:= `isValidAmount`(v2) @signature `Lnet/authorize/acceptsdk/ValidationManager;.isValidAmount:(D)Z` @kind static;
  #L23515a.  v0:= temp;
  #L23515c.  if v0 != 0 then goto L235174;
  #L235160.  v0:= `@@net.authorize.acceptsdk.datamodel.error.SDKErrorCode.E_WC_13` @type ^`net.authorize.acceptsdk.datamodel.error.SDKErrorCode` @kind object;
  #L235164.  call temp:= `createErrorResponse`(v0) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;.createErrorResponse:(Lnet/authorize/acceptsdk/datamodel/error/SDKErrorCode;)Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;` @kind static;
  #L23516a.  v0:= temp @kind object;
  #L23516c.  call `OnValidationFailed`(v7, v0) @signature `Lnet/authorize/acceptsdk/ValidationCallback;.OnValidationFailed:(Lnet/authorize/acceptsdk/datamodel/transaction/response/ErrorTransactionResponse;)V` @kind interface;
  #L235172.  return v1;
  #L235174.  v0:= 1I;
  #L235176.  return v0;
}
