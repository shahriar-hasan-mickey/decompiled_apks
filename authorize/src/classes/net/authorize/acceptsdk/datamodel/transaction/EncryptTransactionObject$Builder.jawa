record `net.authorize.acceptsdk.datamodel.transaction.EncryptTransactionObject$Builder` @kind class @AccessFlag PUBLIC extends `net.authorize.acceptsdk.datamodel.transaction.TransactionObject$Builder` @kind class {
}
procedure `void` `<init>`(`net.authorize.acceptsdk.datamodel.transaction.EncryptTransactionObject$Builder` v1 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/EncryptTransactionObject$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L235934.  call `<init>`(v1) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/TransactionObject$Builder;.<init>:()V` @kind direct;
  #L23593a.  v0:= `@@net.authorize.acceptsdk.datamodel.transaction.TransactionType.SDK_TRANSACTION_ENCRYPTION` @type ^`net.authorize.acceptsdk.datamodel.transaction.TransactionType` @kind object;
  #L23593e.  v1.`net.authorize.acceptsdk.datamodel.transaction.EncryptTransactionObject$Builder.transactionType` @type ^`net.authorize.acceptsdk.datamodel.transaction.TransactionType` := v0 @kind object;
  #L235942.  return @kind void;
}
procedure `net.authorize.acceptsdk.datamodel.transaction.EncryptTransactionObject` `build`(`net.authorize.acceptsdk.datamodel.transaction.EncryptTransactionObject$Builder` v2 @kind this) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/EncryptTransactionObject$Builder;.build:()Lnet/authorize/acceptsdk/datamodel/transaction/EncryptTransactionObject;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L235914.  v0:= new `net.authorize.acceptsdk.datamodel.transaction.EncryptTransactionObject`;
  #L235918.  v1:= 0I;
  #L23591a.  call `<init>`(v0, v2, v1) @signature `Lnet/authorize/acceptsdk/datamodel/transaction/EncryptTransactionObject;.<init>:(Lnet/authorize/acceptsdk/datamodel/transaction/EncryptTransactionObject$Builder;Lnet/authorize/acceptsdk/datamodel/transaction/EncryptTransactionObject$1;)V` @kind direct;
  #L235920.  return v0 @kind object;
}
